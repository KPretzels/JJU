# -*- coding: utf-8 -*-
"""07-EnumOutputParser.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HjINPFihHHsddkX5NKQLlat6NZP_H2oc

* 열거형 파싱 : 문자열 출력을 미리 정의된 Enum 값으로 변환합니다.
* 타입 안정성 : 파싱된 결과가 반드시 정의된 Enum 값 중 하나임을 보장합니다.
* 유연성 : 공백이나 줄바꿈 문자를 자동으로 처리합니다.
"""

from langchain.output_parsers.enum import EnumOutputParser
from enum import Enum

class Clolrs(Enum):
  RED = "빨간색"
  GREEN = "초록색"
  BLUE = "파란색"

parser = EnumOutputParser(enum = Clolrs)

parser.get_format_instructions()

from langchain_core.prompts import PromptTemplate

prompt = PromptTemplate.from_template(
    """
    다음의 물체는 어떤 색깔인가요?

    Object: {object}

    Instructions: {instructions}

    **중요:** 아래 나열된 옵션 중에서 하나만 선택하여 응답하세요. 다른 텍스트는 포함하지 마세요.
    """
).partial(instructions = parser.get_format_instructions())

!pip install -qU langchain_openai

from langchain_openai import ChatOpenAI

chain = prompt | ChatOpenAI(model="gpt-4o") | parser

response = chain.invoke({"object": "잔디"})
print(response)

"""LLM - template"""

from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain

llm = ChatOpenAI(model="gpt-4", temperature=0)

# 3. LLM 체인 생성
chain = LLMChain(prompt=prompt, llm = llm)

# 4. 체인 실행
response = chain.run({"object": "책상"})
print(response)