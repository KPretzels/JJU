*****[requirements.txt]*****

TextLoader
DirectoryLoader
PyPDFLoader
UnstructuredCSVLoader
xml.etree.ElementTree
pandas
os
bs4
langchain-community
re
shutil
langchain_openai

*****[appendix-keywords.txt]*****

Semantic Search

정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.
예시: 사용자가 "태양계 행성"이라고 검색하면, "목성", "화성" 등과 같이 관련된 행성에 대한 정보를 반환합니다.
연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝

Embedding

정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.
예시: "사과"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.
연관키워드: 자연어 처리, 벡터화, 딥러닝

Token

정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다.
예시: 문장 "나는 학교에 간다"를 "나는", "학교에", "간다"로 분할합니다.
연관키워드: 토큰화, 자연어 처리, 구문 분석

Tokenizer

정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다.
예시: "I love programming."이라는 문장을 ["I", "love", "programming", "."]으로 분할합니다.
연관키워드: 토큰화, 자연어 처리, 구문 분석

VectorStore

정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다.
예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다.
연관키워드: 임베딩, 데이터베이스, 벡터화

SQL

정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다.
예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다.
연관키워드: 데이터베이스, 쿼리, 데이터 관리

CSV

정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다.
예시: 이름, 나이, 직업이라는 헤더를 가진 CSV 파일에는 홍길동, 30, 개발자와 같은 데이터가 포함될 수 있습니다.
연관키워드: 데이터 형식, 파일 처리, 데이터 교환

JSON

정의: JSON(JavaScript Object Notation)은 경량의 데이터 교환 형식으로, 사람과 기계 모두에게 읽기 쉬운 텍스트를 사용하여 데이터 객체를 표현합니다.
예시: {"이름": "홍길동", "나이": 30, "직업": "개발자"}는 JSON 형식의 데이터입니다.
연관키워드: 데이터 교환, 웹 개발, API

Transformer

정의: 트랜스포머는 자연어 처리에서 사용되는 딥러닝 모델의 한 유형으로, 주로 번역, 요약, 텍스트 생성 등에 사용됩니다. 이는 Attention 메커니즘을 기반으로 합니다.
예시: 구글 번역기는 트랜스포머 모델을 사용하여 다양한 언어 간의 번역을 수행합니다.
연관키워드: 딥러닝, 자연어 처리, Attention

HuggingFace

정의: HuggingFace는 자연어 처리를 위한 다양한 사전 훈련된 모델과 도구를 제공하는 라이브러리입니다. 이는 연구자와 개발자들이 쉽게 NLP 작업을 수행할 수 있도록 돕습니다.
예시: HuggingFace의 Transformers 라이브러리를 사용하여 감정 분석, 텍스트 생성 등의 작업을 수행할 수 있습니다.
연관키워드: 자연어 처리, 딥러닝, 라이브러리

Digital Transformation

정의: 디지털 변환은 기술을 활용하여 기업의 서비스, 문화, 운영을 혁신하는 과정입니다. 이는 비즈니스 모델을 개선하고 디지털 기술을 통해 경쟁력을 높이는 데 중점을 둡니다.
예시: 기업이 클라우드 컴퓨팅을 도입하여 데이터 저장과 처리를 혁신하는 것은 디지털 변환의 예입니다.
연관키워드: 혁신, 기술, 비즈니스 모델

Crawling

정의: 크롤링은 자동화된 방식으로 웹 페이지를 방문하여 데이터를 수집하는 과정입니다. 이는 검색 엔진 최적화나 데이터 분석에 자주 사용됩니다.
예시: 구글 검색 엔진이 인터넷 상의 웹사이트를 방문하여 콘텐츠를 수집하고 인덱싱하는 것이 크롤링입니다.
연관키워드: 데이터 수집, 웹 스크래핑, 검색 엔진

Word2Vec

정의: Word2Vec은 단어를 벡터 공간에 매핑하여 단어 간의 의미적 관계를 나타내는 자연어 처리 기술입니다. 이는 단어의 문맥적 유사성을 기반으로 벡터를 생성합니다.
예시: Word2Vec 모델에서 "왕"과 "여왕"은 서로 가까운 위치에 벡터로 표현됩니다.
연관키워드: 자연어 처리, 임베딩, 의미론적 유사성
LLM (Large Language Model)

정의: LLM은 대규모의 텍스트 데이터로 훈련된 큰 규모의 언어 모델을 의미합니다. 이러한 모델은 다양한 자연어 이해 및 생성 작업에 사용됩니다.
예시: OpenAI의 GPT 시리즈는 대표적인 대규모 언어 모델입니다.
연관키워드: 자연어 처리, 딥러닝, 텍스트 생성

FAISS (Facebook AI Similarity Search)

정의: FAISS는 페이스북에서 개발한 고속 유사성 검색 라이브러리로, 특히 대규모 벡터 집합에서 유사 벡터를 효과적으로 검색할 수 있도록 설계되었습니다.
예시: 수백만 개의 이미지 벡터 중에서 비슷한 이미지를 빠르게 찾는 데 FAISS가 사용될 수 있습니다.
연관키워드: 벡터 검색, 머신러닝, 데이터베이스 최적화

Open Source

정의: 오픈 소스는 소스 코드가 공개되어 누구나 자유롭게 사용, 수정, 배포할 수 있는 소프트웨어를 의미합니다. 이는 협업과 혁신을 촉진하는 데 중요한 역할을 합니다.
예시: 리눅스 운영 체제는 대표적인 오픈 소스 프로젝트입니다.
연관키워드: 소프트웨어 개발, 커뮤니티, 기술 협업

Structured Data

정의: 구조화된 데이터는 정해진 형식이나 스키마에 따라 조직된 데이터입니다. 이는 데이터베이스, 스프레드시트 등에서 쉽게 검색하고 분석할 수 있습니다.
예시: 관계형 데이터베이스에 저장된 고객 정보 테이블은 구조화된 데이터의 예입니다.
연관키워드: 데이터베이스, 데이터 분석, 데이터 모델링

Parser

정의: 파서는 주어진 데이터(문자열, 파일 등)를 분석하여 구조화된 형태로 변환하는 도구입니다. 이는 프로그래밍 언어의 구문 분석이나 파일 데이터 처리에 사용됩니다.
예시: HTML 문서를 구문 분석하여 웹 페이지의 DOM 구조를 생성하는 것은 파싱의 한 예입니다.
연관키워드: 구문 분석, 컴파일러, 데이터 처리

TF-IDF (Term Frequency-Inverse Document Frequency)

정의: TF-IDF는 문서 내에서 단어의 중요도를 평가하는 데 사용되는 통계적 척도입니다. 이는 문서 내 단어의 빈도와 전체 문서 집합에서 그 단어의 희소성을 고려합니다.
예시: 많은 문서에서 자주 등장하지 않는 단어는 높은 TF-IDF 값을 가집니다.
연관키워드: 자연어 처리, 정보 검색, 데이터 마이닝

Deep Learning

정의: 딥러닝은 인공신경망을 이용하여 복잡한 문제를 해결하는 머신러닝의 한 분야입니다. 이는 데이터에서 고수준의 표현을 학습하는 데 중점을 둡니다.
예시: 이미지 인식, 음성 인식, 자연어 처리 등에서 딥러닝 모델이 활용됩니다.
연관키워드: 인공신경망, 머신러닝, 데이터 분석

Schema

정의: 스키마는 데이터베이스나 파일의 구조를 정의하는 것으로, 데이터가 어떻게 저장되고 조직되는지에 대한 청사진을 제공합니다.
예시: 관계형 데이터베이스의 테이블 스키마는 열 이름, 데이터 타입, 키 제약 조건 등을 정의합니다.
연관키워드: 데이터베이스, 데이터 모델링, 데이터 관리

DataFrame

정의: DataFrame은 행과 열로 이루어진 테이블 형태의 데이터 구조로, 주로 데이터 분석 및 처리에 사용됩니다.
예시: 판다스 라이브러리에서 DataFrame은 다양한 데이터 타입의 열을 가질 수 있으며, 데이터 조작과 분석을 용이하게 합니다.
연관키워드: 데이터 분석, 판다스, 데이터 처리

Attention 메커니즘

정의: Attention 메커니즘은 딥러닝에서 중요한 정보에 더 많은 '주의'를 기울이도록 하는 기법입니다. 이는 주로 시퀀스 데이터(예: 텍스트, 시계열 데이터)에서 사용됩니다.
예시: 번역 모델에서 Attention 메커니즘은 입력 문장의 중요한 부분에 더 집중하여 정확한 번역을 생성합니다.
연관키워드: 딥러닝, 자연어 처리, 시퀀스 모델링

판다스 (Pandas)

정의: 판다스는 파이썬 프로그래밍 언어를 위한 데이터 분석 및 조작 도구를 제공하는 라이브러리입니다. 이는 데이터 분석 작업을 효율적으로 수행할 수 있게 합니다.
예시: 판다스를 사용하여 CSV 파일을 읽고, 데이터를 정제하며, 다양한 분석을 수행할 수 있습니다.
연관키워드: 데이터 분석, 파이썬, 데이터 처리

GPT (Generative Pretrained Transformer)

정의: GPT는 대규모의 데이터셋으로 사전 훈련된 생성적 언어 모델로, 다양한 텍스트 기반 작업에 활용됩니다. 이는 입력된 텍스트에 기반하여 자연스러운 언어를 생성할 수 있습니다.
예시: 사용자가 제공한 질문에 대해 자세한 답변을 생성하는 챗봇은 GPT 모델을 사용할 수 있습니다.
연관키워드: 자연어 처리, 텍스트 생성, 딥러닝

InstructGPT

정의: InstructGPT는 사용자의 지시에 따라 특정한 작업을 수행하기 위해 최적화된 GPT 모델입니다. 이 모델은 보다 정확하고 관련성 높은 결과를 생성하도록 설계되었습니다.
예시: 사용자가 "이메일 초안 작성"과 같은 특정 지시를 제공하면, InstructGPT는 관련 내용을 기반으로 이메일을 작성합니다.
연관키워드: 인공지능, 자연어 이해, 명령 기반 처리

Keyword Search

정의: 키워드 검색은 사용자가 입력한 키워드를 기반으로 정보를 찾는 과정입니다. 이는 대부분의 검색 엔진과 데이터베이스 시스템에서 기본적인 검색 방식으로 사용됩니다.
예시: 사용자가 "커피숍 서울"이라고 검색하면, 관련된 커피숍 목록을 반환합니다.
연관키워드: 검색 엔진, 데이터 검색, 정보 검색

Page Rank

정의: 페이지 랭크는 웹 페이지의 중요도를 평가하는 알고리즘으로, 주로 검색 엔진 결과의 순위를 결정하는 데 사용됩니다. 이는 웹 페이지 간의 링크 구조를 분석하여 평가합니다.
예시: 구글 검색 엔진은 페이지 랭크 알고리즘을 사용하여 검색 결과의 순위를 정합니다.
연관키워드: 검색 엔진 최적화, 웹 분석, 링크 분석

데이터 마이닝

정의: 데이터 마이닝은 대량의 데이터에서 유용한 정보를 발굴하는 과정입니다. 이는 통계, 머신러닝, 패턴 인식 등의 기술을 활용합니다.
예시: 소매업체가 고객 구매 데이터를 분석하여 판매 전략을 수립하는 것은 데이터 마이닝의 예입니다.
연관키워드: 빅데이터, 패턴 인식, 예측 분석

멀티모달 (Multimodal)

정의: 멀티모달은 여러 종류의 데이터 모드(예: 텍스트, 이미지, 소리 등)를 결합하여 처리하는 기술입니다. 이는 서로 다른 형식의 데이터 간의 상호 작용을 통해 보다 풍부하고 정확한 정보를 추출하거나 예측하는 데 사용됩니다.
예시: 이미지와 설명 텍스트를 함께 분석하여 더 정확한 이미지 분류를 수행하는 시스템은 멀티모달 기술의 예입니다.
연관키워드: 데이터 융합, 인공지능, 딥러닝

*****[result.txt]*****

=== PyPDF ===

- 1 -
중소벤처기업부 공고 제2024-629호  2025년도 수출지원기반활용사업 참여기업 1차 모집공고(중소벤처기업부 소관 수출바우처사업)중소벤처기업의수출경쟁력강화를위한「중소벤처기업부수출바우처참여기업1차모집」계획을다음과같이공고합니다.2024년12월30일중소벤처기업부장관 1. 수출바우처 사업 개요□사업목적◦내수및수출중소기업에게디자인개발,홍보·광고,바이어발굴등14개분야수출서비스를종합지원하여수출선도기업으로육성□사업내용◦중소기업이필요할때에다양한수출서비스(마케팅,디자인,인증,전시회참가,지재권획득등)를즉시활용할수있도록바우처*를지급* 바우처 : 서비스 메뉴판 내 다양한 수출 관련 서비스를 이용할 수 있는 가상의 온라인 쿠폰으로 정부지원금(50∼70%)과 기업분담금(50∼30%)으로 구성◦중소기업은바우처를활용하여필요한서비스이용후소요비용정산<수출바우처 발급 및 정산 흐름도> 
운영기관이 바우처 총액(①국고+②기업부담금)을 재원으로 참여기업(선정기업)에 ③바우처(가상의 쿠폰)를 발급하고, 바우처를

=== PyMuPDF ===

- 1 -
중소벤처기업부 공고 제2024-629호  
2025년도 수출지원기반활용사업 참여기업 1차 모집공고
(중소벤처기업부 소관 수출바우처사업)
중소벤처기업의수출경쟁력강화를위한「중소벤처기업부수출바우처
참여기업1차모집」계획을다음과같이공고합니다.
2024년12월30일
중소벤처기업부장관
 1. 수출바우처 사업 개요
□사업목적
◦내수및수출중소기업에게디자인개발, 홍보·광고, 바이어발굴등
14개분야수출서비스를종합지원하여수출선도기업으로육성
□사업내용
◦중소기업이필요할때에다양한수출서비스(마케팅, 디자인, 인증,
전시회참가, 지재권획득등)를즉시활용할수있도록바우처*를지급
* 바우처 : 서비스 메뉴판 내 다양한 수출 관련 서비스를 이용할 수 있는 가상의 
온라인 쿠폰으로 정부지원금(50∼70%)과 기업분담금(50∼30%)으로 구성
◦중소기업은바우처를활용하여필요한서비스이용후소요비용정산
<수출바우처 발급 및 정산 흐름도> 
운영기관이 바우처 총액(①국고+②기업부담금)을 재원으로 참여기업(선정기업)에 
③

=== PyPDFium2 ===

- 1 -

중소벤처기업부 공고 제2024-629호 

2025년도 수출지원기반활용사업 참여기업 1차 모집공고

(중소벤처기업부 소관 수출바우처사업)

중소벤처기업의 수출경쟁력 강화를 위한「중소벤처기업부 수출바우처

참여기업 1차 모집」계획을 다음과 같이 공고합니다.

2024년 12월 30일

중소벤처기업부 장관

1. 수출바우처 사업 개요

□ 사업 목적

◦ 내수 및 수출 중소기업에게 디자인 개발, 홍보·광고, 바이어 발굴 등

14개 분야 수출 서비스를 종합 지원하여 수출 선도기업으로 육성

□ 사업 내용

◦ 중소기업이 필요할 때에 다양한 수출 서비스 (마케팅, 디자인, 인증,

전시회 참가, 지재권 획득 등)를 즉시 활용할 수 있도록 바우처*를 지급

* 바우처 : 서비스 메뉴판 내 다양한 수출 관련 서비스를 이용할 수 있는 가상의 

온라인 쿠폰으로 정부지원금(50∼70%)과 기업분담금(50∼30%)으로 구성

◦ 중소기업은 바우처를 활용하여 필요한 서비스 이용 후 소요

=== PDFMiner ===

중소벤처기업부  공고  제2024-629호   

2025년도  수출지원기반활용사업  참여기업  1차  모집공고
(중소벤처기업부  소관  수출바우처사업)

중소벤처기업의 수출경쟁력 강화를 위한「중소벤처기업부 수출바우처
참여기업 1차 모집」계획을 다음과 같이 공고합니다.

2024년 12월 30일
중소벤처기업부 장관

  1.  수출바우처  사업  개요

□ 사업 목적

◦ 내수 및 수출 중소기업에게 디자인 개발, 홍보·광고, 바이어 발굴 등
14개 분야 수출 서비스를 종합 지원하여 수출 선도기업으로 육성

□ 사업 내용

◦ 중소기업이 필요할 때에 다양한 수출 서비스 (마케팅, 디자인, 인증,
전시회 참가, 지재권 획득 등)를 즉시 활용할 수 있도록 바우처*를 지급

*  바우처  :  서비스  메뉴판  내  다양한  수출  관련  서비스를  이용할  수  있는  가상의 

온라인  쿠폰으로  정부지원금(50∼70%)과  기업분담금(50∼30%)으로  구성

◦ 중소기업은 바우처를 

=== PDFPlumber ===

중소벤처기업부 공고 제2024-629호
2025년도 수출지원기반활용사업 참여기업 1차 모집공고
(중소벤처기업부 소관 수출바우처사업)
중소벤처기업의 수출경쟁력 강화를 위한「중소벤처기업부 수출바우처
참여기업 1차 모집」계획을 다음과 같이 공고합니다.
2024년 12월 30일
중소벤처기업부 장관
1. 수출바우처 사업 개요
□ 사업 목적
◦ 내수 및 수출 중소기업에게 디자인 개발, 홍보·광고, 바이어 발굴 등
14개 분야 수출 서비스를 종합 지원하여 수출 선도기업으로 육성
□ 사업 내용
◦ 중소기업이 필요할 때에 다양한 수출 서비스 (마케팅, 디자인, 인증,
전시회 참가, 지재권 획득 등)를 즉시 활용할 수 있도록 바우처*를 지급
* 바우처 : 서비스 메뉴판 내 다양한 수출 관련 서비스를 이용할 수 있는 가상의
온라인 쿠폰으로 정부지원금(50∼70%)과 기업분담금(50∼30%)으로 구성
◦ 중소기업은 바우처를 활용하여 필요한 서비스 이용 후 소요비용 정산
<수출바우처 발급 및 정산 흐름도>



*****[SECURITY.md]*****

# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 5.1.x   | :white_check_mark: |
| 5.0.x   | :x:                |
| 4.0.x   | :white_check_mark: |
| < 4.0   | :x:                |

## Reporting a Vulnerability

Use this section to tell people how to report a vulnerability.

Tell them where to go, how often they can expect to get an update on a
reported vulnerability, what to expect if the vulnerability is accepted or
declined, etc.


*****[test.md]*****

markdown_text = """
# 🦜️🔗 LangChain

⚡ LLM을 활용한 초스피드 애플리케이션 구축 ⚡

## 빠른 설치

```bash
pip install langchain
빠르게 발전하는 분야의 오픈 소스 프로젝트 입니다. 많관부 🙏

"""

*****[score.md]*****

RAG (Retrieval-Augmented Generation) 시스템에서 PDF 텍스트 추출의 정확성을 평가하기 위해서는 각 PDF 파서가 얼마나 잘 텍스트를 추출했는지를 비교해야 합니다. 이를 위해서는 원본 PDF 문서와 각 파서가 추출한 텍스트를 비교하여 정확성과 일관성을 평가할 수 있습니다. 여기서는 주어진 텍스트 추출 결과를 기반으로 각 파서의 성능을 정량적으로 평가해 보겠습니다.

1. **PyPDF**:
   - 텍스트가 거의 연속적으로 붙어 있어 가독성이 떨어짐.
   - 일부 공백이 누락되어 있어 문장 구분이 어려움.
   - 전체적인 내용은 유지되었으나, 형식적인 측면에서 개선이 필요.

2. **PyMuPDF**:
   - PyPDF와 유사하게 텍스트가 붙어 있는 경향이 있음.
   - 공백이 부족하여 문장과 단락 구분이 어려움.
   - 내용은 잘 유지되었으나, 가독성 측면에서 개선 필요.

3. **PyPDFium2**:
   - 텍스트가 잘 분리되어 있어 가독성이 좋음.
   - 문장과 단락이 명확하게 구분되어 있음.
   - 전체적인 내용과 형식이 잘 유지됨.

4. **PDFMiner**:
   - 텍스트가 잘 분리되어 있으며, 문장과 단락 구분이 명확함.
   - 일부 공백이 과도하게 들어간 부분이 있을 수 있음.
   - 내용과 형식이 잘 유지됨.

5. **PDFPlumber**:
   - 텍스트가 잘 분리되어 있으며, 문장과 단락 구분이 명확함.
   - 전체적인 내용과 형식이 잘 유지됨.
   - 가독성이 매우 좋음.

**정량 평가**:
- **정확성**: 모든 파서가 원본 내용의 정확성을 잘 유지하고 있음.
- **가독성**: PyPDFium2, PDFMiner, PDFPlumber가 가장 가독성이 좋음.
- **형식 유지**: PyPDFium2, PDFMiner, PDFPlumber가 형식을 잘 유지함.

**결론**: PDFPlumber와 PyPDFium2가 가장 우수한 성능을 보였으며, 특히 가독성과 형식 유지 측면에서 뛰어났습니다. PyPDF와 PyMuPDF는 텍스트가 붙어 있어 가독성이 떨어지지만, 내용의 정확성은 유지되었습니다. PDFMiner도 좋은 성능을 보였으나, 일부 공백 처리에서 개선이 필요할 수 있습니다.

*****[01-OpenAI-APIKey.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## OpenAI API 키 발급 및 설정\n",
    "\n",
    "1. OpenAI API 키 발급\n",
    "\n",
    "- [OpenAI API 키 발급방법](https://wikidocs.net/233342) 글을 참고해 주세요.\n",
    "\n",
    "1. `.env` 파일 설정\n",
    "\n",
    "- 프로젝트 루트 디렉토리에 `.env` 파일을 생성합니다.\n",
    "- 파일에 API 키를 다음 형식으로 저장합니다:\n",
    "  `OPENAI_API_KEY` 에 발급받은 API KEY 를 입력합니다.\n",
    "\n",
    "- `.env` 파일에 발급한 API KEY 를 입력합니다.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# LangChain 업데이트\n",
    "# !pip install -r https://raw.githubusercontent.com/teddylee777/langchain-kr/main/requirements.txt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# API KEY를 환경변수로 관리하기 위한 설정 파일\n",
    "from dotenv import load_dotenv\n",
    "\n",
    "# API KEY 정보로드\n",
    "load_dotenv()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "API Key 가 잘 설정되었는지 확인합니다.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "print(f\"[API KEY]\\n{os.environ['OPENAI_API_KEY'][:-15]}\" + \"*\" * 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "설치된 LangChain 버전을 확인합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from importlib.metadata import version\n",
    "\n",
    "print(\"[LangChain 관련 패키지 버전]\")\n",
    "for package_name in [\n",
    "    \"langchain\",\n",
    "    \"langchain-core\",\n",
    "    \"langchain-experimental\",\n",
    "    \"langchain-community\",\n",
    "    \"langchain-openai\",\n",
    "    \"langchain-teddynote\",\n",
    "    \"langchain-huggingface\",\n",
    "    \"langchain-google-genai\",\n",
    "    \"langchain-anthropic\",\n",
    "    \"langchain-cohere\",\n",
    "    \"langchain-chroma\",\n",
    "    \"langchain-elasticsearch\",\n",
    "    \"langchain-upstage\",\n",
    "    \"langchain-cohere\",\n",
    "    \"langchain-milvus\",\n",
    "    \"langchain-text-splitters\",\n",
    "]:\n",
    "    try:\n",
    "        package_version = version(package_name)\n",
    "        print(f\"{package_name}: {package_version}\")\n",
    "    except ImportError:\n",
    "        print(f\"{package_name}: 설치되지 않음\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "py-test",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}


*****[00_01_langSmith.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "bW-Z7O9m13Gm"
   },
   "source": [
    "### note\n",
    "``` python\n",
    "LANGCHAIN_TRACING_V2=true\n",
    "LANGCHAIN_ENDPOINT=\"https://api.smith.langchain.com\"\n",
    "LANGCHAIN_API_KEY=\"\"\n",
    "LANGCHAIN_PROJECT=\"\"\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 14394,
     "status": "ok",
     "timestamp": 1736139545028,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "Nj3v7bz-1Zrk",
    "outputId": "ab847b1a-7927-415e-8161-bcfcbe057b74"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.0 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.5/1.0 MB\u001b[0m \u001b[31m19.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m18.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/50.9 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.9/50.9 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/411.6 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m26.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m454.8/454.8 kB\u001b[0m \u001b[31m23.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m41.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h"
     ]
    }
   ],
   "source": [
    "! pip install -qU langchain langchain-openai"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "Vk3SlKF61vmN"
   },
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.environ[\"OPENAI_API_KEY\"] = \"\"\n",
    "os.environ[\"LANGCHAIN_API_KEY\"] = \"\"\n",
    "os.environ[\"LANGCHAIN_TRACING_V2\"] = \"true\"\n",
    "os.environ[\"LANGCHAIN_ENDPOINT\"] = \"https://api.smith.langchain.com\"\n",
    "os.environ[\"LANGCHAIN_PROJECT\"] = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 12801,
     "status": "ok",
     "timestamp": 1736139372130,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "54N3KL-S4Lva",
    "outputId": "bb7f1b7b-0a36-42e1-a0c8-60d9affad192"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AIMessage(content='Clash of Clans is a popular mobile strategy game developed and published by Supercell. In the game, players build and upgrade their village, train troops, and battle against other players in order to earn resources, trophies, and clan points. Players can also join clans to team up with other players and participate in clan wars. Clash of Clans has a large and active player base, with regular updates and events to keep the gameplay fresh and engaging.', additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 93, 'prompt_tokens': 11, 'total_tokens': 104, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-a76fc142-5fd5-4268-ae54-0671b8641a88-0', usage_metadata={'input_tokens': 11, 'output_tokens': 93, 'total_tokens': 104, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}})"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from langchain_openai import ChatOpenAI\n",
    "\n",
    "# llm = ChatOpenAI()\n",
    "# llm.invoke(\"대답은 한국어로 해줘 \\nHello, world!\")\n",
    "# llm.invoke(\"printf(), scanf() info\")\n",
    "# llm.invoke(\"TransUnet info\")\n",
    "# llm.invoke(\"xlsx\")\n",
    "# llm.invoke(\"clash of clans\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "NTpMyyQn7Szu"
   },
   "outputs": [],
   "source": [
    "from langchain_openai import ChatOpenAI\n",
    "\n",
    "llm = ChatOpenAI(\n",
    "    model = \"gpt-4o\",\n",
    "    temperature = 0,\n",
    "    max_tokens = None,\n",
    "    timeout = None,\n",
    "    max_retries = 2,\n",
    "    api_key = os.environ[\"OPENAI_API_KEY\"]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1158,
     "status": "ok",
     "timestamp": 1736139551249,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "UhoOtMFh7r5f",
    "outputId": "222b09ae-0688-4e99-80fa-bc4b66a98d5e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "content='서울은 대한민국의 수도입니다.' additional_kwargs={'refusal': None} response_metadata={'token_usage': {'completion_tokens': 8, 'prompt_tokens': 12, 'total_tokens': 20, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-2024-08-06', 'system_fingerprint': 'fp_5f20662549', 'finish_reason': 'stop', 'logprobs': None} id='run-257f537d-d170-4f0f-8f22-cd81685a2a33-0' usage_metadata={'input_tokens': 12, 'output_tokens': 8, 'total_tokens': 20, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}\n"
     ]
    }
   ],
   "source": [
    "Response = llm.invoke(\"서울의 수도는?\")\n",
    "print(Response)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyMw0jFiQspgHDqCKUK5yC8H",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[02.LCEL_241226_2_배진우.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "7c6tFq7jQYo7"
   },
   "source": [
    "# 1. API 키 가져오기\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "a0dtxF75QH9v"
   },
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.environ['OPENAI_API_KEY'] = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "executionInfo": {
     "elapsed": 20413,
     "status": "ok",
     "timestamp": 1735189119669,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "b7ebFvpKR2UL",
    "outputId": "0852cd30-e78a-44b4-856b-3b1f17576e83"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting langchain_teddynote\n",
      "  Downloading langchain_teddynote-0.3.40-py3-none-any.whl.metadata (708 bytes)\n",
      "Requirement already satisfied: langchain_core in /usr/local/lib/python3.10/dist-packages (0.3.28)\n",
      "Requirement already satisfied: langchain in /usr/local/lib/python3.10/dist-packages (from langchain_teddynote) (0.3.12)\n",
      "Collecting langgraph (from langchain_teddynote)\n",
      "  Downloading langgraph-0.2.60-py3-none-any.whl.metadata (15 kB)\n",
      "Collecting kiwipiepy (from langchain_teddynote)\n",
      "  Downloading kiwipiepy-0.20.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.1 kB)\n",
      "Collecting rank-bm25 (from langchain_teddynote)\n",
      "  Downloading rank_bm25-0.2.2-py3-none-any.whl.metadata (3.2 kB)\n",
      "Collecting pinecone-client[grpc] (from langchain_teddynote)\n",
      "  Downloading pinecone_client-5.0.1-py3-none-any.whl.metadata (19 kB)\n",
      "Collecting pinecone-text (from langchain_teddynote)\n",
      "  Downloading pinecone_text-0.9.0-py3-none-any.whl.metadata (10 kB)\n",
      "Collecting olefile (from langchain_teddynote)\n",
      "  Downloading olefile-0.47-py2.py3-none-any.whl.metadata (9.7 kB)\n",
      "Collecting pdf2image (from langchain_teddynote)\n",
      "  Downloading pdf2image-1.17.0-py3-none-any.whl.metadata (6.2 kB)\n",
      "Requirement already satisfied: openai in /usr/local/lib/python3.10/dist-packages (from langchain_teddynote) (1.58.1)\n",
      "Collecting anthropic (from langchain_teddynote)\n",
      "  Downloading anthropic-0.42.0-py3-none-any.whl.metadata (23 kB)\n",
      "Collecting deepl (from langchain_teddynote)\n",
      "  Downloading deepl-1.20.0-py3-none-any.whl.metadata (28 kB)\n",
      "Collecting feedparser (from langchain_teddynote)\n",
      "  Downloading feedparser-6.0.11-py3-none-any.whl.metadata (2.4 kB)\n",
      "Collecting tavily-python (from langchain_teddynote)\n",
      "  Downloading tavily_python-0.5.0-py3-none-any.whl.metadata (11 kB)\n",
      "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from langchain_teddynote) (2.2.2)\n",
      "Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (6.0.2)\n",
      "Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (1.33)\n",
      "Requirement already satisfied: langsmith<0.3,>=0.1.125 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (0.2.3)\n",
      "Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (24.2)\n",
      "Requirement already satisfied: pydantic<3.0.0,>=2.5.2 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (2.10.3)\n",
      "Requirement already satisfied: tenacity!=8.4.0,<10.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (9.0.0)\n",
      "Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain_core) (4.12.2)\n",
      "Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain_core) (3.0.0)\n",
      "Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain_core) (0.28.1)\n",
      "Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain_core) (3.10.12)\n",
      "Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain_core) (2.32.3)\n",
      "Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain_core) (1.0.0)\n",
      "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.5.2->langchain_core) (0.7.0)\n",
      "Requirement already satisfied: pydantic-core==2.27.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.5.2->langchain_core) (2.27.1)\n",
      "Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from anthropic->langchain_teddynote) (3.7.1)\n",
      "Requirement already satisfied: distro<2,>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from anthropic->langchain_teddynote) (1.9.0)\n",
      "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from anthropic->langchain_teddynote) (0.8.2)\n",
      "Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from anthropic->langchain_teddynote) (1.3.1)\n",
      "Collecting sgmllib3k (from feedparser->langchain_teddynote)\n",
      "  Downloading sgmllib3k-1.0.0.tar.gz (5.8 kB)\n",
      "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "Collecting kiwipiepy_model<0.21,>=0.20 (from kiwipiepy->langchain_teddynote)\n",
      "  Downloading kiwipiepy_model-0.20.0.tar.gz (34.7 MB)\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.7/34.7 MB\u001b[0m \u001b[31m51.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from kiwipiepy->langchain_teddynote) (1.26.4)\n",
      "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kiwipiepy->langchain_teddynote) (4.67.1)\n",
      "Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain->langchain_teddynote) (2.0.36)\n",
      "Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain->langchain_teddynote) (3.11.10)\n",
      "Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain->langchain_teddynote) (4.0.3)\n",
      "Requirement already satisfied: langchain-text-splitters<0.4.0,>=0.3.3 in /usr/local/lib/python3.10/dist-packages (from langchain->langchain_teddynote) (0.3.3)\n",
      "Collecting langgraph-checkpoint<3.0.0,>=2.0.4 (from langgraph->langchain_teddynote)\n",
      "  Downloading langgraph_checkpoint-2.0.9-py3-none-any.whl.metadata (4.6 kB)\n",
      "Collecting langgraph-sdk<0.2.0,>=0.1.42 (from langgraph->langchain_teddynote)\n",
      "  Downloading langgraph_sdk-0.1.48-py3-none-any.whl.metadata (1.8 kB)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->langchain_teddynote) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->langchain_teddynote) (2024.2)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas->langchain_teddynote) (2024.2)\n",
      "Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from pdf2image->langchain_teddynote) (11.0.0)\n",
      "Requirement already satisfied: certifi>=2019.11.17 in /usr/local/lib/python3.10/dist-packages (from pinecone-client[grpc]->langchain_teddynote) (2024.12.14)\n",
      "Collecting pinecone-plugin-inference<2.0.0,>=1.0.3 (from pinecone-client[grpc]->langchain_teddynote)\n",
      "  Downloading pinecone_plugin_inference-1.1.0-py3-none-any.whl.metadata (2.2 kB)\n",
      "Collecting pinecone-plugin-interface<0.0.8,>=0.0.7 (from pinecone-client[grpc]->langchain_teddynote)\n",
      "  Downloading pinecone_plugin_interface-0.0.7-py3-none-any.whl.metadata (1.2 kB)\n",
      "Requirement already satisfied: urllib3>=1.26.0 in /usr/local/lib/python3.10/dist-packages (from pinecone-client[grpc]->langchain_teddynote) (2.2.3)\n",
      "Requirement already satisfied: googleapis-common-protos>=1.53.0 in /usr/local/lib/python3.10/dist-packages (from pinecone-client[grpc]->langchain_teddynote) (1.66.0)\n",
      "Requirement already satisfied: grpcio>=1.44.0 in /usr/local/lib/python3.10/dist-packages (from pinecone-client[grpc]->langchain_teddynote) (1.68.1)\n",
      "Collecting lz4>=3.1.3 (from pinecone-client[grpc]->langchain_teddynote)\n",
      "  Downloading lz4-4.3.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.7 kB)\n",
      "Requirement already satisfied: protobuf<5.0,>=4.25 in /usr/local/lib/python3.10/dist-packages (from pinecone-client[grpc]->langchain_teddynote) (4.25.5)\n",
      "Collecting protoc-gen-openapiv2<0.0.2,>=0.0.1 (from pinecone-client[grpc]->langchain_teddynote)\n",
      "  Downloading protoc_gen_openapiv2-0.0.1-py3-none-any.whl.metadata (1.5 kB)\n",
      "Collecting mmh3<5.0.0,>=4.1.0 (from pinecone-text->langchain_teddynote)\n",
      "  Downloading mmh3-4.1.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (13 kB)\n",
      "Requirement already satisfied: nltk<4.0.0,>=3.6.5 in /usr/local/lib/python3.10/dist-packages (from pinecone-text->langchain_teddynote) (3.9.1)\n",
      "Collecting python-dotenv<2.0.0,>=1.0.1 (from pinecone-text->langchain_teddynote)\n",
      "  Downloading python_dotenv-1.0.1-py3-none-any.whl.metadata (23 kB)\n",
      "Collecting types-requests<3.0.0,>=2.25.0 (from pinecone-text->langchain_teddynote)\n",
      "  Downloading types_requests-2.32.0.20241016-py3-none-any.whl.metadata (1.9 kB)\n",
      "Collecting wget<4.0,>=3.2 (from pinecone-text->langchain_teddynote)\n",
      "  Downloading wget-3.2.zip (10 kB)\n",
      "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "Requirement already satisfied: tiktoken>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from tavily-python->langchain_teddynote) (0.8.0)\n",
      "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (2.4.4)\n",
      "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (1.3.2)\n",
      "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (24.3.0)\n",
      "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (1.5.0)\n",
      "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (6.1.0)\n",
      "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (0.2.1)\n",
      "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain->langchain_teddynote) (1.18.3)\n",
      "Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->anthropic->langchain_teddynote) (3.10)\n",
      "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->anthropic->langchain_teddynote) (1.2.2)\n",
      "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain_core) (1.0.7)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain_core) (0.14.0)\n",
      "Requirement already satisfied: msgpack<2.0.0,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from langgraph-checkpoint<3.0.0,>=2.0.4->langgraph->langchain_teddynote) (1.1.0)\n",
      "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk<4.0.0,>=3.6.5->pinecone-text->langchain_teddynote) (8.1.7)\n",
      "Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk<4.0.0,>=3.6.5->pinecone-text->langchain_teddynote) (1.4.2)\n",
      "Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk<4.0.0,>=3.6.5->pinecone-text->langchain_teddynote) (2024.11.6)\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->langchain_teddynote) (1.17.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langsmith<0.3,>=0.1.125->langchain_core) (3.4.0)\n",
      "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain->langchain_teddynote) (3.1.1)\n",
      "Downloading langchain_teddynote-0.3.40-py3-none-any.whl (51 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m51.1/51.1 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading anthropic-0.42.0-py3-none-any.whl (203 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m203.4/203.4 kB\u001b[0m \u001b[31m18.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading deepl-1.20.0-py3-none-any.whl (36 kB)\n",
      "Downloading feedparser-6.0.11-py3-none-any.whl (81 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.3/81.3 kB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading kiwipiepy-0.20.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m89.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading langgraph-0.2.60-py3-none-any.whl (135 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m135.7/135.7 kB\u001b[0m \u001b[31m14.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading olefile-0.47-py2.py3-none-any.whl (114 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m11.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading pdf2image-1.17.0-py3-none-any.whl (11 kB)\n",
      "Downloading pinecone_text-0.9.0-py3-none-any.whl (23 kB)\n",
      "Downloading rank_bm25-0.2.2-py3-none-any.whl (8.6 kB)\n",
      "Downloading tavily_python-0.5.0-py3-none-any.whl (14 kB)\n",
      "Downloading langgraph_checkpoint-2.0.9-py3-none-any.whl (37 kB)\n",
      "Downloading langgraph_sdk-0.1.48-py3-none-any.whl (43 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.7/43.7 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading lz4-4.3.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m54.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading mmh3-4.1.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (67 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.6/67.6 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading pinecone_plugin_inference-1.1.0-py3-none-any.whl (85 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m85.4/85.4 kB\u001b[0m \u001b[31m9.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading pinecone_plugin_interface-0.0.7-py3-none-any.whl (6.2 kB)\n",
      "Downloading protoc_gen_openapiv2-0.0.1-py3-none-any.whl (7.9 kB)\n",
      "Downloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n",
      "Downloading types_requests-2.32.0.20241016-py3-none-any.whl (15 kB)\n",
      "Downloading pinecone_client-5.0.1-py3-none-any.whl (244 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m244.8/244.8 kB\u001b[0m \u001b[31m22.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hBuilding wheels for collected packages: kiwipiepy_model, wget, sgmllib3k\n",
      "  Building wheel for kiwipiepy_model (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Created wheel for kiwipiepy_model: filename=kiwipiepy_model-0.20.0-py3-none-any.whl size=34818026 sha256=f99c937047ad2483ba024811131195572a3e5de7aa746125d0d4894d83f8c61d\n",
      "  Stored in directory: /root/.cache/pip/wheels/b6/b1/66/2be9840f8ef3627d63d93503d81a5e3b41e9498dcb63b00b13\n",
      "  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Created wheel for wget: filename=wget-3.2-py3-none-any.whl size=9656 sha256=64450187d3265b0540cb6fa3c7faef20db57797424353765052c51c6d5a1b6a6\n",
      "  Stored in directory: /root/.cache/pip/wheels/8b/f1/7f/5c94f0a7a505ca1c81cd1d9208ae2064675d97582078e6c769\n",
      "  Building wheel for sgmllib3k (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Created wheel for sgmllib3k: filename=sgmllib3k-1.0.0-py3-none-any.whl size=6047 sha256=eeed053c09c9b10a0dfef3145735038ccfb50b0a5bb9604810c54eea1527d6f7\n",
      "  Stored in directory: /root/.cache/pip/wheels/f0/69/93/a47e9d621be168e9e33c7ce60524393c0b92ae83cf6c6e89c5\n",
      "Successfully built kiwipiepy_model wget sgmllib3k\n",
      "Installing collected packages: wget, sgmllib3k, mmh3, kiwipiepy_model, types-requests, rank-bm25, python-dotenv, pinecone-plugin-interface, pdf2image, olefile, lz4, kiwipiepy, feedparser, protoc-gen-openapiv2, pinecone-text, pinecone-plugin-inference, deepl, tavily-python, pinecone-client, langgraph-sdk, anthropic, langgraph-checkpoint, langgraph, langchain_teddynote\n",
      "Successfully installed anthropic-0.42.0 deepl-1.20.0 feedparser-6.0.11 kiwipiepy-0.20.3 kiwipiepy_model-0.20.0 langchain_teddynote-0.3.40 langgraph-0.2.60 langgraph-checkpoint-2.0.9 langgraph-sdk-0.1.48 lz4-4.3.3 mmh3-4.1.0 olefile-0.47 pdf2image-1.17.0 pinecone-client-5.0.1 pinecone-plugin-inference-1.1.0 pinecone-plugin-interface-0.0.7 pinecone-text-0.9.0 protoc-gen-openapiv2-0.0.1 python-dotenv-1.0.1 rank-bm25-0.2.2 sgmllib3k-1.0.0 tavily-python-0.5.0 types-requests-2.32.0.20241016 wget-3.2\n"
     ]
    }
   ],
   "source": [
    "! pip install langchain_teddynote langchain_core"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 557,
     "status": "ok",
     "timestamp": 1735188720104,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "bfJhDGyJTqSz",
    "outputId": "59fd7720-5865-4b48-f754-c0265681de69"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3.12\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "j-B3pSsARJDu"
   },
   "outputs": [],
   "source": [
    "from langchain_teddynote.messages import stream_response\n",
    "from langchain_core.prompts import PromptTemplate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 404,
     "status": "ok",
     "timestamp": 1735194235256,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "3geoMo-gYRMJ",
    "outputId": "59c12fcf-0d2e-411c-b5fb-fe2011586904"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "input_variables=['country'] input_types={} partial_variables={} template='{country}의 수도는 어디인가요?'\n"
     ]
    }
   ],
   "source": [
    "# 프롬프트 템플릿 정의 (국가를 위한 플레이스홀더 포함)\n",
    "template = \"{country}의 수도는 어디인가요?\"\n",
    "\n",
    "# PromptTemplate 인스턴스 생성 시 키워드 인자 사용\n",
    "prompt_template = PromptTemplate(\n",
    "    template=template,\n",
    "    input_variables=[\"country\"]\n",
    ")\n",
    "\n",
    "# 프롬프트 템플릿 출력\n",
    "print(prompt_template)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 35
    },
    "executionInfo": {
     "elapsed": 391,
     "status": "ok",
     "timestamp": 1735194248927,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "ygoRbS7JTI1l",
    "outputId": "598ea234-ffdb-4695-9ac4-533490059369"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'대한민국의 수도는 어디인가요?'"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prompt = prompt_template.format(country=\"대한민국\")\n",
    "prompt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 35
    },
    "executionInfo": {
     "elapsed": 300,
     "status": "ok",
     "timestamp": 1735189934679,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "scnyj3mQTX3A",
    "outputId": "68c05f7c-d75c-4b0f-bcc0-d32085d739eb"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'미국의 수도는 어디인가요?'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prompt = prompt_template.format(country=\"미국\")\n",
    "prompt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "JCUR0UIaTvYP"
   },
   "outputs": [],
   "source": [
    "from langchain_openai import ChatOpenAI\n",
    "\n",
    "model = ChatOpenAI(\n",
    "    model = \"gpt-3.5-turbo\",\n",
    "    max_tokens = 2048,\n",
    "    temperature = 0.1\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "g5U6-Uq-UlrE"
   },
   "outputs": [],
   "source": [
    "prompt = PromptTemplate.from_template(\"{topic}에 대해 쉽게 설명해주세요.\")\n",
    "\n",
    "model = ChatOpenAI()\n",
    "\n",
    "chain = prompt | model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 209
    },
    "executionInfo": {
     "elapsed": 2707,
     "status": "ok",
     "timestamp": 1735194336051,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "niMtJiQGa9XG",
    "outputId": "14cecb5c-d97b-4e9b-a640-310efcfd48c5"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'대한민국은 동아시아에 위치한 나라로, 수도는 서울에 있습니다. 대한민국은 민주주의를 기반으로 한 공화제이며, 대통령이 국가의 수장입니다. 대한민국은 세계에서 11번째로 경제 규모가 큰 나라이며, 선진화된 기술과 문화를 가지고 있습니다. 또한, 한반도 북쪽에 위치한 북한과의 관계가 긴장되어 있는 상황이며, 국제사회와의 협력을 통해 안정과 번영을 추구하고 있습니다. 대한민국은 한글을 사용하는 한국어를 공용어로 사용하고 있으며, 전통적인 한국 문화와 현대적인 문화가 공존하는 다양한 매력을 가지고 있습니다.'"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chain.invoke(\"대한민국\").content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 5,
     "status": "ok",
     "timestamp": 1735190674541,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "Fy6MhRoabB39",
    "outputId": "490018a8-72fb-47e7-9ff9-c00d676bd389"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'topic': '인공지능 모델의 학습 원리'}"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input = {\"topic\": \"인공지능 모델의 학습 원리\"}\n",
    "input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 3964,
     "status": "ok",
     "timestamp": 1735190929100,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "Yi5w-VBybqTG",
    "outputId": "ea4932c3-826b-44b2-b9b5-7c99b1f06e72"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AIMessage(content='인공지능 모델은 데이터를 입력으로 받아들이고, 이 데이터를 분석하여 패턴을 학습하는 시스템입니다. 모델은 입력 데이터와 출력 데이터 간의 관계를 학습하여, 새로운 입력 데이터가 주어졌을 때 적절한 출력을 생성할 수 있도록 학습됩니다.\\n\\n학습 원리는 크게 두 가지 방법으로 나뉩니다. 첫 번째는 지도학습이라고 불리는 방법으로, 입력 데이터와 해당 데이터에 대한 정답이 함께 제공되어 모델이 정답을 맞추도록 학습합니다. 두 번째는 비지도학습이라고 불리는 방법으로, 정답이 주어지지 않고 입력 데이터의 패턴이나 구조를 파악하여 모델을 학습시킵니다.\\n\\n모델은 입력 데이터를 특정한 방식으로 처리하여 출력을 생성하는데, 이 과정에서 모델은 학습 데이터의 패턴을 파악하고 이를 기반으로 예측을 수행합니다. 이렇게 모델이 학습한 패턴을 기반으로 새로운 데이터에 대해 예측을 수행하는 것이 인공지능 모델의 핵심 원리입니다.', additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 363, 'prompt_tokens': 33, 'total_tokens': 396, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-af5b47cc-0510-456c-9f74-778f8e121d94-0', usage_metadata={'input_tokens': 33, 'output_tokens': 363, 'total_tokens': 396, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}})"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chain.invoke(input)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "IKP6f5ZHqNj9"
   },
   "source": [
    "# 2번째 방법"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "XxW0XQ3jqMEf"
   },
   "outputs": [],
   "source": [
    "template = \"{country1}과 {country2}의 수도는 각각 어디인가요?\"\n",
    "\n",
    "prompt = PromptTemplate(\n",
    "    template=template,\n",
    "    input_variables=[\"country1\"],\n",
    "    partial_variables={\n",
    "        \"country2\" : \"미국\"\n",
    "    },\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 370,
     "status": "ok",
     "timestamp": 1735195554086,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "A4ZJOimOts2V",
    "outputId": "f7eb3a4d-b5c5-42e7-d3a5-645be327b07c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PromptTemplate(input_variables=['country1'], input_types={}, partial_variables={'country2': '미국'}, template='{country1}과 {country2}의 수도는 각각 어디인가요?')"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prompt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 35
    },
    "executionInfo": {
     "elapsed": 18,
     "status": "ok",
     "timestamp": 1735195603044,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "6zvnnIAvtvN_",
    "outputId": "0ca1cf67-ee51-49eb-fc66-a3d8d67cd8dd"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'대한민국과 미국의 수도는 각각 어디인가요?'"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prompt.format(country1=\"대한민국\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "m244r2nJt76F"
   },
   "outputs": [],
   "source": [
    "prompt_partial = prompt.partial(country2=\"캐나다\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 373,
     "status": "ok",
     "timestamp": 1735195707727,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "QpCOoquzuLhY",
    "outputId": "afa40158-606b-407e-d66d-d965a4341a6d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PromptTemplate(input_variables=['country1'], input_types={}, partial_variables={'country2': '캐나다'}, template='{country1}과 {country2}의 수도는 각각 어디인가요?')"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prompt_partial"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "IDhjYLIluVI3"
   },
   "outputs": [],
   "source": [
    "chain = prompt_partial | model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 53
    },
    "executionInfo": {
     "elapsed": 745,
     "status": "ok",
     "timestamp": 1735195835926,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "1bEEh2H1ufkh",
    "outputId": "b5873db8-dd6d-4c0f-8d5e-9ee5bcf4f559"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'대한민국의 수도는 서울이고, 호주의 수도는 캔버라입니다.'"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chain.invoke({\"country1\":\"대한민국\",\"country2\" : \"호주\"}).content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "executionInfo": {
     "elapsed": 357,
     "status": "ok",
     "timestamp": 1735200675016,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "dpSC0Wsuu4Cv"
   },
   "outputs": [],
   "source": [
    "import os\n",
    "from langchain_teddynote.messages import stream_response\n",
    "from langchain_core.prompts import PromptTemplate\n",
    "from langchain_openai import ChatOpenAI\n",
    "\n",
    "os.environ['OPENAI_API_KEY'] = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "executionInfo": {
     "elapsed": 2,
     "status": "ok",
     "timestamp": 1735200676389,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "KkAfiUjABDvk"
   },
   "outputs": [],
   "source": [
    "template = \"{country1}과 {country2}의 수도는 각각 어디인가요?\"\n",
    "\n",
    "prompt = PromptTemplate(\n",
    "    template=template,\n",
    "    input_variables=[\"country1\"],\n",
    "    partial_variables={\n",
    "        \"country2\" : \"미국\"\n",
    "    },\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "executionInfo": {
     "elapsed": 337,
     "status": "ok",
     "timestamp": 1735200678181,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "WgyzNZooBG7z"
   },
   "outputs": [],
   "source": [
    "model = ChatOpenAI(\n",
    "    model=\"gpt-3.5-turbo\",\n",
    "    max_tokens=2048,\n",
    "    temperature=0.1\n",
    ")\n",
    "\n",
    "chain = prompt | model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 786,
     "status": "ok",
     "timestamp": 1735200704661,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "p1hoqKMzBKgn",
    "outputId": "8292cbb4-fed5-4968-a965-890097997414"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "대한민국의 수도는 서울이고, 호주의 수도는 캔버라입니다.\n"
     ]
    }
   ],
   "source": [
    "result = chain.invoke({\n",
    "    \"country1\": \"대한민국\",\n",
    "    \"country2\": \"호주\",\n",
    "}).content\n",
    "\n",
    "print(result)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyOgzWji93AkyTw34hr6acPV",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[06_01_PDFLoader.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMc3vCp/iitxtQEPGW7lwiZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S231Euuqt8aJ","executionInfo":{"status":"ok","timestamp":1735799627382,"user_tz":-540,"elapsed":22946,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"ca425053-ae08-4228-a31c-dcdefa5621a9"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# 1. PDFLoader"],"metadata":{"id":"zWxsCDFAvHq4"}},{"cell_type":"markdown","source":["||PDFMiner|PDFPlumber|PyPDFium2|PyMuPDF|PyPDF2|\n","|---|---|---|---|---|---|\n","|Medical|1|2|3|4|5|\n","|Law|3|1|1|3|5|\n","|Finance|1|2|2|4|5|\n","|Public|1|1|1|4|5|\n","|Sum|5|5|7|15|20|"],"metadata":{"id":"lU_b0Sagu-l4"}},{"cell_type":"markdown","source":[],"metadata":{"id":"YougT7yGwO5Q"}},{"cell_type":"code","source":["FILE_PATH = \"/content/drive/MyDrive/비트컴퓨터/제5차 국토종합계획(2020~2040)(홈페이지 공개).pdf\""],"metadata":{"id":"s9cAn6VIuAA2","executionInfo":{"status":"ok","timestamp":1735799664095,"user_tz":-540,"elapsed":428,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["def show_metadata(docs):\n","    if docs:\n","        print(\"[metadata]\")\n","        print(list(docs[0].metadata.keys()))\n","        print(\"\\n[examples]\")\n","        max_key_length = max(len(k) for k in docs[0].metadata.keys())\n","        for k, v in docs[0].metadata.items():\n","            print(f\"{k:<{max_key_length}} : {v}\")"],"metadata":{"id":"w3MrBtWcuQUN","executionInfo":{"status":"ok","timestamp":1735799671472,"user_tz":-540,"elapsed":433,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# 2. PyPDF"],"metadata":{"id":"6XX21aHNvRVA"}},{"cell_type":"code","source":["! pip install -qU pypdf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"luFefAAhuSXT","executionInfo":{"status":"ok","timestamp":1735799691200,"user_tz":-540,"elapsed":4421,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"afe6700b-7034-411a-f956-563d1277b965"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/298.0 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m92.2/298.0 kB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.0/298.0 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["! pip install langchain-community"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-oufy1ggufbQ","executionInfo":{"status":"ok","timestamp":1735799745395,"user_tz":-540,"elapsed":10751,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"d735522a-964a-4b98-cb41-2ed7376c8493"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting langchain-community\n","  Downloading langchain_community-0.3.13-py3-none-any.whl.metadata (2.9 kB)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (6.0.2)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.0.36)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (3.11.10)\n","Collecting dataclasses-json<0.7,>=0.5.7 (from langchain-community)\n","  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n","Collecting httpx-sse<0.5.0,>=0.4.0 (from langchain-community)\n","  Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)\n","Collecting langchain<0.4.0,>=0.3.13 (from langchain-community)\n","  Downloading langchain-0.3.13-py3-none-any.whl.metadata (7.1 kB)\n","Collecting langchain-core<0.4.0,>=0.3.27 (from langchain-community)\n","  Downloading langchain_core-0.3.28-py3-none-any.whl.metadata (6.3 kB)\n","Requirement already satisfied: langsmith<0.3,>=0.1.125 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (0.2.3)\n","Requirement already satisfied: numpy<2,>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (1.26.4)\n","Collecting pydantic-settings<3.0.0,>=2.4.0 (from langchain-community)\n","  Downloading pydantic_settings-2.7.1-py3-none-any.whl.metadata (3.5 kB)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.32.3)\n","Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (9.0.0)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (2.4.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.3.2)\n","Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (4.0.3)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (24.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (0.2.1)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.18.3)\n","Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading marshmallow-3.23.2-py3-none-any.whl.metadata (7.1 kB)\n","Collecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n","Requirement already satisfied: langchain-text-splitters<0.4.0,>=0.3.3 in /usr/local/lib/python3.10/dist-packages (from langchain<0.4.0,>=0.3.13->langchain-community) (0.3.3)\n","Requirement already satisfied: pydantic<3.0.0,>=2.7.4 in /usr/local/lib/python3.10/dist-packages (from langchain<0.4.0,>=0.3.13->langchain-community) (2.10.3)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.27->langchain-community) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.27->langchain-community) (24.2)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.27->langchain-community) (4.12.2)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (0.28.1)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (3.10.12)\n","Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (1.0.0)\n","Collecting python-dotenv>=0.21.0 (from pydantic-settings<3.0.0,>=2.4.0->langchain-community)\n","  Downloading python_dotenv-1.0.1-py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2024.12.14)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain-community) (3.1.1)\n","Requirement already satisfied: anyio in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (3.7.1)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.0.7)\n","Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (0.14.0)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.4.0,>=0.3.27->langchain-community) (3.0.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.13->langchain-community) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.27.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.13->langchain-community) (2.27.1)\n","Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading mypy_extensions-1.0.0-py3-none-any.whl.metadata (1.1 kB)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.3.1)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.2.2)\n","Downloading langchain_community-0.3.13-py3-none-any.whl (2.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m28.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n","Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)\n","Downloading langchain-0.3.13-py3-none-any.whl (1.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m45.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading langchain_core-0.3.28-py3-none-any.whl (411 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m24.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydantic_settings-2.7.1-py3-none-any.whl (29 kB)\n","Downloading marshmallow-3.23.2-py3-none-any.whl (49 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n","Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n","Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n","Installing collected packages: python-dotenv, mypy-extensions, marshmallow, httpx-sse, typing-inspect, pydantic-settings, dataclasses-json, langchain-core, langchain, langchain-community\n","  Attempting uninstall: langchain-core\n","    Found existing installation: langchain-core 0.3.25\n","    Uninstalling langchain-core-0.3.25:\n","      Successfully uninstalled langchain-core-0.3.25\n","  Attempting uninstall: langchain\n","    Found existing installation: langchain 0.3.12\n","    Uninstalling langchain-0.3.12:\n","      Successfully uninstalled langchain-0.3.12\n","Successfully installed dataclasses-json-0.6.7 httpx-sse-0.4.0 langchain-0.3.13 langchain-community-0.3.13 langchain-core-0.3.28 marshmallow-3.23.2 mypy-extensions-1.0.0 pydantic-settings-2.7.1 python-dotenv-1.0.1 typing-inspect-0.9.0\n"]}]},{"cell_type":"code","source":["from langchain_community.document_loaders import PyPDFLoader\n","\n","# 파일 경로 설정\n","loader = PyPDFLoader(FILE_PATH)\n","\n","# PDF 로더 초기화\n","docs = loader.load()\n","\n","# 문서의 내용 출력\n","print(docs[10].page_content[:300])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1soZS-a9uV64","executionInfo":{"status":"ok","timestamp":1735799777450,"user_tz":-540,"elapsed":31639,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"b013e8cc-8844-49df-b899-767f42cfe968"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["vii차 례\n","[그림 Ⅲ-31] 바람길을 고려한 건물배치 가이드라인 예시···················116\n","[그림 Ⅲ-32] 제로에너지 건축물 개념도·················································122\n","[그림 Ⅲ-33] 경관도로 구상·······································································124\n","[그림 Ⅲ-34] 주요 도시의 접근성 (도로+KTX 기준) ··························128\n","[그림 Ⅲ-3\n"]}]},{"cell_type":"code","source":["# 메타데이터 출력\n","show_metadata(docs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ur8oHVBPuqWX","executionInfo":{"status":"ok","timestamp":1735799783697,"user_tz":-540,"elapsed":403,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"ef5004a1-6346-4546-caca-090c60f9f64b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[metadata]\n","['source', 'page']\n","\n","[examples]\n","source : /content/drive/MyDrive/비트컴퓨터/제5차 국토종합계획(2020~2040)(홈페이지 공개).pdf\n","page   : 0\n"]}]},{"cell_type":"markdown","source":["# 3. PyPDF(OCR)"],"metadata":{"id":"XK3vw64YvYSg"}},{"cell_type":"code","source":["! pip install -qU rapidocr-onnxruntime"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E1RjMhseuxUs","executionInfo":{"status":"ok","timestamp":1735799814099,"user_tz":-540,"elapsed":7861,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"4debe849-1f01-4346-97c8-762ddeed10e2"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m14.9/14.9 MB\u001b[0m \u001b[31m30.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.3/13.3 MB\u001b[0m \u001b[31m69.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m912.2/912.2 kB\u001b[0m \u001b[31m46.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m46.0/46.0 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m86.8/86.8 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["# PDF 로더 초기화, 이미지 추출 옵션 활성화\n","loader = PyPDFLoader(\"https://arxiv.org/pdf/2103.15348.pdf\", extract_images=True)\n","\n","# PDF 페이지 로드\n","docs = loader.load()\n","\n","# 페이지 내용 접근\n","print(docs[10].page_content[:300])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HB6r3ZMDuzue","executionInfo":{"status":"ok","timestamp":1735800082575,"user_tz":-540,"elapsed":78997,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"02cbf7a6-2be2-46ff-e273-79ae3be1bd32"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["LayoutParser: A Uniﬁed Toolkit for DL-Based DIA 11\n","focuses on precision, eﬃciency, and robustness. The target documents may have\n","complicated structures, and may require training multiple layout detection models\n","to achieve the optimal accuracy. Light-weight pipelines are built for relatively\n","simple d\n"]}]},{"cell_type":"code","source":["show_metadata(docs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukpdkyOcu16-","executionInfo":{"status":"ok","timestamp":1735799911659,"user_tz":-540,"elapsed":3,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"e4058cf7-2d53-478b-f0a5-00951de8c6de"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[metadata]\n","['source', 'page']\n","\n","[examples]\n","source : https://arxiv.org/pdf/2103.15348.pdf\n","page   : 0\n"]}]}]}

*****[06_02_HWP.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNaK/A3yaX7hcgExBmxZwNj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kzw1qbjjYK09","executionInfo":{"status":"ok","timestamp":1735877980799,"user_tz":-540,"elapsed":29923,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"3aabaa4e-c1ed-4776-e551-91417ee897a5"},"outputs":[{"output_type":"stream","name":"stdout","text":["  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.7/34.7 MB\u001b[0m \u001b[31m19.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m51.1/51.1 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m203.4/203.4 kB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.3/81.3 kB\u001b[0m \u001b[31m5.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m58.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m135.7/135.7 kB\u001b[0m \u001b[31m10.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.7/43.7 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m40.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.6/67.6 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m85.4/85.4 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m35.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m244.8/244.8 kB\u001b[0m \u001b[31m17.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for kiwipiepy_model (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for sgmllib3k (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["# 설치\n","! pip install -qU langchain-teddynote"]},{"cell_type":"code","source":["from langchain_teddynote.document_loaders import HWPLoader\n","\n","# HWP Loader 객체 생성\n","loader = HWPLoader(\"/content/디지털 정부혁신 추진계획.hwp\")\n","\n","# 문서 로드\n","docs = loader.load()"],"metadata":{"id":"b8IJAnKsY-SV","executionInfo":{"status":"ok","timestamp":1735878216818,"user_tz":-540,"elapsed":2404,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# 결과 출력\n","print(docs[0].page_content[:1000])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aLbRAi9NaF4o","executionInfo":{"status":"ok","timestamp":1735878271518,"user_tz":-540,"elapsed":262,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"3c00c48e-a37a-456b-b23d-9f6e2a46caf8"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["디지털 정부혁신 추진계획2019. 10. 29.      관계부처 합동순    서Ⅰ. 개요ȃ 1Ⅱ. 디지털 정부혁신 추진계획ㆬȃ 2  1. 우선 추진과제ȃ 2     ① 선제적·통합적 대국민 서비스 혁신     ② 공공부문 마이데이터 활성화     ③ 시민참여를 위한 플랫폼 고도화     ④ 현장중심 협업을 지원하는 스마트 업무환경 구현     ⑤ 클라우드와 디지털서비스 이용 활성화     ⑥ 개방형 데이터·서비스 생태계 구축  2. 중장기 범정부 디지털 전환 로드맵 수립ᲈȃ 4Ⅲ. 추진체계 및 일정ȃ 4 [붙임] 디지털 정부혁신 우선 추진과제(상세)ᬜȃ 8Ⅰ. 개 요□ 추진 배경 ○ 우리나라는 국가적 초고속 정보통신망 투자와 적극적인 공공정보화 사업 추진에 힘입어 세계 최고수준의 전자정부를 구축‧운영     * UN전자정부평가에서 2010‧12‧14년 1위, 16‧18년 3위, UN공공행정상 13회 수상 ○ 그러나, 인공지능‧클라우드 중심의 디지털 전환(Digital Transformation) 시대가 도래함에 따라 기존 전자정부의 한계 표출   - 축적된 행정데이터에도 불구하고 기관간 연계‧활용 미흡, 부처 단위로 단절된 서비스, 신기술 활용을 위한 제도‧기반 부족   - 디지털 전환을 위한 컨트롤타워가 없고, 구체적 전략도 부재 ○ 이에, ‘19.3월부터 공공부문 ICT 활용현황 및 문제점 검토에 착수하여 공공분야 디지털 전환을 위한 추진계획 마련     * 관계부처 협의 21회(행안,과기정통,기재,복지,권익위,국정원 등), 민간전문가 의견청취 10회□ 문제점 진단 및 평가 ○ (서비스) 국민과 최종 이용자 관점에서 서비스 혁신 미흡   - 자격이 있어도 자신이 받을 수 있는 공공서비스를 파악하기 어려워 사각지대가 발생하고, 온라인 신청 가능한 서비스도 제한적 ○ (데이터) 기관별로 축적·보유한 데이터의 연계와 활용 부족   - A기관에서 서류를 발급받아 B기관에 제출하는 관행(연간 증명서 9.5억건‘18년 발급) 등 데이터가 국민편익 향상에 제대로 활용\n"]}]},{"cell_type":"code","source":["# 결과 출력\n","print(docs[0].metadata)"],"metadata":{"id":"N7Qck-BuasB6","executionInfo":{"status":"ok","timestamp":1735878429698,"user_tz":-540,"elapsed":259,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"72ceb0d6-615e-4299-aa1c-943b8d879373","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{'source': '/content/디지털 정부혁신 추진계획.hwp'}\n"]}]}]}

*****[06_03_CSV.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPRSWj/Q+JLk4jJLU4WdYxf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# CSV"],"metadata":{"id":"D6G4iRiSLSsM"}},{"cell_type":"markdown","source":["## CSVLoader"],"metadata":{"id":"ObrLVjs4LV7M"}},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X7qroV9uLLWD","executionInfo":{"status":"ok","timestamp":1736127118463,"user_tz":-540,"elapsed":285,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"47ad0e0e-f700-491a-c9a5-588eede2e8ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["891\n","{'source': './data/titanic.csv', 'row': 0}\n"]}],"source":["import os\n","from langchain_community.document_loaders.csv_loader import CSVLoader\n","import pandas as pd\n","\n","# 경로 설정\n","csv_file_path = \"./data/titanic.csv\"\n","\n","# 디렉토리 생성\n","os.makedirs(os.path.dirname(csv_file_path), exist_ok=True)\n","\n","# 파일 다운로드 (없을 경우)\n","if not os.path.exists(csv_file_path):\n","    url = 'https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv'\n","    df = pd.read_csv(url)\n","    df.to_csv(csv_file_path, index=False)\n","\n","# CSV 로더 생성 및 데이터 로드\n","loader = CSVLoader(file_path=csv_file_path)\n","docs = loader.load()\n","\n","# 출력\n","print(len(docs))\n","print(docs[0].metadata)\n"]},{"cell_type":"code","source":["# 컬럼정보:\n","# PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked\n","\n","# CSV 파일 경로\n","loader = CSVLoader(\n","    file_path=\"./titanic.csv\",\n","    csv_args={\n","        \"delimiter\": \",\",  # 구분자\n","        \"quotechar\": '\"',  # 인용 부호 문자\n","        \"fieldnames\": [\n","            \"Passenger ID\",\n","            \"Survival (1: Survived, 0: Died)\",\n","            \"Passenger Class\",\n","            \"Name\",\n","            \"Sex\",\n","            \"Age\",\n","            \"Number of Siblings/Spouses Aboard\",\n","            \"Number of Parents/Children Aboard\",\n","            \"Ticket Number\",\n","            \"Fare\",\n","            \"Cabin\",\n","            \"Port of Embarkation\",\n","        ],  # 필드 이름\n","    },\n",")\n","\n","# 데이터 로드\n","docs = loader.load()\n","\n","# 데이터 출력\n","print(docs[1].page_content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LhVs-aK-LqWI","executionInfo":{"status":"ok","timestamp":1736127121999,"user_tz":-540,"elapsed":280,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"0defdc82-b9c4-429d-a08d-27cc3363c01b"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Passenger ID: 0\n","Survival (1: Survived, 0: Died): 3\n","Passenger Class: male\n","Name: 22.0\n","Sex: 1\n","Age: 0\n","Number of Siblings/Spouses Aboard: 7.25\n","Number of Parents/Children Aboard: S\n","Ticket Number: Third\n","Fare: man\n","Cabin: True\n","Port of Embarkation: \n","None: Southampton,no,False\n"]}]},{"cell_type":"code","source":["loader = CSVLoader(\n","    file_path=\"./data/titanic.csv\", source_column=\"PassengerId\"\n",")  # CSV 로더 설정, 파일 경로 및 소스 컬럼 지정\n","\n","docs = loader.load()  # 데이터 로드\n","\n","print(docs[1])  # 데이터 출력"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xtfg3OvlLsmx","executionInfo":{"status":"ok","timestamp":1736127125209,"user_tz":-540,"elapsed":289,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"7dee4d56-4a4c-4cb9-8050-ccb807018a3a"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["page_content='PassengerId: 2\n","Survived: 1\n","Pclass: 1\n","Name: Cumings, Mrs. John Bradley (Florence Briggs Thayer)\n","Sex: female\n","Age: 38.0\n","SibSp: 1\n","Parch: 0\n","Ticket: PC 17599\n","Fare: 71.2833\n","Cabin: C85\n","Embarked: C' metadata={'source': '2', 'row': 1}\n"]}]},{"cell_type":"markdown","source":["## UnstructuredCSVLoader"],"metadata":{"id":"3n3mnbHwLvDV"}},{"cell_type":"code","source":["from langchain_community.document_loaders.csv_loader import UnstructuredCSVLoader\n","\n","# 비구조화 CSV 로더 인스턴스 생성\n","loader = UnstructuredCSVLoader(file_path=\"./data/titanic.csv\", mode=\"elements\")\n","\n","# 문서 로드\n","docs = loader.load()\n","\n","# 첫 번째 문서의 HTML 텍스트 메타데이터 출력\n","print(docs[0].metadata[\"text_as_html\"][:1000])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TjVNsgRtLv7O","executionInfo":{"status":"ok","timestamp":1736127126912,"user_tz":-540,"elapsed":261,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"8f94a4bd-9240-4a05-943a-104437272e02"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["<table><tr><td>PassengerId</td><td>Survived</td><td>Pclass</td><td>Name</td><td>Sex</td><td>Age</td><td>SibSp</td><td>Parch</td><td>Ticket</td><td>Fare</td><td>Cabin</td><td>Embarked</td></tr><tr><td>1</td><td>0</td><td>3</td><td>Braund, Mr. Owen Harris</td><td>male</td><td>22.0</td><td>1</td><td>0</td><td>A/5 21171</td><td>7.25</td><td/><td>S</td></tr><tr><td>2</td><td>1</td><td>1</td><td>Cumings, Mrs. John Bradley (Florence Briggs Thayer)</td><td>female</td><td>38.0</td><td>1</td><td>0</td><td>PC 17599</td><td>71.2833</td><td>C85</td><td>C</td></tr><tr><td>3</td><td>1</td><td>3</td><td>Heikkinen, Miss. Laina</td><td>female</td><td>26.0</td><td>0</td><td>0</td><td>STON/O2. 3101282</td><td>7.925</td><td/><td>S</td></tr><tr><td>4</td><td>1</td><td>1</td><td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td><td>female</td><td>35.0</td><td>1</td><td>0</td><td>113803</td><td>53.1</td><td>C123</td><td>S</td></tr><tr><td>5</td><td>0</td><td>3</td><td>Allen, Mr. William Henry</td><td>male</td>\n"]}]},{"cell_type":"markdown","source":["# DataFrameLoader\n"],"metadata":{"id":"m2ZJq-u7QQk0"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# CSV 파일 읽기\n","df = pd.read_csv(\"./data/titanic.csv\")"],"metadata":{"id":"4W3GStXWPjAP","executionInfo":{"status":"ok","timestamp":1736127359927,"user_tz":-540,"elapsed":266,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["# 데이터프레임의 처음 다섯 행 조회\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Y0quBYsbPKfC","executionInfo":{"status":"ok","timestamp":1736127367037,"user_tz":-540,"elapsed":295,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"fa658d01-7339-4a7e-aabb-799c18e3a9c0"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-e5d612d9-be45-4126-b7b8-2164e17e0e84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5d612d9-be45-4126-b7b8-2164e17e0e84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5d612d9-be45-4126-b7b8-2164e17e0e84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5d612d9-be45-4126-b7b8-2164e17e0e84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ce1bf795-0dc4-4c38-8a5e-7dddbeb953c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ce1bf795-0dc4-4c38-8a5e-7dddbeb953c6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ce1bf795-0dc4-4c38-8a5e-7dddbeb953c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["from langchain_community.document_loaders import DataFrameLoader\n","\n","# 데이터 프레임 로더 설정, 페이지 내용 컬럼 지정\n","loader = DataFrameLoader(df, page_content_column=\"Sex\")\n","\n","# 문서 로드\n","docs = loader.load()\n","\n","# 데이터 출력\n","print(docs[0].page_content)\n","\n","# 메타데이터 출력\n","print(docs[0].metadata)"],"metadata":{"id":"qfghljVuQWF0","executionInfo":{"status":"ok","timestamp":1736127384857,"user_tz":-540,"elapsed":399,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"578e600c-70f1-4694-f5bd-9c3550fc1d02","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["male\n","{'PassengerId': 1, 'Survived': 0, 'Pclass': 3, 'Name': 'Braund, Mr. Owen Harris', 'Age': 22.0, 'SibSp': 1, 'Parch': 0, 'Ticket': 'A/5 21171', 'Fare': 7.25, 'Cabin': nan, 'Embarked': 'S'}\n"]}]},{"cell_type":"code","source":["# 큰 테이블에 대한 지연 로딩, 전체 테이블을 메모리에 로드하지 않음\n","for row in loader.lazy_load():\n","    print(row)\n","    break  # 첫 행만 출력"],"metadata":{"id":"A1A9t_92QaJ8","executionInfo":{"status":"ok","timestamp":1736127392101,"user_tz":-540,"elapsed":278,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"5b363767-e259-4586-c20d-da55e194e080","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["page_content='male' metadata={'PassengerId': 1, 'Survived': 0, 'Pclass': 3, 'Name': 'Braund, Mr. Owen Harris', 'Age': 22.0, 'SibSp': 1, 'Parch': 0, 'Ticket': 'A/5 21171', 'Fare': 7.25, 'Cabin': nan, 'Embarked': 'S'}\n"]}]}]}

*****[06_04_ExcellLoader.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPoVUW0+D1K3ep9cP2FsJ0k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wILNcgWIPBJl","executionInfo":{"status":"ok","timestamp":1736143874884,"user_tz":-540,"elapsed":32721,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a41d3b3c-4343-4cbd-e239-d35204be23a0"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/981.5 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━\u001b[0m \u001b[32m849.9/981.5 kB\u001b[0m \u001b[31m25.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m981.5/981.5 kB\u001b[0m \u001b[31m13.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.4/149.4 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m65.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m56.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m41.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m26.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m586.9/586.9 kB\u001b[0m \u001b[31m31.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m274.9/274.9 kB\u001b[0m \u001b[31m17.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m74.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.9/62.9 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.9/48.9 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m434.9/434.9 kB\u001b[0m \u001b[31m25.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m62.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.0/298.0 kB\u001b[0m \u001b[31m18.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for langdetect (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["!pip install -qU langchain-community unstructured openpyxl"]},{"cell_type":"code","source":["import os\n","import pandas as pd\n","import seaborn as sns\n","from langchain_community.document_loaders import UnstructuredExcelLoader\n","\n","# \"./data\" 디렉토리가 없으면 생성\n","os.makedirs(\"./data\", exist_ok=True)\n","\n","# 타이타닉 데이터 로드 및 Excel 파일로 저장\n","titanic = sns.load_dataset('titanic')\n","excel_path = \"./data/titanic.xlsx\"\n","titanic.to_excel(excel_path, index=False)\n","print(f\"타이타닉 데이터가 '{excel_path}'에 저장되었습니다.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cw_Z5taIPg5K","executionInfo":{"status":"ok","timestamp":1736143967775,"user_tz":-540,"elapsed":5446,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"9a5238b1-7bf5-432b-cbff-67524ac78ad1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["타이타닉 데이터가 './data/titanic.xlsx'에 저장되었습니다.\n"]}]},{"cell_type":"code","source":["from langchain_community.document_loaders import UnstructuredExcelLoader\n","\n","# UnstructuredExcelLoader 생성\n","loader = UnstructuredExcelLoader(\"./data/titanic.xlsx\", mode=\"elements\")\n","\n","# 문서 로드\n","docs = loader.load()\n","\n","# 문서 길이 출력\n","print(len(docs))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GjsLt4W4PJTA","executionInfo":{"status":"ok","timestamp":1736143973828,"user_tz":-540,"elapsed":6055,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"c7a91ab8-d991-4c04-e2cf-7ec8194c566f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}]},{"cell_type":"code","source":["print(docs[0].page_content[:200])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W07L_q1wP2dD","executionInfo":{"status":"ok","timestamp":1736144022706,"user_tz":-540,"elapsed":275,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"ed925cb6-f036-4aca-99b6-11ac3a9eb16a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["survived pclass sex age sibsp parch fare embarked class who adult_male deck embark_town alive alone 0 3 male 22 1 0 7.25 S Third man True Southampton no False 1 1 female 38 1 0 71.2833 C First woman F\n"]}]},{"cell_type":"code","source":["# metadata 의 text_as_html 출력\n","print(docs[0].metadata[\"text_as_html\"][:1000])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w-3c2QHUP6Lj","executionInfo":{"status":"ok","timestamp":1736144037752,"user_tz":-540,"elapsed":299,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"1e627266-d4f6-4bca-b956-af0529dc252e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<table><tr><td>survived</td><td>pclass</td><td>sex</td><td>age</td><td>sibsp</td><td>parch</td><td>fare</td><td>embarked</td><td>class</td><td>who</td><td>adult_male</td><td>deck</td><td>embark_town</td><td>alive</td><td>alone</td></tr><tr><td>0</td><td>3</td><td>male</td><td>22</td><td>1</td><td>0</td><td>7.25</td><td>S</td><td>Third</td><td>man</td><td>True</td><td/><td>Southampton</td><td>no</td><td>False</td></tr><tr><td>1</td><td>1</td><td>female</td><td>38</td><td>1</td><td>0</td><td>71.2833</td><td>C</td><td>First</td><td>woman</td><td>False</td><td>C</td><td>Cherbourg</td><td>yes</td><td>False</td></tr><tr><td>1</td><td>3</td><td>female</td><td>26</td><td>0</td><td>0</td><td>7.925</td><td>S</td><td>Third</td><td>woman</td><td>False</td><td/><td>Southampton</td><td>yes</td><td>True</td></tr><tr><td>1</td><td>1</td><td>female</td><td>35</td><td>1</td><td>0</td><td>53.1</td><td>S</td><td>First</td><td>woman</td><td>False</td><td>C</td><td>Southampton</td><td>yes</td><td>False</td>\n"]}]},{"cell_type":"markdown","source":["pandas to docs\n"],"metadata":{"id":"PiIsz6HNRtiR"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Excel 파일 읽기\n","df = pd.read_excel(\"/content/data/titanic.xlsx\")\n","df"],"metadata":{"id":"VEXiMfXQR0Ih","executionInfo":{"status":"ok","timestamp":1736144773808,"user_tz":-540,"elapsed":924,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"bfd5a1ac-0943-42f9-d495-0b04baf18917","colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived  pclass     sex   age  sibsp  parch     fare embarked   class  \\\n","0           0       3    male  22.0      1      0   7.2500        S   Third   \n","1           1       1  female  38.0      1      0  71.2833        C   First   \n","2           1       3  female  26.0      0      0   7.9250        S   Third   \n","3           1       1  female  35.0      1      0  53.1000        S   First   \n","4           0       3    male  35.0      0      0   8.0500        S   Third   \n","..        ...     ...     ...   ...    ...    ...      ...      ...     ...   \n","886         0       2    male  27.0      0      0  13.0000        S  Second   \n","887         1       1  female  19.0      0      0  30.0000        S   First   \n","888         0       3  female   NaN      1      2  23.4500        S   Third   \n","889         1       1    male  26.0      0      0  30.0000        C   First   \n","890         0       3    male  32.0      0      0   7.7500        Q   Third   \n","\n","       who  adult_male deck  embark_town alive  alone  \n","0      man        True  NaN  Southampton    no  False  \n","1    woman       False    C    Cherbourg   yes  False  \n","2    woman       False  NaN  Southampton   yes   True  \n","3    woman       False    C  Southampton   yes  False  \n","4      man        True  NaN  Southampton    no   True  \n","..     ...         ...  ...          ...   ...    ...  \n","886    man        True  NaN  Southampton    no   True  \n","887  woman       False    B  Southampton   yes   True  \n","888  woman       False  NaN  Southampton    no  False  \n","889    man        True    C    Cherbourg   yes   True  \n","890    man        True  NaN   Queenstown    no   True  \n","\n","[891 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-2342569f-fac3-4c76-bcde-69887f357e5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>B</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2342569f-fac3-4c76-bcde-69887f357e5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2342569f-fac3-4c76-bcde-69887f357e5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2342569f-fac3-4c76-bcde-69887f357e5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-436c47b9-6d93-4282-b0b9-82ca8329d82d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-436c47b9-6d93-4282-b0b9-82ca8329d82d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-436c47b9-6d93-4282-b0b9-82ca8329d82d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d1713a79-590c-425a-9197-258af3dd368b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d1713a79-590c-425a-9197-258af3dd368b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sibsp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Third\",\n          \"First\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"who\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"man\",\n          \"woman\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"adult_male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deck\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embark_town\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Southampton\",\n          \"Cherbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alone\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["from langchain_community.document_loaders import DataFrameLoader\n","\n","# 데이터 프레임 로더 설정, 페이지 내용 컬럼 지정\n","loader = DataFrameLoader(df, page_content_column=\"Name\")\n","\n","# 문서 로드\n","docs = loader.load()\n","\n","# 데이터 출력\n","print(docs[0].page_content)\n","\n","# 메타데이터 출력\n","print(docs[0].metadata)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":379},"id":"AkHOPuOnSMXH","executionInfo":{"status":"error","timestamp":1736144763899,"user_tz":-540,"elapsed":278,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"93a77f1e-9cb3-406d-e6e4-512ea134a014"},"execution_count":15,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"'Name'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-d0743c1435da>\u001b[0m in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# 문서 로드\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mdocs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mloader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;31m# 데이터 출력\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/document_loaders/base.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mDocument\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m         \u001b[0;34m\"\"\"Load data into Document objects.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 31\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlazy_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m     \u001b[0;32masync\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0maload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mDocument\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_community/document_loaders/dataframe.py\u001b[0m in \u001b[0;36mlazy_load\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     23\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrow\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_frame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miterrows\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m             \u001b[0mmetadata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m             \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpage_content_column\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m             \u001b[0;32myield\u001b[0m \u001b[0mDocument\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpage_content\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Name'"]}]}]}

*****[06_05_Word.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPi5hpx+f4LTC8VKkt9QXzK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zxh1Zpv5S43C","executionInfo":{"status":"ok","timestamp":1736145068925,"user_tz":-540,"elapsed":10895,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a23d04f4-4a39-4f98-e4f9-fc1596dad744"},"outputs":[{"output_type":"stream","name":"stdout","text":["  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for docx2txt (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["! pip install -qU docx2txt"]},{"cell_type":"code","source":["! pip install langchain-community"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YYqpV65DTuRp","executionInfo":{"status":"ok","timestamp":1736145086841,"user_tz":-540,"elapsed":17919,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a42acc6b-4c76-4805-c4b5-6fa489f0b695"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting langchain-community\n","  Downloading langchain_community-0.3.14-py3-none-any.whl.metadata (2.9 kB)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (6.0.2)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.0.36)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (3.11.10)\n","Collecting dataclasses-json<0.7,>=0.5.7 (from langchain-community)\n","  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n","Collecting httpx-sse<0.5.0,>=0.4.0 (from langchain-community)\n","  Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)\n","Collecting langchain<0.4.0,>=0.3.14 (from langchain-community)\n","  Downloading langchain-0.3.14-py3-none-any.whl.metadata (7.1 kB)\n","Collecting langchain-core<0.4.0,>=0.3.29 (from langchain-community)\n","  Downloading langchain_core-0.3.29-py3-none-any.whl.metadata (6.3 kB)\n","Requirement already satisfied: langsmith<0.3,>=0.1.125 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (0.2.3)\n","Requirement already satisfied: numpy<2,>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (1.26.4)\n","Collecting pydantic-settings<3.0.0,>=2.4.0 (from langchain-community)\n","  Downloading pydantic_settings-2.7.1-py3-none-any.whl.metadata (3.5 kB)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.32.3)\n","Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (9.0.0)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (2.4.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.3.2)\n","Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (4.0.3)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (24.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (0.2.1)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.18.3)\n","Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading marshmallow-3.23.3-py3-none-any.whl.metadata (7.1 kB)\n","Collecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n","Requirement already satisfied: langchain-text-splitters<0.4.0,>=0.3.3 in /usr/local/lib/python3.10/dist-packages (from langchain<0.4.0,>=0.3.14->langchain-community) (0.3.3)\n","Requirement already satisfied: pydantic<3.0.0,>=2.7.4 in /usr/local/lib/python3.10/dist-packages (from langchain<0.4.0,>=0.3.14->langchain-community) (2.10.3)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.29->langchain-community) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.29->langchain-community) (24.2)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.29->langchain-community) (4.12.2)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (0.28.1)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (3.10.12)\n","Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-community) (1.0.0)\n","Collecting python-dotenv>=0.21.0 (from pydantic-settings<3.0.0,>=2.4.0->langchain-community)\n","  Downloading python_dotenv-1.0.1-py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2024.12.14)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain-community) (3.1.1)\n","Requirement already satisfied: anyio in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (3.7.1)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.0.7)\n","Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (0.14.0)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.4.0,>=0.3.29->langchain-community) (3.0.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.14->langchain-community) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.27.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain<0.4.0,>=0.3.14->langchain-community) (2.27.1)\n","Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading mypy_extensions-1.0.0-py3-none-any.whl.metadata (1.1 kB)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.3.1)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-community) (1.2.2)\n","Downloading langchain_community-0.3.14-py3-none-any.whl (2.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m5.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n","Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)\n","Downloading langchain-0.3.14-py3-none-any.whl (1.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m8.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading langchain_core-0.3.29-py3-none-any.whl (411 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m13.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydantic_settings-2.7.1-py3-none-any.whl (29 kB)\n","Downloading marshmallow-3.23.3-py3-none-any.whl (48 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.9/48.9 kB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n","Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n","Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n","Installing collected packages: python-dotenv, mypy-extensions, marshmallow, httpx-sse, typing-inspect, pydantic-settings, dataclasses-json, langchain-core, langchain, langchain-community\n","  Attempting uninstall: langchain-core\n","    Found existing installation: langchain-core 0.3.25\n","    Uninstalling langchain-core-0.3.25:\n","      Successfully uninstalled langchain-core-0.3.25\n","  Attempting uninstall: langchain\n","    Found existing installation: langchain 0.3.12\n","    Uninstalling langchain-0.3.12:\n","      Successfully uninstalled langchain-0.3.12\n","Successfully installed dataclasses-json-0.6.7 httpx-sse-0.4.0 langchain-0.3.14 langchain-community-0.3.14 langchain-core-0.3.29 marshmallow-3.23.3 mypy-extensions-1.0.0 pydantic-settings-2.7.1 python-dotenv-1.0.1 typing-inspect-0.9.0\n"]}]},{"cell_type":"code","source":["from langchain_community.document_loaders import Docx2txtLoader\n","\n","loader = Docx2txtLoader(\"./data/sample-word-document.docx\")  # 문서 로더 초기화\n","\n","docs = loader.load()  # 문서 로딩\n","\n","print(len(docs))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EArx3ipvTaro","executionInfo":{"status":"ok","timestamp":1736145118104,"user_tz":-540,"elapsed":1625,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"1aca1845-2ae6-4a50-ac01-f76b2271a3fa"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}]},{"cell_type":"code","source":["docs[0].page_content\n","docs[0].metadata"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"En01WS3uUJh5","executionInfo":{"status":"ok","timestamp":1736145178599,"user_tz":-540,"elapsed":272,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"d1ea9657-6285-440f-e551-8301d27d0f65"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'source': './data/sample-word-document.docx'}"]},"metadata":{},"execution_count":4}]}]}

*****[06_06_PowerPoint.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMpcdokBVg4phGgDIwgiiUH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQgmR1M_U8mw","executionInfo":{"status":"ok","timestamp":1736145543988,"user_tz":-540,"elapsed":28039,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"346c19a1-9f50-4a3c-ad0b-ed90a3b4861a"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/981.5 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━\u001b[0m \u001b[32m696.3/981.5 kB\u001b[0m \u001b[31m21.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m981.5/981.5 kB\u001b[0m \u001b[31m13.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.4/149.4 kB\u001b[0m \u001b[31m10.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m47.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m472.8/472.8 kB\u001b[0m \u001b[31m25.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m67.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m43.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m22.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m159.9/159.9 kB\u001b[0m \u001b[31m9.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m586.9/586.9 kB\u001b[0m \u001b[31m31.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m274.9/274.9 kB\u001b[0m \u001b[31m18.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m79.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.9/62.9 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.9/48.9 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m434.9/434.9 kB\u001b[0m \u001b[31m24.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m63.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.0/298.0 kB\u001b[0m \u001b[31m17.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for langdetect (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["!pip install -qU unstructured python-pptx langchain_community"]},{"cell_type":"code","source":["from langchain_community.document_loaders import UnstructuredPowerPointLoader\n","\n","# UnstructuredPowerPointLoader 생성\n","loader = UnstructuredPowerPointLoader(\"./data/sample-ppt.pptx\")\n","\n","# 데이터 로드\n","docs = loader.load()\n","\n","# 로드한 문서의 개수 출력\n","print(len(docs))"],"metadata":{"id":"h52USNWuVd6J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# UnstructuredPowerPointLoader 생성\n","loader = UnstructuredPowerPointLoader(\"./data/sample-ppt.pptx\", mode=\"elements\")\n","\n","# 데이터 로드\n","docs = loader.load()\n","\n","print(len(docs))"],"metadata":{"id":"XJ7vo_H8VwMZ"},"execution_count":null,"outputs":[]}]}

*****[06_07_WebBaseLoader.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP5hd3ewc9j7C41x0P6C5oS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# WebBaseLoader"],"metadata":{"id":"_aVaWq2qbKRA"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1S93RGFObEll","executionInfo":{"status":"ok","timestamp":1736130424875,"user_tz":-540,"elapsed":1448,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"86c60055-67e1-4b18-bfd5-e3befbe44d0a"},"outputs":[{"output_type":"stream","name":"stdout","text":["문서의 수: 1\n"]},{"output_type":"execute_result","data":{"text/plain":["[Document(metadata={'source': 'https://n.news.naver.com/article/437/0000378416'}, page_content=\"\\n출산 직원에게 '1억원' 쏜다…회사의 파격적 저출생 정책\\n\\n\\n[앵커]올해 아이 낳을 계획이 있는 가족이라면 솔깃할 소식입니다. 정부가 저출생 대책으로 매달 주는 부모 급여, 0세 아이는 100만원으로 올렸습니다. 여기에 첫만남이용권, 아동수당까지 더하면 아이 돌까지 1년 동안 1520만원을 받습니다. 지자체도 경쟁하듯 지원에 나섰습니다. 인천시는 새로 태어난 아기, 18살될 때까지 1억원을 주겠다. 광주시도 17살될 때까지 7400만원 주겠다고 했습니다. 선거 때면 나타나서 아이 낳으면 현금 주겠다고 밝힌 사람이 있었죠. 과거에는 표만 노린 '황당 공약'이라는 비판이 따라다녔습니다. 그런데 지금은 출산율이 이보다 더 나쁠 수 없다보니, 이런 현금성 지원을 진지하게 정책화 하는 상황까지 온 겁니다. 게다가 기업들도 뛰어들고 있습니다. 이번에는 출산한 직원에게 단번에 1억원을 주겠다는 회사까지 나타났습니다.이상화 기자가 취재했습니다.[기자]한 그룹사가 오늘 파격적인 저출생 정책을 내놨습니다.2021년 이후 태어난 직원 자녀에 1억원씩, 총 70억원을 지원하고 앞으로도 이 정책을 이어가기로 했습니다.해당 기간에 연년생과 쌍둥이 자녀가 있으면 총 2억원을 받게 됩니다.[오현석/부영그룹 직원 : 아이 키우는 데 금전적으로 많이 힘든 세상이잖아요. 교육이나 생활하는 데 큰 도움이 될 거라 생각합니다.]만약 셋째까지 낳는 경우엔 국민주택을 제공하겠다는 뜻도 밝혔습니다.[이중근/부영그룹 회장 : 3년 이내에 세 아이를 갖는 분이 나올 것이고 따라서 주택을 제공할 수 있는 계기가 될 것으로 생각하고.][조용현/부영그룹 직원 : 와이프가 셋째도 갖고 싶어 했는데 경제적 부담 때문에 부정적이었거든요. (이제) 긍정적으로 생각할 수 있을 것 같습니다.]오늘 행사에서는, 회사가 제공하는 출산장려금은 받는 직원들의 세금 부담을 고려해 정부가 면세해달라는 제안도 나왔습니다.이같은 출산장려책은 점점 확산하는 분위기입니다.법정기간보다 육아휴직을 길게 주거나, 남성 직원의 육아휴직을 의무화한 곳도 있습니다.사내 어린이집을 밤 10시까지 운영하고 셋째를 낳으면 무조건 승진시켜 주기도 합니다.한 회사는 지난해 네쌍둥이를 낳은 직원에 의료비를 지원해 관심을 모았습니다.정부 대신 회사가 나서는 출산장려책이 사회적 분위기를 바꿀 거라는 기대가 커지는 가운데, 여력이 부족한 중소지원이 필요하다는 목소리도 나옵니다.[영상디자인 곽세미]\\n\\t\\t\\n\")]"]},"metadata":{},"execution_count":9}],"source":["import bs4\n","from langchain_community.document_loaders import WebBaseLoader\n","\n","# 뉴스기사 내용을 로드합니다.\n","loader = WebBaseLoader(\n","    web_paths=(\"https://n.news.naver.com/article/437/0000378416\",),\n","    bs_kwargs=dict(\n","        parse_only=bs4.SoupStrainer(\n","            \"div\",\n","            attrs={\"class\": [\"newsct_article _article_body\", \"media_end_head_title\"]},\n","        )\n","    ),\n","    header_template={\n","        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\",\n","    },\n",")\n","\n","docs = loader.load()\n","print(f\"문서의 수: {len(docs)}\")\n","docs"]},{"cell_type":"code","source":["# ssl 인증 우회\n","loader.requests_kwargs = {\"verify\": False}\n","\n","# 데이터 로드\n","docs = loader.load()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PX3kcxR1bjqA","executionInfo":{"status":"ok","timestamp":1736130890361,"user_tz":-540,"elapsed":3714,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"e62d69e6-5115-4490-da45-534232b907dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'n.news.naver.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["loader = WebBaseLoader(\n","    web_paths=[\n","        \"https://n.news.naver.com/article/437/0000378416\",\n","        \"https://n.news.naver.com/mnews/hotissue/article/092/0002340014?type=series&cid=2000063\",\n","    ],\n","    bs_kwargs=dict(\n","        parse_only=bs4.SoupStrainer(\n","            \"div\",\n","            attrs={\"class\": [\"newsct_article _article_body\", \"media_end_head_title\"]},\n","        )\n","    ),\n","    header_template={\n","        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\",\n","    },\n",")\n","\n","# 데이터 로드\n","docs = loader.load()"],"metadata":{"id":"GInVho02bxnf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(docs[0].page_content[:500])\n","print(\"===\" * 10)\n","print(docs[1].page_content[:500])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4ytYjlhfd4dg","executionInfo":{"status":"ok","timestamp":1736130941618,"user_tz":-540,"elapsed":2,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"44b0e03e-340b-425f-e785-b7875a718b4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","출산 직원에게 '1억원' 쏜다…회사의 파격적 저출생 정책\n","\n","\n","[앵커]올해 아이 낳을 계획이 있는 가족이라면 솔깃할 소식입니다. 정부가 저출생 대책으로 매달 주는 부모 급여, 0세 아이는 100만원으로 올렸습니다. 여기에 첫만남이용권, 아동수당까지 더하면 아이 돌까지 1년 동안 1520만원을 받습니다. 지자체도 경쟁하듯 지원에 나섰습니다. 인천시는 새로 태어난 아기, 18살될 때까지 1억원을 주겠다. 광주시도 17살될 때까지 7400만원 주겠다고 했습니다. 선거 때면 나타나서 아이 낳으면 현금 주겠다고 밝힌 사람이 있었죠. 과거에는 표만 노린 '황당 공약'이라는 비판이 따라다녔습니다. 그런데 지금은 출산율이 이보다 더 나쁠 수 없다보니, 이런 현금성 지원을 진지하게 정책화 하는 상황까지 온 겁니다. 게다가 기업들도 뛰어들고 있습니다. 이번에는 출산한 직원에게 단번에 1억원을 주겠다는 회사까지 나타났습니다.이상화 기자가 취재했습니다.[기자]한 그룹사가 오늘 파격적인 저출생 정책을 내놨\n","==============================\n","\n","고속 성장하는 스타트업엔 레드팀이 필요하다\n","\n","\n","[이균성의 溫技] 초심, 본질을 잃을 때한 스타트업 창업자와 최근 점심을 같이 했다. 조언을 구할 게 있다고 했다. 당장 급한 현안이 있는 건 아니었다. 여러 번 창업한 경험이 있는데 지금 하고 있는 아이템은 대박 느낌이 든다고 헸다. 그런데 오히려 더 조심해야겠다는 생각이 들더란다. 조언을 구하고자 하는 바도 성장이 예상될 때 무엇을 경계해야 할지 알고 싶다는 거였다. 적잖은 스타트업 창업자를 만났지만 드문 사례였다.2년 가까이 스타트업 창업자를 릴레이 인터뷰 하면서 의미 있게 생각했던 것이 두 가지 있다. 첫째, 회사라는 단어보다 팀이라는 어휘를 주로 쓰고 있다는 점이었다. 그 표현의 유래나 의미 때문이라기보다는 팀이라는 말이 더 정겨워 뜻 깊게 생각된 듯하다. 이해관계보다 지향하는 뜻에 더 중점을 두고 하나의 마음으로 한 곳을 향해 달려가는 집단을 가리키는 표현이라는 생각에 더 정겨웠다.스타트업 대표들의 창업 동기는 대부분 ‘사회\n"]}]},{"cell_type":"markdown","source":["https://search.shopping.naver.com/search/all?query=rtx%204090&prevQuery=rtx%205090&vertical=search\n","\n","https://search.shopping.naver.com/search/all?query=ryzen%209800x3d&prevQuery=rtx%204090&vertical=search\n","\n","https://search.shopping.naver.com/search/all?query=x870e&prevQuery=ryzen%209800x3d&vertical=search"],"metadata":{"id":"oRI7ClFwff6R"}}]}

*****[06_12_UpstageLoader.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "g0kDchS2lVvq"
   },
   "source": [
    "# UpstageLayoutAnalysisLoader\n",
    "UpstageLayoutAnalysisLoader 는 Upstage AI에서 제공하는 문서 분석 도구로, LangChain 프레임워크와 통합되어 사용할 수 있는 문서 로더입니다.\n",
    "\n",
    "주요 특징: - PDF, 이미지 등 다양한 형식의 문서에서 레이아웃 분석 수행 - 문서의 구조적 요소(제목, 단락, 표, 이미지 등)를 자동으로 인식 및 추출 - OCR 기능 지원 (선택적)\n",
    "\n",
    "UpstageLayoutAnalysisLoader는 단순한 텍스트 추출을 넘어 문서의 구조를 이해하고 요소 간 관계를 파악하여 보다 정확한 문서 분석을 가능하게 합니다.\n",
    "\n",
    "설치\n",
    "\n",
    "langchain-upstage 패키지를 설치 후 사용합니다.\n",
    "```\n",
    "pip install -U langchain-upstage\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "executionInfo": {
     "elapsed": 271,
     "status": "ok",
     "timestamp": 1736150963564,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "8wW_Uj0UlLym"
   },
   "outputs": [],
   "source": [
    "UPSTAGE_API_KEY = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "executionInfo": {
     "elapsed": 14927,
     "status": "ok",
     "timestamp": 1736150120908,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "zxJNbOiGnDP5",
    "outputId": "c2386b8a-f94b-4537-98b5-409c208ea26f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting langchain-upstage\n",
      "  Downloading langchain_upstage-0.4.0-py3-none-any.whl.metadata (3.3 kB)\n",
      "Requirement already satisfied: langchain-core<0.4,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from langchain-upstage) (0.3.25)\n",
      "Collecting langchain-openai<0.3,>=0.2 (from langchain-upstage)\n",
      "  Downloading langchain_openai-0.2.14-py3-none-any.whl.metadata (2.7 kB)\n",
      "Collecting pypdf<5.0.0,>=4.2.0 (from langchain-upstage)\n",
      "  Downloading pypdf-4.3.1-py3-none-any.whl.metadata (7.4 kB)\n",
      "Requirement already satisfied: requests<3.0.0,>=2.31.0 in /usr/local/lib/python3.10/dist-packages (from langchain-upstage) (2.32.3)\n",
      "Collecting tokenizers<0.20.0,>=0.19.1 (from langchain-upstage)\n",
      "  Downloading tokenizers-0.19.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.7 kB)\n",
      "Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (6.0.2)\n",
      "Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (1.33)\n",
      "Requirement already satisfied: langsmith<0.3,>=0.1.125 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (0.2.3)\n",
      "Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (24.2)\n",
      "Requirement already satisfied: pydantic<3.0.0,>=2.5.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (2.10.3)\n",
      "Requirement already satisfied: tenacity!=8.4.0,<10.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (9.0.0)\n",
      "Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4,>=0.3.0->langchain-upstage) (4.12.2)\n",
      "Collecting langchain-core<0.4,>=0.3.0 (from langchain-upstage)\n",
      "  Downloading langchain_core-0.3.29-py3-none-any.whl.metadata (6.3 kB)\n",
      "Collecting openai<2.0.0,>=1.58.1 (from langchain-openai<0.3,>=0.2->langchain-upstage)\n",
      "  Downloading openai-1.59.3-py3-none-any.whl.metadata (27 kB)\n",
      "Collecting tiktoken<1,>=0.7 (from langchain-openai<0.3,>=0.2->langchain-upstage)\n",
      "  Downloading tiktoken-0.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.6 kB)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.31.0->langchain-upstage) (3.4.0)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.31.0->langchain-upstage) (3.10)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.31.0->langchain-upstage) (2.2.3)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.31.0->langchain-upstage) (2024.12.14)\n",
      "Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from tokenizers<0.20.0,>=0.19.1->langchain-upstage) (0.27.0)\n",
      "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers<0.20.0,>=0.19.1->langchain-upstage) (3.16.1)\n",
      "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers<0.20.0,>=0.19.1->langchain-upstage) (2024.10.0)\n",
      "Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers<0.20.0,>=0.19.1->langchain-upstage) (4.67.1)\n",
      "Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.4,>=0.3.0->langchain-upstage) (3.0.0)\n",
      "Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-core<0.4,>=0.3.0->langchain-upstage) (0.28.1)\n",
      "Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-core<0.4,>=0.3.0->langchain-upstage) (3.10.12)\n",
      "Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.125->langchain-core<0.4,>=0.3.0->langchain-upstage) (1.0.0)\n",
      "Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from openai<2.0.0,>=1.58.1->langchain-openai<0.3,>=0.2->langchain-upstage) (3.7.1)\n",
      "Requirement already satisfied: distro<2,>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from openai<2.0.0,>=1.58.1->langchain-openai<0.3,>=0.2->langchain-upstage) (1.9.0)\n",
      "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from openai<2.0.0,>=1.58.1->langchain-openai<0.3,>=0.2->langchain-upstage) (0.8.2)\n",
      "Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from openai<2.0.0,>=1.58.1->langchain-openai<0.3,>=0.2->langchain-upstage) (1.3.1)\n",
      "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.5.2->langchain-core<0.4,>=0.3.0->langchain-upstage) (0.7.0)\n",
      "Requirement already satisfied: pydantic-core==2.27.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.5.2->langchain-core<0.4,>=0.3.0->langchain-upstage) (2.27.1)\n",
      "Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.10/dist-packages (from tiktoken<1,>=0.7->langchain-openai<0.3,>=0.2->langchain-upstage) (2024.11.6)\n",
      "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai<2.0.0,>=1.58.1->langchain-openai<0.3,>=0.2->langchain-upstage) (1.2.2)\n",
      "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-core<0.4,>=0.3.0->langchain-upstage) (1.0.7)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.125->langchain-core<0.4,>=0.3.0->langchain-upstage) (0.14.0)\n",
      "Downloading langchain_upstage-0.4.0-py3-none-any.whl (26 kB)\n",
      "Downloading langchain_openai-0.2.14-py3-none-any.whl (50 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.9/50.9 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading langchain_core-0.3.29-py3-none-any.whl (411 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m10.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading pypdf-4.3.1-py3-none-any.whl (295 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m295.8/295.8 kB\u001b[0m \u001b[31m18.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading tokenizers-0.19.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m49.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading openai-1.59.3-py3-none-any.whl (454 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m454.8/454.8 kB\u001b[0m \u001b[31m26.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading tiktoken-0.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m40.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hInstalling collected packages: pypdf, tiktoken, tokenizers, openai, langchain-core, langchain-openai, langchain-upstage\n",
      "  Attempting uninstall: tokenizers\n",
      "    Found existing installation: tokenizers 0.21.0\n",
      "    Uninstalling tokenizers-0.21.0:\n",
      "      Successfully uninstalled tokenizers-0.21.0\n",
      "  Attempting uninstall: openai\n",
      "    Found existing installation: openai 1.57.4\n",
      "    Uninstalling openai-1.57.4:\n",
      "      Successfully uninstalled openai-1.57.4\n",
      "  Attempting uninstall: langchain-core\n",
      "    Found existing installation: langchain-core 0.3.25\n",
      "    Uninstalling langchain-core-0.3.25:\n",
      "      Successfully uninstalled langchain-core-0.3.25\n",
      "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
      "transformers 4.47.1 requires tokenizers<0.22,>=0.21, but you have tokenizers 0.19.1 which is incompatible.\u001b[0m\u001b[31m\n",
      "\u001b[0mSuccessfully installed langchain-core-0.3.29 langchain-openai-0.2.14 langchain-upstage-0.4.0 openai-1.59.3 pypdf-4.3.1 tiktoken-0.8.0 tokenizers-0.19.1\n"
     ]
    }
   ],
   "source": [
    "! pip install -U langchain-upstage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 22746,
     "status": "ok",
     "timestamp": 1736150170668,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "FwcQnNeMnJRv",
    "outputId": "3000c6e0-be44-42b6-a74b-9c92e2dc19fc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.7/34.7 MB\u001b[0m \u001b[31m51.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m51.1/51.1 kB\u001b[0m \u001b[31m3.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m203.4/203.4 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.3/81.3 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m53.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.2/137.2 kB\u001b[0m \u001b[31m9.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m7.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.7/43.7 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m40.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.6/67.6 kB\u001b[0m \u001b[31m4.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m85.4/85.4 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m244.8/244.8 kB\u001b[0m \u001b[31m15.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25h  Building wheel for kiwipiepy_model (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Building wheel for sgmllib3k (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
     ]
    }
   ],
   "source": [
    "! pip install -qU langchain-teddynote"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "executionInfo": {
     "elapsed": 222,
     "status": "ok",
     "timestamp": 1736150315242,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "aNfaIzB1n1Uo"
   },
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.environ[\"OPENAI_API_KEY\"] = \"\"\n",
    "os.environ[\"LANGCHAIN_API_KEY\"] = \"\"\n",
    "os.environ[\"LANGCHAIN_TRACING_V2\"] = \"true\"\n",
    "os.environ[\"LANGCHAIN_ENDPOINT\"] = \"https://api.smith.langchain.com\"\n",
    "os.environ[\"LANGCHAIN_PROJECT\"] = \"\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "W__SYUXwoApg"
   },
   "source": [
    "[UpstageLayoutAnalysisLoader]\n",
    "주요 파라미터\n",
    "\n",
    "- file_path: 분석할 문서 경로\n",
    "- output_type: 출력 형식 [(기본값)'html', 'text']\n",
    "- split: 문서 분할 방식 ['none', 'element', 'page']\n",
    "- use_ocr=True: OCR 사용\n",
    "- exclude=[\"header\", \"footer\"]: 헤더, 푸터 제외"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 21038,
     "status": "ok",
     "timestamp": 1736150612501,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "jG-RUuw_oN_4",
    "outputId": "a686ad32-1e23-4438-b664-b2aa8ee05617"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "page_content='<h1 id='0' style='font-size:22px'>TransUNet: Transformers Make Strong<br>Encoders for Medical Image Segmentation</h1> <p id='1' data-category='paragraph' style='font-size:20px'>Jieneng Chen1, Yongyi Lu1, Qihang Yu1, Xiangde Luo2,<br>Ehsan Adeli3, Yan Wang4, Le Lu5, Alan L. Yuille1, and Yuyin Zhou3</p> <p id='2' data-category='equation'>$$^{2}\\mathrm{University~of~Electronice~and~Dniversity}}\\\\ {{\\mathrm{~^{2}~E l e c t r o n i c~S c i e n t e~E n a d~D r a t y e c h n o l o g y~G l i n a}}}\\\\ {{\\mathrm{~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~$$</p> <p id='3' data-category='paragraph' style='font-size:14px'>Abstract. Medical image segmentation is an essential prerequisite for<br>developing healthcare systems, especially for disease diagnosis and treat-<br>ment planning. On various medical image segmentation tasks, the u-<br>shaped architecture, also known as U-Net, has become the de-facto stan-<br>dard and achieved tremendous success. However, due to the intrinsic<br>locality of convolution operations, U-Net generally demonstrates limi-<br>tations in explicitly modeling long-range dependency. Transformers, de-<br>signed for sequence-to-sequence prediction, have emerged as alternative<br>architectures with innate global self-attention mechanisms, but can re-<br>sult in limited localization abilities due to insufficient low-level details.<br>In this paper, we propose TransUNet, which merits both Transformers<br>and U-Net, as a strong alternative for medical image segmentation. On<br>one hand, the Transformer encodes tokenized image patches from a con-<br>volution neural network (CNN) feature map as the input sequence for<br>extracting global contexts. On the other hand, the decoder upsamples<br>the encoded features which are then combined with the high-resolution<br>CNN feature maps to enable precise localization.<br>We argue that Transformers can serve as strong encoders for medical im-<br>age segmentation tasks, with the combination of U-Net to enhance finer<br>details by recovering localized spatial information. TransUNet achieves<br>superior performances to various competing methods on different medical<br>applications including multi-organ segmentation and cardiac segmenta-<br>tion. Code and models are available at https://github. com/Beckschen/<br>TransUNet.</p> <p id='5' data-category='paragraph' style='font-size:18px'>1 Introduction</p> <p id='6' data-category='paragraph' style='font-size:16px'>Convolutional neural networks (CNNs), especially fully convolutional networks<br>(FCNs) [8], have become dominant in medical image segmentation. Among dif-<br>ferent variants, U-Net [12], which consists of a symmetric encoder-decoder net-<br>work with skip-connections to enhance detail retention, has become the de-facto<br>choice. Based on this line of approach, tremendous success has been achieved<br>in a wide range of medical applications such as cardiac segmentation from</p>' metadata={'page': 1}\n",
      "page_content='<p id='7' data-category='paragraph' style='font-size:14px'>2 J. Chen et al.</p> <p id='8' data-category='paragraph' style='font-size:20px'>magnetic resonance (MR) [16], organ segmentation from computed tomography<br>(CT) [7, 17, 19] and polyp segmentation [20] from colonoscopy videos.</p> <br><p id='9' data-category='paragraph' style='font-size:18px'>In spite of their exceptional representational power, CNN-based approaches<br>generally exhibit limitations for modeling explicit long-range relation, due to the<br>intrinsic locality of convolution operations. Therefore, these architectures gen-<br>erally yield weak performances especially for target structures that show large<br>inter-patient variation in terms of texture, shape and size. To overcome this lim-<br>itation, existing studies propose to establish self-attention mechanisms based on<br>CNN features [13, 15]. On the other hand, Transformers, designed for sequence-<br>to-sequence prediction, have emerged as alternative architectures which employ<br>dispense convolution operators entirely and solely rely on attention mechanisms<br>instead [14]. Unlike prior CNN-based methods, Transformers are not only power-<br>ful at modeling global contexts but also demonstrate superior transferability for<br>downstream tasks under large-scale pre-training. The success has been widely<br>witnessed in the field of machine translation and natural language processing<br>(NLP) [3,14]. More recently, attempts have also matched or even exceeded state-<br>of-the-art performances for various image recognition tasks [4, 18].</p> <p id='10' data-category='paragraph' style='font-size:16px'>In this paper, we present the first study which explores the potential of trans-<br>formers in the context of medical image segmentation. However, interestingly,<br>we found that a naive usage (i.e., use a transformer for encoding the tokenized<br>image patches, and then directly upsamples the hidden feature representations<br>into a dense output of full resolution) cannot produce a satisfactory result.</p> <br><p id='11' data-category='paragraph' style='font-size:16px'>This is due to that Transformers treat the input as 1D sequences and ex-<br>clusively focus on modeling the global context at all stages, therefore result in<br>low-resolution features which lack detailed localization information. And this<br>information cannot be effectively recovered by direct upsampling to the full res-<br>olution, therefore leads to a coarse segmentation outcome. On the other hand,<br>CNN architectures (e.g., U-Net [12]) provide an avenue for extracting low-level<br>visual cues which can well remedy such fine spatial details.</p> <br><p id='12' data-category='paragraph' style='font-size:16px'>To this end, we propose TransUNet, the first medical image segmentation<br>framework, which establishes self-attention mechanisms from the perspective of<br>sequence-to-sequence prediction. To compensate for the loss of feature resolu-<br>tion brought by Transformers, TransUNet employs a hybrid CNN-Transformer<br>architecture to leverage both detailed high-resolution spatial information from<br>CNN features and the global context encoded by Transformers. Inspired by the<br>u-shaped architectural design, the self-attentive feature encoded by Transformers<br>is then upsampled to be combined with different high-resolution CNN features<br>skipped from the encoding path, for enabling precise localization. We show that<br>such a design allows our framework to preserve the advantages of Transformers<br>and also benefit medical image segmentation. Empirical results suggest that our<br>Transformer-based architecture presents a better way to leverage self-attention<br>compared with previous CNN-based self-attention methods. Additionally, we ob-<br>serve that more intensive incorporation of low-level features generally leads to<br>a better segmentation accuracy. Extensive experiments demonstrate the superi-</p>' metadata={'page': 2}\n",
      "page_content='<p id='14' data-category='paragraph' style='font-size:14px'>ority of our method against other competing methods on various medical image<br>segmentation tasks.</p> <p id='15' data-category='paragraph' style='font-size:20px'>2 Related Works</p> <p id='16' data-category='paragraph' style='font-size:16px'>Combining CNNs with self-attention mechanisms. Various studies have<br>attempted to integrate self-attention mechanisms into CNNs by modeling global<br>interactions of all pixels based on the feature maps. For instance, Wang et al.<br>designed a non-local operator, which can be plugged into multiple intermediate<br>convolution layers [15]. Built upon the encoder-decoder u-shaped architecture,<br>Schlemper et al. [13] proposed additive attention gate modules which are inte-<br>grated into the skip-connections. Different from these approaches, we employ<br>Transformers for embedding global self-attention in our method.</p> <br><p id='17' data-category='paragraph' style='font-size:16px'>Transformers. Transformers were first proposed by [14] for machine translation<br>and established state-of-the-arts in many NLP tasks. To make Transformers also<br>applicable for computer vision tasks, several modifications have been made. For<br>instance, Parmar et al. [11] applied the self-attention only in local neighborhoods<br>for each query pixel instead of globally. Child et al. [1] proposed Sparse Trans-<br>formers, which employ scalable approximations to global self-attention. Recently,<br>Vision Transformer (ViT) [] achieved state-of-the-art on ImageNet classification<br>by directly applying Transformers with global self-attention to full-sized images.<br>To the best of our knowledge, the proposed TransUNet is the first Transformer-<br>based medical image segmentation framework, which builds upon the highly<br>successful ViT.</p> <h1 id='18' style='font-size:20px'>3 Method</h1> <p id='19' data-category='paragraph' style='font-size:14px'>Given an image x E RHxWxC<br>with an spatial resolution of H x W and C num-<br>ber of channels. Our goal is to predict the corresponding pixel-wise labelmap<br>with size H x W. The most common way is to directly train a CNN (e.g., U-<br>Net) to first encode images into high-level feature representations, which are<br>then decoded back to the full spatial resolution. Unlike existing approaches, our<br>method introduces self-attention mechanisms into the encoder design via the us-<br>age of Transformers. We will first introduce how to directly apply transformer for<br>encoding feature representations from decomposed image patches in Section 3.1.<br>Then, the overall framework of TransUNet will be elaborated in Section 3.2.</p> <p id='20' data-category='paragraph' style='font-size:14px'>3.1 Transformer as Encoder</p> <p id='21' data-category='paragraph' style='font-size:14px'>Image Sequentialization. Following [4], we first perform tokenization by re-<br>shaping the input x into a sequence of flattened 2D patches {xi E RP2 �Pi =<br>HW of image<br>1,... N}, where each patch is of size P x P and N = is the number<br>p2<br>patches (i.e., the input sequence length).</p>' metadata={'page': 3}\n"
     ]
    }
   ],
   "source": [
    "from langchain_upstage import UpstageLayoutAnalysisLoader\n",
    "\n",
    "# 파일 경로\n",
    "file_path = \"/content/TransUNet_10p.pdf\"\n",
    "\n",
    "# 문서 로더 설정\n",
    "loader = UpstageLayoutAnalysisLoader(\n",
    "    file_path,\n",
    "    output_type=\"html\",\n",
    "    split=\"page\",\n",
    "    use_ocr=True,\n",
    "    exclude=[\"header\", \"footer\"],\n",
    "    api_key=UPSTAGE_API_KEY\n",
    ")\n",
    "\n",
    "# 문서 로드\n",
    "docs = loader.load()\n",
    "\n",
    "# 결과 출력\n",
    "for doc in docs[:3]:\n",
    "    print(doc)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyOoY8kvRTsOBlY1HYclyroC",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[07_03_TokenTextSplitter.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["asII8AAy7-Jx"],"authorship_tag":"ABX9TyOR/45f1vLz6u4RpKj4Yrp6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"6554c0c2faa94c9f8887d40835c07ef8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cb9c6879ad5e4437b479dbaa4d366c81","IPY_MODEL_c839f3d7cf5c496abcecde716e6bdf5c","IPY_MODEL_cd1856c149714d289f9a1f31f6ba2cf9"],"layout":"IPY_MODEL_7833043dbca9400ea7e4772a325e94df"}},"cb9c6879ad5e4437b479dbaa4d366c81":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_32a9ace796194b9696733929eca7a9b4","placeholder":"​","style":"IPY_MODEL_5e2267f3d2504e51b65dd4354509a2d7","value":"modules.json: 100%"}},"c839f3d7cf5c496abcecde716e6bdf5c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_271e0209cabf40a0a4f050c68894ab27","max":349,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d66da4a9cd5e4bb6b434750e6313ef9f","value":349}},"cd1856c149714d289f9a1f31f6ba2cf9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2968315ffdc4cb389f05e5c560173e7","placeholder":"​","style":"IPY_MODEL_eb063e4d7e0f461fae1fb7f46082e8c4","value":" 349/349 [00:00&lt;00:00, 13.4kB/s]"}},"7833043dbca9400ea7e4772a325e94df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32a9ace796194b9696733929eca7a9b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e2267f3d2504e51b65dd4354509a2d7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"271e0209cabf40a0a4f050c68894ab27":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d66da4a9cd5e4bb6b434750e6313ef9f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f2968315ffdc4cb389f05e5c560173e7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eb063e4d7e0f461fae1fb7f46082e8c4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"84b6a614a81a443a8e8e19641973f5fb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_af047840152a4481b226055ae9cddcc0","IPY_MODEL_e0b5f32796bf47039aee4906e3585db5","IPY_MODEL_b2e6bae9e30b47158936a43ed284a86b"],"layout":"IPY_MODEL_f5b64fa4dbb44b67a2683eb3e418e7ae"}},"af047840152a4481b226055ae9cddcc0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c69ff31af1a24ce8bab0bb5f2e941d98","placeholder":"​","style":"IPY_MODEL_ba12c2cb33a74e2499aee89eee51ea36","value":"config_sentence_transformers.json: 100%"}},"e0b5f32796bf47039aee4906e3585db5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_af24dff1d97142b3a6ddea8a0155bd9f","max":116,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ab96da41a9eb49819fe246c65ce2f28b","value":116}},"b2e6bae9e30b47158936a43ed284a86b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6fcb2ada6fa74d4f90406293ca59ca1e","placeholder":"​","style":"IPY_MODEL_4446ef95039049449cfa57d046ecb3ab","value":" 116/116 [00:00&lt;00:00, 6.08kB/s]"}},"f5b64fa4dbb44b67a2683eb3e418e7ae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c69ff31af1a24ce8bab0bb5f2e941d98":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ba12c2cb33a74e2499aee89eee51ea36":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"af24dff1d97142b3a6ddea8a0155bd9f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ab96da41a9eb49819fe246c65ce2f28b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6fcb2ada6fa74d4f90406293ca59ca1e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4446ef95039049449cfa57d046ecb3ab":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5d7193bff33344e1829876d9f00a6409":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_71af9d6f3efb49e99b93446bdef3c986","IPY_MODEL_683ead23f8624e829cf5719589b8a872","IPY_MODEL_76c291b5b30a4ebc98f76fb083d7eec6"],"layout":"IPY_MODEL_f418e4be9d92481abead4ee2f5423ae0"}},"71af9d6f3efb49e99b93446bdef3c986":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_514e22e964b24f8f9a35a33e369a2d77","placeholder":"​","style":"IPY_MODEL_42ff33a302894c82a604fd8f0f78d886","value":"README.md: 100%"}},"683ead23f8624e829cf5719589b8a872":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_366930355f76419188898b2f7a3b7bb4","max":10621,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0d73609dc622427385a6fcbb433c237b","value":10621}},"76c291b5b30a4ebc98f76fb083d7eec6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cda58d0555794ecf981288586bc30205","placeholder":"​","style":"IPY_MODEL_f855c58b1c104ed88ec29ca830037e25","value":" 10.6k/10.6k [00:00&lt;00:00, 700kB/s]"}},"f418e4be9d92481abead4ee2f5423ae0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"514e22e964b24f8f9a35a33e369a2d77":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"42ff33a302894c82a604fd8f0f78d886":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"366930355f76419188898b2f7a3b7bb4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0d73609dc622427385a6fcbb433c237b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cda58d0555794ecf981288586bc30205":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f855c58b1c104ed88ec29ca830037e25":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"75ba259498ae4a0d82104c1ea1295f42":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_38d6d5ad89734baf918d2467bdc5a039","IPY_MODEL_1f6b88fffee64b7786b1d0e4957530ab","IPY_MODEL_648eb344c58548b29300a715f8461b82"],"layout":"IPY_MODEL_ff3e629833ca4d9fb42af968fded95c7"}},"38d6d5ad89734baf918d2467bdc5a039":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_16b4f1de4d064080a77fdeaf71ee30fe","placeholder":"​","style":"IPY_MODEL_81afebecb3e049a099ecc3b41896c99d","value":"sentence_bert_config.json: 100%"}},"1f6b88fffee64b7786b1d0e4957530ab":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5936e23e916d4fed9c8ad786b74c8459","max":53,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3cf92d67830d4fb98fd95f99ae5f73b3","value":53}},"648eb344c58548b29300a715f8461b82":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_100e853ccca6429393082aa1f5244e02","placeholder":"​","style":"IPY_MODEL_0bd12654e8b7437b98934ca89a572e3c","value":" 53.0/53.0 [00:00&lt;00:00, 2.88kB/s]"}},"ff3e629833ca4d9fb42af968fded95c7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"16b4f1de4d064080a77fdeaf71ee30fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"81afebecb3e049a099ecc3b41896c99d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5936e23e916d4fed9c8ad786b74c8459":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3cf92d67830d4fb98fd95f99ae5f73b3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"100e853ccca6429393082aa1f5244e02":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0bd12654e8b7437b98934ca89a572e3c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6a0ccd8f9e1c46fcb3b7e177e744a4b6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_62a72f92a46244f7a4406cf2d8e09a27","IPY_MODEL_19a23b3150254c85ba92345961065d20","IPY_MODEL_08d8d54e10ab4bc09675a42cba066174"],"layout":"IPY_MODEL_505e258946c74655ba2f338ac7991c4c"}},"62a72f92a46244f7a4406cf2d8e09a27":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_127bba9355844021ae0341a58f82876f","placeholder":"​","style":"IPY_MODEL_00a27f4205fe4ab18e5454ad3b016a47","value":"config.json: 100%"}},"19a23b3150254c85ba92345961065d20":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a778ddb733bc487fb132ddeb95dad894","max":571,"min":0,"orientation":"horizontal","style":"IPY_MODEL_262918451b75440f91097cfb83e84cc0","value":571}},"08d8d54e10ab4bc09675a42cba066174":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_42141c610d7240108389422f8c316d10","placeholder":"​","style":"IPY_MODEL_9af1bb58f57b49dc9c20f0d29c4bde99","value":" 571/571 [00:00&lt;00:00, 28.7kB/s]"}},"505e258946c74655ba2f338ac7991c4c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"127bba9355844021ae0341a58f82876f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"00a27f4205fe4ab18e5454ad3b016a47":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a778ddb733bc487fb132ddeb95dad894":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"262918451b75440f91097cfb83e84cc0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"42141c610d7240108389422f8c316d10":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9af1bb58f57b49dc9c20f0d29c4bde99":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1cb7182514b244d88bd28f9448f9536d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a4b2e181f51348a383a1827c721048c3","IPY_MODEL_8fb8500144bc4204b8ae80f7e6b353c7","IPY_MODEL_b3f90a5b0e96420fb2eb4978a35c01a9"],"layout":"IPY_MODEL_2d1b9ca9777c45a0b639c1fd1d6ac42c"}},"a4b2e181f51348a383a1827c721048c3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_249b5cf085864b54965a7e5952620e15","placeholder":"​","style":"IPY_MODEL_3ffbe10100cb468ba4c9a9d758d2ab15","value":"model.safetensors: 100%"}},"8fb8500144bc4204b8ae80f7e6b353c7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5c6080eb615046f0bf90fe29b35ec534","max":437971872,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d5f2f1298cf04b589840cb9ec83519f0","value":437971872}},"b3f90a5b0e96420fb2eb4978a35c01a9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8a71d81a2bc54c79905fc46471432359","placeholder":"​","style":"IPY_MODEL_ed8d0966e5254475bf1907c80de67c0b","value":" 438M/438M [00:06&lt;00:00, 32.0MB/s]"}},"2d1b9ca9777c45a0b639c1fd1d6ac42c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"249b5cf085864b54965a7e5952620e15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3ffbe10100cb468ba4c9a9d758d2ab15":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5c6080eb615046f0bf90fe29b35ec534":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d5f2f1298cf04b589840cb9ec83519f0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8a71d81a2bc54c79905fc46471432359":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ed8d0966e5254475bf1907c80de67c0b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9d4b473259a34e83bcd7cdc5cbd6b5f6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_53e64344ef8a41ba8a490a6d61837bc2","IPY_MODEL_a0db7823008e4be6928cd4ba043e933f","IPY_MODEL_53d9265174554b4984c546a6156a7a8c"],"layout":"IPY_MODEL_3541cec928a648b99989703397b7227f"}},"53e64344ef8a41ba8a490a6d61837bc2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4d1cfa62129443b69853ce24eef9014f","placeholder":"​","style":"IPY_MODEL_46ff4a3f765b4358b33b350cd338897f","value":"tokenizer_config.json: 100%"}},"a0db7823008e4be6928cd4ba043e933f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ebc5b9ba5b4643568f5577b57cc60d85","max":363,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5a012571430940568a17ddd3f965ab5e","value":363}},"53d9265174554b4984c546a6156a7a8c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d3ec9e018c8247daa4d5a410a344d8cc","placeholder":"​","style":"IPY_MODEL_9d1ddfa29867422fa6630eb5c5865c89","value":" 363/363 [00:00&lt;00:00, 18.5kB/s]"}},"3541cec928a648b99989703397b7227f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4d1cfa62129443b69853ce24eef9014f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46ff4a3f765b4358b33b350cd338897f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ebc5b9ba5b4643568f5577b57cc60d85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a012571430940568a17ddd3f965ab5e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d3ec9e018c8247daa4d5a410a344d8cc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d1ddfa29867422fa6630eb5c5865c89":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dee12c6016434713b8a620f76d041103":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6eb7de53ea1c47d888a486125964aa61","IPY_MODEL_d4a90d127a8c4bcda32e9e970aee25a5","IPY_MODEL_1a25dae11ea849f48544d490fc9dd778"],"layout":"IPY_MODEL_cdda3cf1a30c4e5886108078d97293a4"}},"6eb7de53ea1c47d888a486125964aa61":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6420ccaaa8a24e8684fb1f992058cd01","placeholder":"​","style":"IPY_MODEL_a84634ed7f464241acf4e0ec773769af","value":"vocab.txt: 100%"}},"d4a90d127a8c4bcda32e9e970aee25a5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_84a4ebc686ca4258934355ae8829e831","max":231536,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c554b72e8b524756a154eb6c2826d9cf","value":231536}},"1a25dae11ea849f48544d490fc9dd778":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2e25d4ed76b54921b9c3e0477881bc10","placeholder":"​","style":"IPY_MODEL_bb56f244db634b8cb4f69f7923367dac","value":" 232k/232k [00:00&lt;00:00, 3.35MB/s]"}},"cdda3cf1a30c4e5886108078d97293a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6420ccaaa8a24e8684fb1f992058cd01":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a84634ed7f464241acf4e0ec773769af":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"84a4ebc686ca4258934355ae8829e831":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c554b72e8b524756a154eb6c2826d9cf":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2e25d4ed76b54921b9c3e0477881bc10":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bb56f244db634b8cb4f69f7923367dac":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7fdf37d64cba4ab5954fcf3aeb460c85":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d1231d2904d24bf0bd40a14a99b4a9b7","IPY_MODEL_59bd699b35454ea9958088f1aacee22d","IPY_MODEL_12f8627466424d178447d51fbf931a68"],"layout":"IPY_MODEL_2b34b98f257f4cb7a5b8a0e5c654f6e9"}},"d1231d2904d24bf0bd40a14a99b4a9b7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_915ffc711a6142f1a88e3e2ee413a2ce","placeholder":"​","style":"IPY_MODEL_541d70d412cc42e98d40f3254985b92a","value":"tokenizer.json: 100%"}},"59bd699b35454ea9958088f1aacee22d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4d45dea953be4cd1a3d89e6a285cffdc","max":466021,"min":0,"orientation":"horizontal","style":"IPY_MODEL_916c1a2d45c444ec92eb04834a278bf6","value":466021}},"12f8627466424d178447d51fbf931a68":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_590e8dee8b354729baed89af194e5d61","placeholder":"​","style":"IPY_MODEL_8cb8a957d8064531a447c3388b8d733f","value":" 466k/466k [00:00&lt;00:00, 3.53MB/s]"}},"2b34b98f257f4cb7a5b8a0e5c654f6e9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"915ffc711a6142f1a88e3e2ee413a2ce":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"541d70d412cc42e98d40f3254985b92a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4d45dea953be4cd1a3d89e6a285cffdc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"916c1a2d45c444ec92eb04834a278bf6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"590e8dee8b354729baed89af194e5d61":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8cb8a957d8064531a447c3388b8d733f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9ca1a3a4ae164c09a0a4ff351682838b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bfd9b50d29124646b039e55392683f45","IPY_MODEL_d11a7b81bb3d42c2a18edfe48c5f0190","IPY_MODEL_cbf3ee835fa34433abeb9a75cd2c9554"],"layout":"IPY_MODEL_d966392145eb41fba9402286d336327a"}},"bfd9b50d29124646b039e55392683f45":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d743d8211f3c482abbcaf448527e149b","placeholder":"​","style":"IPY_MODEL_dde9b2ef500146e190aeae1bb993e704","value":"special_tokens_map.json: 100%"}},"d11a7b81bb3d42c2a18edfe48c5f0190":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1569e6d619b48ed9140d0e2e22ee51e","max":239,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c61a381cc0254a9cba50aa014c80966d","value":239}},"cbf3ee835fa34433abeb9a75cd2c9554":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1d997759f3734062adea81d4b674fe39","placeholder":"​","style":"IPY_MODEL_e0b3b595b2ed431a894081c4ea4ad1df","value":" 239/239 [00:00&lt;00:00, 13.9kB/s]"}},"d966392145eb41fba9402286d336327a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d743d8211f3c482abbcaf448527e149b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dde9b2ef500146e190aeae1bb993e704":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d1569e6d619b48ed9140d0e2e22ee51e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c61a381cc0254a9cba50aa014c80966d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1d997759f3734062adea81d4b674fe39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e0b3b595b2ed431a894081c4ea4ad1df":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d2868f247a96434a8a56e8c7eaa64de8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8e58cbf11a3b4d33a52c7d217036ad95","IPY_MODEL_ad2ee082274d4663bb027b9cb3c035aa","IPY_MODEL_a5880eaf77904a0ea68675d7021dbd66"],"layout":"IPY_MODEL_95021b03f23240a4837491225ab3d60a"}},"8e58cbf11a3b4d33a52c7d217036ad95":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e1fc590097564f0cb9f3080e6ad25e11","placeholder":"​","style":"IPY_MODEL_0a07ad1faa3645a794ec2d931eb1dd41","value":"1_Pooling/config.json: 100%"}},"ad2ee082274d4663bb027b9cb3c035aa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3ec76cf8c39249c7a5e0f36d3ee0a4fe","max":190,"min":0,"orientation":"horizontal","style":"IPY_MODEL_230964b8aea742af995b2ea9d734d9f8","value":190}},"a5880eaf77904a0ea68675d7021dbd66":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_919fe5e7c5fd45f296567e134a640072","placeholder":"​","style":"IPY_MODEL_3fa8944929e145b9bc379a99d5f8e336","value":" 190/190 [00:00&lt;00:00, 8.09kB/s]"}},"95021b03f23240a4837491225ab3d60a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e1fc590097564f0cb9f3080e6ad25e11":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0a07ad1faa3645a794ec2d931eb1dd41":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3ec76cf8c39249c7a5e0f36d3ee0a4fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"230964b8aea742af995b2ea9d734d9f8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"919fe5e7c5fd45f296567e134a640072":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3fa8944929e145b9bc379a99d5f8e336":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b480eb0e084f45c4b2317c7d77b10b9e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_eb90870a9afd4c4384e5566af96a2fae","IPY_MODEL_89c7b730f6154671a2ec8a2e6f541be8","IPY_MODEL_e153d46a0daa4d33bcf088a575febcaf"],"layout":"IPY_MODEL_f62f999a5f754035a095d5634a897240"}},"eb90870a9afd4c4384e5566af96a2fae":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_be72e338b5b1421285d96af28699c387","placeholder":"​","style":"IPY_MODEL_f044547c642242ba9d82a36241867cb2","value":"tokenizer_config.json: 100%"}},"89c7b730f6154671a2ec8a2e6f541be8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a565a2fb51b840bf884a80b82be1319c","max":26,"min":0,"orientation":"horizontal","style":"IPY_MODEL_38f4a51d01ef4c0187554d855229c1de","value":26}},"e153d46a0daa4d33bcf088a575febcaf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e8607a3aae184563ab9b8ba1939c8d66","placeholder":"​","style":"IPY_MODEL_14102d88e4ef4283840ac44f530ec338","value":" 26.0/26.0 [00:00&lt;00:00, 1.76kB/s]"}},"f62f999a5f754035a095d5634a897240":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"be72e338b5b1421285d96af28699c387":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f044547c642242ba9d82a36241867cb2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a565a2fb51b840bf884a80b82be1319c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38f4a51d01ef4c0187554d855229c1de":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e8607a3aae184563ab9b8ba1939c8d66":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14102d88e4ef4283840ac44f530ec338":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2a01d663dd0e4f0c86c148ca8df78357":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_52b71e431be54db6830deed892c81b37","IPY_MODEL_35e0f0b195b84498ad18a3238088d4ea","IPY_MODEL_176659d66e274f6cb6d244cde43b2dbc"],"layout":"IPY_MODEL_ef10e9f9c33c4e859a55d5c86dc8089c"}},"52b71e431be54db6830deed892c81b37":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_77e4992c5b1c4ff796f608dda8fd4547","placeholder":"​","style":"IPY_MODEL_6cd94661819248cb93a24c9540a4bd6a","value":"vocab.json: 100%"}},"35e0f0b195b84498ad18a3238088d4ea":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_35f7810f5f44410f8e6affad6fb41bc5","max":1042301,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6b693abccc5649749258b51b00cc0da7","value":1042301}},"176659d66e274f6cb6d244cde43b2dbc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1aaae036c65244e3afb999fff195ac4c","placeholder":"​","style":"IPY_MODEL_855c08414c4840aaae2722f23232030b","value":" 1.04M/1.04M [00:00&lt;00:00, 12.2MB/s]"}},"ef10e9f9c33c4e859a55d5c86dc8089c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"77e4992c5b1c4ff796f608dda8fd4547":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6cd94661819248cb93a24c9540a4bd6a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"35f7810f5f44410f8e6affad6fb41bc5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b693abccc5649749258b51b00cc0da7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1aaae036c65244e3afb999fff195ac4c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"855c08414c4840aaae2722f23232030b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"451005105156444dbc7e115189981c8c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f566b2080fee4908baa291112383f3d7","IPY_MODEL_dd8805f115164af39f4d6e04f33d7354","IPY_MODEL_ec1188ce159d42d7949cd3cd078d6b24"],"layout":"IPY_MODEL_315bbcc259b2403db4e06736915400a6"}},"f566b2080fee4908baa291112383f3d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4fd30cb6c16a4d49b3962379edb73a8a","placeholder":"​","style":"IPY_MODEL_45f9b239b79644c4a39cb91132d87ce5","value":"merges.txt: 100%"}},"dd8805f115164af39f4d6e04f33d7354":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_04d236039b6846a28ea38d7d4c578451","max":456318,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3c156eeb042e4798bc95f892c75244b3","value":456318}},"ec1188ce159d42d7949cd3cd078d6b24":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_45a5bc9812304d6eba7da2a2f95f65a5","placeholder":"​","style":"IPY_MODEL_16868dbec8f6468bb2a60856029d0a62","value":" 456k/456k [00:00&lt;00:00, 16.9MB/s]"}},"315bbcc259b2403db4e06736915400a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4fd30cb6c16a4d49b3962379edb73a8a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"45f9b239b79644c4a39cb91132d87ce5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"04d236039b6846a28ea38d7d4c578451":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3c156eeb042e4798bc95f892c75244b3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"45a5bc9812304d6eba7da2a2f95f65a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"16868dbec8f6468bb2a60856029d0a62":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7db4769ba7c14dba8bdc2cdff20680cc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4bcf3eac7e034d958acc5a339efc036f","IPY_MODEL_388b1a31fb904fba8da309e2ecaf5198","IPY_MODEL_06e0e946090449128ace03d75aec9282"],"layout":"IPY_MODEL_79c57a2f55074fee8f548b36f38d928e"}},"4bcf3eac7e034d958acc5a339efc036f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_70cd07a6dab5469d96e050bae57b12f2","placeholder":"​","style":"IPY_MODEL_e98968b660064d8f92891e3f7ed3bb4f","value":"tokenizer.json: 100%"}},"388b1a31fb904fba8da309e2ecaf5198":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6bf7222a94fa4a5593a0f5d3d2e919f2","max":1355256,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6fa486c0cbe84a5cb35e54b0d2b9351b","value":1355256}},"06e0e946090449128ace03d75aec9282":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1ac727bf960242d1b14b8ea28d71e10b","placeholder":"​","style":"IPY_MODEL_cfee005834af4b778fd81732186cb791","value":" 1.36M/1.36M [00:00&lt;00:00, 8.98MB/s]"}},"79c57a2f55074fee8f548b36f38d928e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"70cd07a6dab5469d96e050bae57b12f2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e98968b660064d8f92891e3f7ed3bb4f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6bf7222a94fa4a5593a0f5d3d2e919f2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6fa486c0cbe84a5cb35e54b0d2b9351b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1ac727bf960242d1b14b8ea28d71e10b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cfee005834af4b778fd81732186cb791":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0db46e32111f4de4be47980740471bc6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c15c29525290491d8bb0a930a1254f55","IPY_MODEL_95efc71023a0453a812d9434ad81f614","IPY_MODEL_051b23f27a3a409c8e4fc73782e62b50"],"layout":"IPY_MODEL_b77b2b74435b4a41986a5c7ee904e13e"}},"c15c29525290491d8bb0a930a1254f55":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_75aa41a8326f472abb1b486167c437ec","placeholder":"​","style":"IPY_MODEL_8fbe7f74e8b647619ef895afb59e4954","value":"config.json: 100%"}},"95efc71023a0453a812d9434ad81f614":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_79afdeddbb07454b8a16703730990aaa","max":665,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5cacdebfcffe432d8e2558d4d76c2528","value":665}},"051b23f27a3a409c8e4fc73782e62b50":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fbaf3f0b4b194825948806667ab9b3e6","placeholder":"​","style":"IPY_MODEL_0df5741b6c024b789719aa5772f42aab","value":" 665/665 [00:00&lt;00:00, 41.1kB/s]"}},"b77b2b74435b4a41986a5c7ee904e13e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"75aa41a8326f472abb1b486167c437ec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8fbe7f74e8b647619ef895afb59e4954":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"79afdeddbb07454b8a16703730990aaa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5cacdebfcffe432d8e2558d4d76c2528":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fbaf3f0b4b194825948806667ab9b3e6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0df5741b6c024b789719aa5772f42aab":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["# CharacterTextSplitter"],"metadata":{"id":"asII8AAy7-Jx"}},{"cell_type":"code","source":["# data/appendix-keywords.txt 파일을 열어서 f라는 파일 객체를 생성합니다.\n","with open(\"appendix-keywords.txt\") as f:\n","  file = f.read()"],"metadata":{"id":"_6nFInKH84LP","executionInfo":{"status":"ok","timestamp":1735518358579,"user_tz":-540,"elapsed":281,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# 파일으로부터 읽은 내용을 일부 출력합니다.\n","print(file[:500])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Un0UBixB9KPT","executionInfo":{"status":"ok","timestamp":1735518391370,"user_tz":-540,"elapsed":362,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"66f90a62-143d-4b44-b739-d34b6e03fa37"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n","연관키워드: 자연어 처리, 벡터화, 딥러닝\n","\n","Token\n","\n","정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다.\n","예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다.\n","연관키워드: 토큰화, 자연어\n"]}]},{"cell_type":"code","source":["! pip install -q tiktoken"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rhBKy7Ta94X_","executionInfo":{"status":"ok","timestamp":1735518675283,"user_tz":-540,"elapsed":4383,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"afc2dc46-557e-4d1f-9436-a0c3e87d0bca"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.2 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.1/1.2 MB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━\u001b[0m \u001b[32m0.9/1.2 MB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m12.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["from langchain_text_splitters import CharacterTextSplitter\n","\n","text_splitter = CharacterTextSplitter.from_tiktoken_encoder(\n","    # 청크 크기를 300으로 설정합니다.\n","    chunk_size=300,\n","    # 청크 간 겹치는 부분을 0으로 설정합니다.\n","    chunk_overlap=0,\n",")\n","# file 텍스트를 청크 단위로 분할합니다.\n","texts = text_splitter.split_text(file)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZmYvnmVe99SU","executionInfo":{"status":"ok","timestamp":1735519156564,"user_tz":-540,"elapsed":280,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"be71d80c-d188-4b0b-df36-1ac0edd82542"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:langchain_text_splitters.base:Created a chunk of size 358, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 315, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 305, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 366, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 330, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 351, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 378, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 361, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 350, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 362, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 335, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 353, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 358, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 336, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 324, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 337, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 307, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 361, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 354, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 378, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 381, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 365, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 377, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 329, which is longer than the specified 300\n"]}]},{"cell_type":"code","source":["print(len(texts)) # 분할된 청크의 개수를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1kWDG-zb_UKv","executionInfo":{"status":"ok","timestamp":1735518942420,"user_tz":-540,"elapsed":2,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"18be4674-4e67-4272-e32c-838bced99ddb"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["51\n"]}]},{"cell_type":"code","source":["# texts 리스트의 첫 번째 요소를 출력합니다.\n","print(texts[2])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B6eSCFLa_YYk","executionInfo":{"status":"ok","timestamp":1735519037264,"user_tz":-540,"elapsed":353,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"c4c0f592-c7ed-41ba-c735-251bca9726ae"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Embedding\n"]}]},{"cell_type":"markdown","source":["# Tokentextsplitter"],"metadata":{"id":"CZSgAjdsAAu3"}},{"cell_type":"code","source":["from langchain_text_splitters import TokenTextSplitter\n","\n","text_splitter = TokenTextSplitter(\n","    chunk_size=200,\n","    chunk_overlap=0,\n",")\n","# file 텍스트를 청크 단위로 분할합니다.\n","texts = text_splitter.split_text(file)\n","print(len(texts))\n","print(texts[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DrI6hOy3AEgh","executionInfo":{"status":"ok","timestamp":1735519563953,"user_tz":-540,"elapsed":4,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"f974828e-266b-4845-a1ae-c8f0703dec36"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["53\n","Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"�\n"]}]},{"cell_type":"markdown","source":["# spaCy"],"metadata":{"id":"Jh2rJXP3B_hP"}},{"cell_type":"code","source":["! pip install -qU spacy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TWj-_gA1CGl-","executionInfo":{"status":"ok","timestamp":1735519690840,"user_tz":-540,"elapsed":10927,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a34b7186-92a1-4359-fbcf-1275d7fd3d52"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m29.1/29.1 MB\u001b[0m \u001b[31m52.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.7/3.7 MB\u001b[0m \u001b[31m53.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.2/9.2 MB\u001b[0m \u001b[31m59.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","en-core-web-sm 3.7.1 requires spacy<3.8.0,>=3.7.2, but you have spacy 3.8.3 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0m"]}]},{"cell_type":"code","source":["! python -m spacy download en_core_web_sm --quiet"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QanCue9fCYky","executionInfo":{"status":"ok","timestamp":1735519775737,"user_tz":-540,"elapsed":12041,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"7b476a81-31bd-476a-d9b6-674f31b2dd0c"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.8/12.8 MB\u001b[0m \u001b[31m82.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n","You can now load the package via spacy.load('en_core_web_sm')\n","\u001b[38;5;3m⚠ Restart to reload dependencies\u001b[0m\n","If you are in a Jupyter or Colab notebook, you may need to restart Python in\n","order to load all the package's dependencies. You can do this by selecting the\n","'Restart kernel' or 'Restart runtime' option.\n"]}]},{"cell_type":"code","source":["# data/appendix-keywords.txt 파일을 열어서 f라는 파일 객체를 생성합니다.\n","with open(\"appendix-keywords.txt\") as f:\n","  file = f.read()"],"metadata":{"id":"EMJr06B-CgfX","executionInfo":{"status":"ok","timestamp":1735519778769,"user_tz":-540,"elapsed":401,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["import warnings\n","from langchain_text_splitters import SpacyTextSplitter\n","\n","# 경고 메시지를 무시합니다.\n","warnings.filterwarnings(\"ignore\")\n","\n","# spacyTextSplitter를 생성합니다.\n","text_splitter = SpacyTextSplitter(\n","    chunk_size=200, # 청크 크기를 200으로 설ㅈ어합니다.\n","    chunk_overlap=0, # 청크 간 중복을 50으로 설정합니다.\n",")"],"metadata":{"id":"aaBD6XHuCpKv","executionInfo":{"status":"ok","timestamp":1735519944096,"user_tz":-540,"elapsed":5015,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# text_splitte를 사용하여 file 텍스트를 분할합니다.\n","texts = text_splitter.split_text(file)\n","print(texts[1]) # 분할된 텍스트의 첫 번째 요소를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EV-6X8C-DLIT","executionInfo":{"status":"ok","timestamp":1735520077802,"user_tz":-540,"elapsed":265,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"c5fb6eab-de7f-449b-c0ee-4115f1cd0b11"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나\n","\n","문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다.\n","\n","이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","\n","\n","예시: \"사과\"라는 단어를\n","\n","[0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n"]}]},{"cell_type":"markdown","source":["# SentenceTransformers"],"metadata":{"id":"T9FDf6D5Gza3"}},{"cell_type":"code","source":["from langchain_text_splitters import SentenceTransformersTokenTextSplitter\n","\n","# 문장 분할기를 생성하고 청크 간 중복을 0으로 설정합니다.\n","splitter = SentenceTransformersTokenTextSplitter(chunk_size=200,chunk_overlap=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369,"referenced_widgets":["6554c0c2faa94c9f8887d40835c07ef8","cb9c6879ad5e4437b479dbaa4d366c81","c839f3d7cf5c496abcecde716e6bdf5c","cd1856c149714d289f9a1f31f6ba2cf9","7833043dbca9400ea7e4772a325e94df","32a9ace796194b9696733929eca7a9b4","5e2267f3d2504e51b65dd4354509a2d7","271e0209cabf40a0a4f050c68894ab27","d66da4a9cd5e4bb6b434750e6313ef9f","f2968315ffdc4cb389f05e5c560173e7","eb063e4d7e0f461fae1fb7f46082e8c4","84b6a614a81a443a8e8e19641973f5fb","af047840152a4481b226055ae9cddcc0","e0b5f32796bf47039aee4906e3585db5","b2e6bae9e30b47158936a43ed284a86b","f5b64fa4dbb44b67a2683eb3e418e7ae","c69ff31af1a24ce8bab0bb5f2e941d98","ba12c2cb33a74e2499aee89eee51ea36","af24dff1d97142b3a6ddea8a0155bd9f","ab96da41a9eb49819fe246c65ce2f28b","6fcb2ada6fa74d4f90406293ca59ca1e","4446ef95039049449cfa57d046ecb3ab","5d7193bff33344e1829876d9f00a6409","71af9d6f3efb49e99b93446bdef3c986","683ead23f8624e829cf5719589b8a872","76c291b5b30a4ebc98f76fb083d7eec6","f418e4be9d92481abead4ee2f5423ae0","514e22e964b24f8f9a35a33e369a2d77","42ff33a302894c82a604fd8f0f78d886","366930355f76419188898b2f7a3b7bb4","0d73609dc622427385a6fcbb433c237b","cda58d0555794ecf981288586bc30205","f855c58b1c104ed88ec29ca830037e25","75ba259498ae4a0d82104c1ea1295f42","38d6d5ad89734baf918d2467bdc5a039","1f6b88fffee64b7786b1d0e4957530ab","648eb344c58548b29300a715f8461b82","ff3e629833ca4d9fb42af968fded95c7","16b4f1de4d064080a77fdeaf71ee30fe","81afebecb3e049a099ecc3b41896c99d","5936e23e916d4fed9c8ad786b74c8459","3cf92d67830d4fb98fd95f99ae5f73b3","100e853ccca6429393082aa1f5244e02","0bd12654e8b7437b98934ca89a572e3c","6a0ccd8f9e1c46fcb3b7e177e744a4b6","62a72f92a46244f7a4406cf2d8e09a27","19a23b3150254c85ba92345961065d20","08d8d54e10ab4bc09675a42cba066174","505e258946c74655ba2f338ac7991c4c","127bba9355844021ae0341a58f82876f","00a27f4205fe4ab18e5454ad3b016a47","a778ddb733bc487fb132ddeb95dad894","262918451b75440f91097cfb83e84cc0","42141c610d7240108389422f8c316d10","9af1bb58f57b49dc9c20f0d29c4bde99","1cb7182514b244d88bd28f9448f9536d","a4b2e181f51348a383a1827c721048c3","8fb8500144bc4204b8ae80f7e6b353c7","b3f90a5b0e96420fb2eb4978a35c01a9","2d1b9ca9777c45a0b639c1fd1d6ac42c","249b5cf085864b54965a7e5952620e15","3ffbe10100cb468ba4c9a9d758d2ab15","5c6080eb615046f0bf90fe29b35ec534","d5f2f1298cf04b589840cb9ec83519f0","8a71d81a2bc54c79905fc46471432359","ed8d0966e5254475bf1907c80de67c0b","9d4b473259a34e83bcd7cdc5cbd6b5f6","53e64344ef8a41ba8a490a6d61837bc2","a0db7823008e4be6928cd4ba043e933f","53d9265174554b4984c546a6156a7a8c","3541cec928a648b99989703397b7227f","4d1cfa62129443b69853ce24eef9014f","46ff4a3f765b4358b33b350cd338897f","ebc5b9ba5b4643568f5577b57cc60d85","5a012571430940568a17ddd3f965ab5e","d3ec9e018c8247daa4d5a410a344d8cc","9d1ddfa29867422fa6630eb5c5865c89","dee12c6016434713b8a620f76d041103","6eb7de53ea1c47d888a486125964aa61","d4a90d127a8c4bcda32e9e970aee25a5","1a25dae11ea849f48544d490fc9dd778","cdda3cf1a30c4e5886108078d97293a4","6420ccaaa8a24e8684fb1f992058cd01","a84634ed7f464241acf4e0ec773769af","84a4ebc686ca4258934355ae8829e831","c554b72e8b524756a154eb6c2826d9cf","2e25d4ed76b54921b9c3e0477881bc10","bb56f244db634b8cb4f69f7923367dac","7fdf37d64cba4ab5954fcf3aeb460c85","d1231d2904d24bf0bd40a14a99b4a9b7","59bd699b35454ea9958088f1aacee22d","12f8627466424d178447d51fbf931a68","2b34b98f257f4cb7a5b8a0e5c654f6e9","915ffc711a6142f1a88e3e2ee413a2ce","541d70d412cc42e98d40f3254985b92a","4d45dea953be4cd1a3d89e6a285cffdc","916c1a2d45c444ec92eb04834a278bf6","590e8dee8b354729baed89af194e5d61","8cb8a957d8064531a447c3388b8d733f","9ca1a3a4ae164c09a0a4ff351682838b","bfd9b50d29124646b039e55392683f45","d11a7b81bb3d42c2a18edfe48c5f0190","cbf3ee835fa34433abeb9a75cd2c9554","d966392145eb41fba9402286d336327a","d743d8211f3c482abbcaf448527e149b","dde9b2ef500146e190aeae1bb993e704","d1569e6d619b48ed9140d0e2e22ee51e","c61a381cc0254a9cba50aa014c80966d","1d997759f3734062adea81d4b674fe39","e0b3b595b2ed431a894081c4ea4ad1df","d2868f247a96434a8a56e8c7eaa64de8","8e58cbf11a3b4d33a52c7d217036ad95","ad2ee082274d4663bb027b9cb3c035aa","a5880eaf77904a0ea68675d7021dbd66","95021b03f23240a4837491225ab3d60a","e1fc590097564f0cb9f3080e6ad25e11","0a07ad1faa3645a794ec2d931eb1dd41","3ec76cf8c39249c7a5e0f36d3ee0a4fe","230964b8aea742af995b2ea9d734d9f8","919fe5e7c5fd45f296567e134a640072","3fa8944929e145b9bc379a99d5f8e336"]},"id":"w6xmoUnLGzKG","executionInfo":{"status":"ok","timestamp":1735521113051,"user_tz":-540,"elapsed":29229,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"22425cbe-1c24-41df-d2a0-425aa6e748b3"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["modules.json:   0%|          | 0.00/349 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6554c0c2faa94c9f8887d40835c07ef8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config_sentence_transformers.json:   0%|          | 0.00/116 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"84b6a614a81a443a8e8e19641973f5fb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["README.md:   0%|          | 0.00/10.6k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5d7193bff33344e1829876d9f00a6409"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"75ba259498ae4a0d82104c1ea1295f42"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/571 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6a0ccd8f9e1c46fcb3b7e177e744a4b6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/438M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1cb7182514b244d88bd28f9448f9536d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/363 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9d4b473259a34e83bcd7cdc5cbd6b5f6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dee12c6016434713b8a620f76d041103"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7fdf37d64cba4ab5954fcf3aeb460c85"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/239 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9ca1a3a4ae164c09a0a4ff351682838b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["1_Pooling/config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d2868f247a96434a8a56e8c7eaa64de8"}},"metadata":{}}]},{"cell_type":"code","source":["# data/appendix-keywords.txt 파일을 열어서 f라는 파일 객체를 생성합니다.\n","with open(\"appendix-keywords.txt\") as f:\n","    file = f.read()  # 파일의 내용을 읽어서 file 변수에 저장합니다.\n","\n","# 파일으로부터 읽은 내용을 일부 출력합니다.\n","print(file[:350])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ABS_xRMOHyoa","executionInfo":{"status":"ok","timestamp":1735521616961,"user_tz":-540,"elapsed":301,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"1027405d-958e-4d3a-ad2d-c3966546bfae"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n","연관키워드: 자연어 처\n"]}]},{"cell_type":"markdown","source":["다음은 file 변수에 담긴 텍스트의 토큰의 개수를 세는 코드입니다. 시작과 종료 토큰의 개수를 제외한 후 출력합니다."],"metadata":{"id":"6PGhEOB5IDgf"}},{"cell_type":"code","source":["count_start_and_stop_tokens = 2 # 시작과 종료 토큰의 개수를 2로 설정합니다.\n","\n","# 텍스트의 토큰 개수에서 시작과 종료 토큰의 개수를 뺍니다.\n","text_token_count = splitter.count_tokens(text= file) - count_start_and_stop_tokens\n","print(text_token_count) # 계산된 텍스트 토큰 개수를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"98a6hDbVH9F9","executionInfo":{"status":"ok","timestamp":1735521666983,"user_tz":-540,"elapsed":4,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"6a7f93e2-18bd-43eb-97e7-8f43f9881464"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["7686\n"]}]},{"cell_type":"code","source":["text_chunks = splitter.split_text(file) # 텍스트를 청크로 분할합니다."],"metadata":{"id":"Upxkv7q2IlT-","executionInfo":{"status":"ok","timestamp":1735521650898,"user_tz":-540,"elapsed":371,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["# 0번째 청크를 출력합니다.\n","print(text_chunks[0]) # 분할된 텍스트 청크 중 두 번째 청크를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XOJ4beKbIs2j","executionInfo":{"status":"ok","timestamp":1735521652230,"user_tz":-540,"elapsed":3,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"31433d55-4b18-4174-a2b7-8f11c81c6e35"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["semantic search 정의 : 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 [UNK] 결과를 반환하는 검색 방식입니다. [UNK] : 사용자가 \" [UNK] 행성 \" 이라고 검색하면, \" 목성 \", \" 화성 \" 등과 [UNK] [UNK] 행성에 대한 정보를 반환합니다. 연관키워드 : 자연어 처리, 검색 알고리즘, 데이터 마이닝 embedding 정의 : 임베딩은 단어나 문장 [UNK] 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다\n"]}]},{"cell_type":"markdown","source":["# KoNLPy\n","KoNLPy(Korean NLP in Python)는 한국어 자연어 처리(NLP)를 위한 파이썬 패키지입니다.\n","\n","토큰 분할은 텍스트를 토큰이라고 하는 더 작고 관리하기 쉬운 단위로 분할하는 과정을 포함합니다.\n","\n","이러한 토큰은 종종 단어, 구, 기호 또는 추가 처리 및 분석에 중요한 다른 의미 있는 요소입니다.\n","\n","영어와 같은 언어에서 토큰 분할은 일반적으로 공백과 구두점으로 단어를 분리하는 것을 포함합니다.\n","\n","토큰 분할의 효과는 언어 구조에 대한 토크나이저의 이해에 크게 의존하며, 이는 의미 있는 토큰 생성을 보장합니다.\n","\n","영어를 위해 설계된 토크나이저는 한국어와 같은 다른 언어의 고유한 의미 구조를 이해할 수 있는 능력이 없기 때문에 한국어 처리에 효과적으로 사용될 수 없습니다.\n","\n","KoNLPy의 Kkma 분석기를 사용한 한국어 토큰 분할\n","한국어 텍스트의 경우 KoNLPY에는 Kkma(Korean Knowledge Morpheme Analyzer)라는 형태소 분석기가 포함되어 있습니다.\n","\n","Kkma는 한국어 텍스트에 대한 상세한 형태소 분석을 제공합니다.\n","\n","문장을 단어로, 단어를 각각의 형태소로 분해하고 각 토큰에 대한 품사를 식별합니다.\n","\n","텍스트 블록을 개별 문장으로 분할할 수 있어 긴 텍스트 처리에 특히 유용합니다.\n","\n","사용시 고려사항\n","Kkma는 상세한 분석으로 유명하지만, 이러한 정밀성이 처리 속도에 영향을 미칠 수 있다는 점에 유의해야 합니다. 따라서 Kkma는 신속한 텍스트 처리보다 분석적 깊이가 우선시되는 애플리케이션에 가장 적합합니다.\n","\n","KoNLPy 라이브러리를 설치하는 pip 명령어입니다.\n","KoNLPy는 한국어 자연어 처리를 위한 파이썬 패키지로, 형태소 분석, 품사 태깅, 구문 분석 등의 기능을 제공합니다."],"metadata":{"id":"oKp_P1FRJMqn"}},{"cell_type":"code","source":["! pip install -qU konlpy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o8KeyIhjJTZT","executionInfo":{"status":"ok","timestamp":1735521729504,"user_tz":-540,"elapsed":4691,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"6e1dffdc-4fbe-41b0-870f-ea20b8baadc3"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.4/19.4 MB\u001b[0m \u001b[31m63.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m493.8/493.8 kB\u001b[0m \u001b[31m25.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["# data/appendix-keywords.txt 파일을 열어서 f라는 파일 객체를 생성합니다.\n","with open(\"appendix-keywords.txt\") as f:\n","    file = f.read()  # 파일의 내용을 읽어서 file 변수에 저장합니다.\n","\n","# 파일으로부터 읽은 내용을 일부 출력합니다.\n","print(file[:350])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9TjC1JJgKGfQ","executionInfo":{"status":"ok","timestamp":1735521786614,"user_tz":-540,"elapsed":413,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"3f814b32-2cc9-4a5e-a8b0-d051bd0c270c"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n","연관키워드: 자연어 처\n"]}]},{"cell_type":"code","source":["import chunk\n","from langchain_text_splitters import KonlpyTextSplitter\n","\n","# KonlpyTextSplitter를 사용하여 텍스트 분할기 객체를 생성합니다.\n","text_splitter = KonlpyTextSplitter(chunk_size=200, chunk_overlap=50)"],"metadata":{"id":"OgS4YF9BKQBH","executionInfo":{"status":"ok","timestamp":1735521897780,"user_tz":-540,"elapsed":3040,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["import chunk\n","from langchain_text_splitters import KonlpyTextSplitter\n","\n","text_splitter = KonlpyTextSplitter(chunk_size=200,chunk_overlap=50,)"],"metadata":{"id":"mTZ_CZOlLXog","executionInfo":{"status":"ok","timestamp":1735522137918,"user_tz":-540,"elapsed":375,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["texts = text_splitter.split_text(file) # 한국어 문서를 문장 단위로 분할합니다.\n","print(texts[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T9wyn3tOKo3y","executionInfo":{"status":"ok","timestamp":1735521952055,"user_tz":-540,"elapsed":26898,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"ef070a5b-c65c-414a-f928-a99741be1878"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search 정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","\n","예시: 사용자가 \" 태양계 행성\" 이라고 검색하면, \" 목성\", \" 화 성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n"]}]},{"cell_type":"markdown","source":["# Hugging Face tokenizer\n","Hugging Face는 다양한 토크나이저를 제공합니다.\n","\n","이 코드에서는 Hugging Face의 토크나이저 중 하나인 GPT2TokenizerFast를 사용하여 텍스트의 토큰 길이를 계산합니다.\n","\n","텍스트 분할 방식은 다음과 같습니다:\n","\n","전달된 문자 단위로 분할됩니다.\n","청크 크기 측정 방식은 다음과 같습니다:\n","\n","Hugging Face 토크나이저에 의해 계산된 토큰 수를 기준으로 합니다.\n","\n","GPT2TokenizerFast 클래스를 사용하여 tokenizer 객체를 생성합니다.\n","\n","from_pretrained 메서드를 호출하여 사전 학습된 \"gpt2\" 토크나이저 모델을 로드합니다."],"metadata":{"id":"1QUJtv5cKy0s"}},{"cell_type":"code","source":["from transformers import GPT2TokenizerFast\n","\n","# GPT-2 모델의 토크나이저를 불러옵니다.\n","hf_tokenizer = GPT2TokenizerFast.from_pretrained(\"gpt2\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":177,"referenced_widgets":["b480eb0e084f45c4b2317c7d77b10b9e","eb90870a9afd4c4384e5566af96a2fae","89c7b730f6154671a2ec8a2e6f541be8","e153d46a0daa4d33bcf088a575febcaf","f62f999a5f754035a095d5634a897240","be72e338b5b1421285d96af28699c387","f044547c642242ba9d82a36241867cb2","a565a2fb51b840bf884a80b82be1319c","38f4a51d01ef4c0187554d855229c1de","e8607a3aae184563ab9b8ba1939c8d66","14102d88e4ef4283840ac44f530ec338","2a01d663dd0e4f0c86c148ca8df78357","52b71e431be54db6830deed892c81b37","35e0f0b195b84498ad18a3238088d4ea","176659d66e274f6cb6d244cde43b2dbc","ef10e9f9c33c4e859a55d5c86dc8089c","77e4992c5b1c4ff796f608dda8fd4547","6cd94661819248cb93a24c9540a4bd6a","35f7810f5f44410f8e6affad6fb41bc5","6b693abccc5649749258b51b00cc0da7","1aaae036c65244e3afb999fff195ac4c","855c08414c4840aaae2722f23232030b","451005105156444dbc7e115189981c8c","f566b2080fee4908baa291112383f3d7","dd8805f115164af39f4d6e04f33d7354","ec1188ce159d42d7949cd3cd078d6b24","315bbcc259b2403db4e06736915400a6","4fd30cb6c16a4d49b3962379edb73a8a","45f9b239b79644c4a39cb91132d87ce5","04d236039b6846a28ea38d7d4c578451","3c156eeb042e4798bc95f892c75244b3","45a5bc9812304d6eba7da2a2f95f65a5","16868dbec8f6468bb2a60856029d0a62","7db4769ba7c14dba8bdc2cdff20680cc","4bcf3eac7e034d958acc5a339efc036f","388b1a31fb904fba8da309e2ecaf5198","06e0e946090449128ace03d75aec9282","79c57a2f55074fee8f548b36f38d928e","70cd07a6dab5469d96e050bae57b12f2","e98968b660064d8f92891e3f7ed3bb4f","6bf7222a94fa4a5593a0f5d3d2e919f2","6fa486c0cbe84a5cb35e54b0d2b9351b","1ac727bf960242d1b14b8ea28d71e10b","cfee005834af4b778fd81732186cb791","0db46e32111f4de4be47980740471bc6","c15c29525290491d8bb0a930a1254f55","95efc71023a0453a812d9434ad81f614","051b23f27a3a409c8e4fc73782e62b50","b77b2b74435b4a41986a5c7ee904e13e","75aa41a8326f472abb1b486167c437ec","8fbe7f74e8b647619ef895afb59e4954","79afdeddbb07454b8a16703730990aaa","5cacdebfcffe432d8e2558d4d76c2528","fbaf3f0b4b194825948806667ab9b3e6","0df5741b6c024b789719aa5772f42aab"]},"id":"Jl7Cqg48KyJp","executionInfo":{"status":"ok","timestamp":1735522185508,"user_tz":-540,"elapsed":1415,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"21b47374-1da9-41df-f663-88be730a7c14"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b480eb0e084f45c4b2317c7d77b10b9e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2a01d663dd0e4f0c86c148ca8df78357"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"451005105156444dbc7e115189981c8c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7db4769ba7c14dba8bdc2cdff20680cc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/665 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0db46e32111f4de4be47980740471bc6"}},"metadata":{}}]},{"cell_type":"code","source":["# data/appendix-keywords.txt 파일을 열어서 f라는 파일 객체를 생성합니다.\n","with open(\"appendix-keywords.txt\") as f:\n","    file = f.read()  # 파일의 내용을 읽어서 file 변수에 저장합니다.\n","\n","# 파일으로부터 읽은 내용을 일부 출력합니다.\n","print(file[:350])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Chiu-MqLwWA","executionInfo":{"status":"ok","timestamp":1735522224574,"user_tz":-540,"elapsed":388,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"e46534ea-87cb-47b7-fb62-0a0563554421"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n","연관키워드: 자연어 처\n"]}]},{"cell_type":"code","source":["text_splitter = CharacterTextSplitter.from_huggingface_tokenizer(\n","    # 허깅페이스 토크나이저를 사용하여 CharacterTextSplitter 객체를 생성합니다.\n","    hf_tokenizer,\n","    chunk_size=300,\n","    chunk_overlap=50,\n",")\n","# state_of_the_union 텍스트를 분할하여 texts 변수에 저장합니다.\n","text = text_splitter.split_text(file)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1apkfO5mL5c4","executionInfo":{"status":"ok","timestamp":1735522331345,"user_tz":-540,"elapsed":379,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"caf9f505-c429-4735-fbcc-f3b08cace254"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:langchain_text_splitters.base:Created a chunk of size 358, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 315, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 305, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 366, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 330, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 351, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 378, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 361, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 350, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 362, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 335, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 353, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 358, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 336, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 324, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 337, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 307, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 361, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 354, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 378, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 381, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 365, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 377, which is longer than the specified 300\n","WARNING:langchain_text_splitters.base:Created a chunk of size 329, which is longer than the specified 300\n"]}]},{"cell_type":"code","source":["print(text[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LN7vCv1vMWwY","executionInfo":{"status":"ok","timestamp":1735522774933,"user_tz":-540,"elapsed":362,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"79d24147-b094-44aa-a526-3c956b5395e7"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n"]}]}]}

*****[07_04_SemanticChunk.ipynb]*****

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "executionInfo": {
     "elapsed": 300,
     "status": "ok",
     "timestamp": 1735539165533,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "RwUk-GlJL5iN"
   },
   "outputs": [],
   "source": [
    "OPEN_API_KEY = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "executionInfo": {
     "elapsed": 3655,
     "status": "ok",
     "timestamp": 1735539620264,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "ZVqCSRqxMRdl"
   },
   "outputs": [],
   "source": [
    "! pip install -qU langchain_experimental"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 22788,
     "status": "ok",
     "timestamp": 1735539202268,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "PtP0iU-WMe0H",
    "outputId": "50ca8c33-a5ef-47a2-c015-1dc176e0c2d1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mounted at /content/drive\n"
     ]
    }
   ],
   "source": [
    "from google.colab import drive\n",
    "drive.mount('/content/drive')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "executionInfo": {
     "elapsed": 4243,
     "status": "ok",
     "timestamp": 1735539592465,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "qa6RKYnBNUZq"
   },
   "outputs": [],
   "source": [
    "! pip install -qU langchain_experimental langchain_openai"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "executionInfo": {
     "elapsed": 286,
     "status": "ok",
     "timestamp": 1735539763126,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "3Pnj_hg8M9Q-"
   },
   "outputs": [],
   "source": [
    "from langchain_experimental.text_splitter import SemanticChunker\n",
    "from langchain_openai.embeddings import OpenAIEmbeddings\n",
    "\n",
    "# OpenAI 임베딩을 사용하여 의미론적 청크 분할기를 초기화합니다.\n",
    "text_splitter = SemanticChunker(OpenAIEmbeddings(api_key=OPEN_API_KEY))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "executionInfo": {
     "elapsed": 306,
     "status": "ok",
     "timestamp": 1735540122162,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "BZdvpoC9PhWm"
   },
   "outputs": [],
   "source": [
    "with open(\"/content/drive/MyDrive/appendix-keywords.txt\") as f:\n",
    "  file = f.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "executionInfo": {
     "elapsed": 2758,
     "status": "ok",
     "timestamp": 1735540170528,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "j0Fi47ZrQU1t"
   },
   "outputs": [],
   "source": [
    "chunks = text_splitter.split_text(file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 279,
     "status": "ok",
     "timestamp": 1735540220222,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "5MSdZ-bbQh0T",
    "outputId": "efbef58b-749a-4700-8ff6-25cd5a51ddc8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Semantic Search\n",
      "\n",
      "정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다. 예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다. 연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n",
      "\n",
      "Embedding\n",
      "\n",
      "정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다. 예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다. 연관키워드: 자연어 처리, 벡터화, 딥러닝\n",
      "\n",
      "Token\n",
      "\n",
      "정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다. 예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "Tokenizer\n",
      "\n",
      "정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다. 예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "VectorStore\n",
      "\n",
      "정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다. 예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다. 연관키워드: 임베딩, 데이터베이스, 벡터화\n",
      "\n",
      "SQL\n",
      "\n",
      "정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다. 예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다. 연관키워드: 데이터베이스, 쿼리, 데이터 관리\n",
      "\n",
      "CSV\n",
      "\n",
      "정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다. 예시: 이름, 나이, 직업이라는 헤더를 가진 CSV 파일에는 홍길동, 30, 개발자와 같은 데이터가 포함될 수 있습니다. 연관키워드: 데이터 형식, 파일 처리, 데이터 교환\n",
      "\n",
      "JSON\n",
      "\n",
      "정의: JSON(JavaScript Object Notation)은 경량의 데이터 교환 형식으로, 사람과 기계 모두에게 읽기 쉬운 텍스트를 사용하여 데이터 객체를 표현합니다. 예시: {\"이름\": \"홍길동\", \"나이\": 30, \"직업\": \"개발자\"}는 JSON 형식의 데이터입니다. 연관키워드: 데이터 교환, 웹 개발, API\n",
      "\n",
      "Transformer\n",
      "\n",
      "정의: 트랜스포머는 자연어 처리에서 사용되는 딥러닝 모델의 한 유형으로, 주로 번역, 요약, 텍스트 생성 등에 사용됩니다. 이는 Attention 메커니즘을 기반으로 합니다. 예시: 구글 번역기는 트랜스포머 모델을 사용하여 다양한 언어 간의 번역을 수행합니다. 연관키워드: 딥러닝, 자연어 처리, Attention\n",
      "\n",
      "HuggingFace\n",
      "\n",
      "정의: HuggingFace는 자연어 처리를 위한 다양한 사전 훈련된 모델과 도구를 제공하는 라이브러리입니다. 이는 연구자와 개발자들이 쉽게 NLP 작업을 수행할 수 있도록 돕습니다. 예시: HuggingFace의 Transformers 라이브러리를 사용하여 감정 분석, 텍스트 생성 등의 작업을 수행할 수 있습니다. 연관키워드: 자연어 처리, 딥러닝, 라이브러리\n",
      "\n",
      "Digital Transformation\n",
      "\n",
      "정의: 디지털 변환은 기술을 활용하여 기업의 서비스, 문화, 운영을 혁신하는 과정입니다. 이는 비즈니스 모델을 개선하고 디지털 기술을 통해 경쟁력을 높이는 데 중점을 둡니다. 예시: 기업이 클라우드 컴퓨팅을 도입하여 데이터 저장과 처리를 혁신하는 것은 디지털 변환의 예입니다. 연관키워드: 혁신, 기술, 비즈니스 모델\n",
      "\n",
      "Crawling\n",
      "\n",
      "정의: 크롤링은 자동화된 방식으로 웹 페이지를 방문하여 데이터를 수집하는 과정입니다. 이는 검색 엔진 최적화나 데이터 분석에 자주 사용됩니다. 예시: 구글 검색 엔진이 인터넷 상의 웹사이트를 방문하여 콘텐츠를 수집하고 인덱싱하는 것이 크롤링입니다. 연관키워드: 데이터 수집, 웹 스크래핑, 검색 엔진\n",
      "\n",
      "Word2Vec\n",
      "\n",
      "정의: Word2Vec은 단어를 벡터 공간에 매핑하여 단어 간의 의미적 관계를 나타내는 자연어 처리 기술입니다. 이는 단어의 문맥적 유사성을 기반으로 벡터를 생성합니다.\n"
     ]
    }
   ],
   "source": [
    "# 분할된 청크 중 첫 번째 청크를 출력합니다.\n",
    "print(chunks[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1921,
     "status": "ok",
     "timestamp": 1735540250247,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "o-SdaOA1Qoox",
    "outputId": "3a91dbd4-98de-4c9e-8481-6ce5ddf8b5c2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Semantic Search\n",
      "\n",
      "정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다. 예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다. 연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n",
      "\n",
      "Embedding\n",
      "\n",
      "정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다. 예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다. 연관키워드: 자연어 처리, 벡터화, 딥러닝\n",
      "\n",
      "Token\n",
      "\n",
      "정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다. 예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "Tokenizer\n",
      "\n",
      "정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다. 예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "VectorStore\n",
      "\n",
      "정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다. 예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다. 연관키워드: 임베딩, 데이터베이스, 벡터화\n",
      "\n",
      "SQL\n",
      "\n",
      "정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다. 예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다. 연관키워드: 데이터베이스, 쿼리, 데이터 관리\n",
      "\n",
      "CSV\n",
      "\n",
      "정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다. 예시: 이름, 나이, 직업이라는 헤더를 가진 CSV 파일에는 홍길동, 30, 개발자와 같은 데이터가 포함될 수 있습니다. 연관키워드: 데이터 형식, 파일 처리, 데이터 교환\n",
      "\n",
      "JSON\n",
      "\n",
      "정의: JSON(JavaScript Object Notation)은 경량의 데이터 교환 형식으로, 사람과 기계 모두에게 읽기 쉬운 텍스트를 사용하여 데이터 객체를 표현합니다. 예시: {\"이름\": \"홍길동\", \"나이\": 30, \"직업\": \"개발자\"}는 JSON 형식의 데이터입니다. 연관키워드: 데이터 교환, 웹 개발, API\n",
      "\n",
      "Transformer\n",
      "\n",
      "정의: 트랜스포머는 자연어 처리에서 사용되는 딥러닝 모델의 한 유형으로, 주로 번역, 요약, 텍스트 생성 등에 사용됩니다. 이는 Attention 메커니즘을 기반으로 합니다. 예시: 구글 번역기는 트랜스포머 모델을 사용하여 다양한 언어 간의 번역을 수행합니다. 연관키워드: 딥러닝, 자연어 처리, Attention\n",
      "\n",
      "HuggingFace\n",
      "\n",
      "정의: HuggingFace는 자연어 처리를 위한 다양한 사전 훈련된 모델과 도구를 제공하는 라이브러리입니다. 이는 연구자와 개발자들이 쉽게 NLP 작업을 수행할 수 있도록 돕습니다. 예시: HuggingFace의 Transformers 라이브러리를 사용하여 감정 분석, 텍스트 생성 등의 작업을 수행할 수 있습니다. 연관키워드: 자연어 처리, 딥러닝, 라이브러리\n",
      "\n",
      "Digital Transformation\n",
      "\n",
      "정의: 디지털 변환은 기술을 활용하여 기업의 서비스, 문화, 운영을 혁신하는 과정입니다. 이는 비즈니스 모델을 개선하고 디지털 기술을 통해 경쟁력을 높이는 데 중점을 둡니다. 예시: 기업이 클라우드 컴퓨팅을 도입하여 데이터 저장과 처리를 혁신하는 것은 디지털 변환의 예입니다. 연관키워드: 혁신, 기술, 비즈니스 모델\n",
      "\n",
      "Crawling\n",
      "\n",
      "정의: 크롤링은 자동화된 방식으로 웹 페이지를 방문하여 데이터를 수집하는 과정입니다. 이는 검색 엔진 최적화나 데이터 분석에 자주 사용됩니다. 예시: 구글 검색 엔진이 인터넷 상의 웹사이트를 방문하여 콘텐츠를 수집하고 인덱싱하는 것이 크롤링입니다. 연관키워드: 데이터 수집, 웹 스크래핑, 검색 엔진\n",
      "\n",
      "Word2Vec\n",
      "\n",
      "정의: Word2Vec은 단어를 벡터 공간에 매핑하여 단어 간의 의미적 관계를 나타내는 자연어 처리 기술입니다. 이는 단어의 문맥적 유사성을 기반으로 벡터를 생성합니다.\n"
     ]
    }
   ],
   "source": [
    "# text_splitter를 사용하여 분할합니다.\n",
    "docs = text_splitter.create_documents([file])\n",
    "print(docs[0].page_content)  # 분할된 문서 중 첫 번째 문서의 내용을 출력합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "executionInfo": {
     "elapsed": 280,
     "status": "ok",
     "timestamp": 1735540585731,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "GgB71dmtR27m"
   },
   "outputs": [],
   "source": [
    "text_splitter = SemanticChunker(\n",
    "    # OpenAI의 임베딩 모델을 사용하여 시맨틱 청커를 초기화합니다.\n",
    "    OpenAIEmbeddings(api_key=OPEN_API_KEY),\n",
    "    # 분할 기준점 유형을 백분위수로 설정합니다.\n",
    "    breakpoint_threshold_type=\"percentile\",\n",
    "    breakpoint_threshold_amount=70,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1782,
     "status": "ok",
     "timestamp": 1735540596378,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "YImUcAkiR9Rd",
    "outputId": "e0862b8a-1e43-4473-c1c7-05ca8a5abbb1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[Chunk 0]\n",
      "\n",
      "Semantic Search\n",
      "\n",
      "정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다. 예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다. 연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n",
      "\n",
      "Embedding\n",
      "\n",
      "정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n",
      "============================================================\n",
      "[Chunk 1]\n",
      "\n",
      "예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다. 연관키워드: 자연어 처리, 벡터화, 딥러닝\n",
      "\n",
      "Token\n",
      "\n",
      "정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다.\n",
      "============================================================\n",
      "[Chunk 2]\n",
      "\n",
      "예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "Tokenizer\n",
      "\n",
      "정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다.\n",
      "============================================================\n",
      "[Chunk 3]\n",
      "\n",
      "예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "VectorStore\n",
      "\n",
      "정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다.\n",
      "============================================================\n",
      "[Chunk 4]\n",
      "\n",
      "예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다. 연관키워드: 임베딩, 데이터베이스, 벡터화\n",
      "\n",
      "SQL\n",
      "\n",
      "정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다.\n",
      "============================================================\n"
     ]
    }
   ],
   "source": [
    "docs = text_splitter.create_documents([file])\n",
    "for i, doc in enumerate(docs[:5]):\n",
    "    print(f\"[Chunk {i}]\", end=\"\\n\\n\")\n",
    "    print(doc.page_content)  # 분할된 문서 중 첫 번째 문서의 내용을 출력합니다.\n",
    "    print(\"===\" * 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "executionInfo": {
     "elapsed": 252,
     "status": "ok",
     "timestamp": 1735540822167,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "IgUsH-DSStRv"
   },
   "outputs": [],
   "source": [
    "text_splitter = SemanticChunker(\n",
    "    # OpenAI의 임베딩 모델을 사용하여 시맨틱 청커를 초기화합니다.\n",
    "    OpenAIEmbeddings(api_key=OPEN_API_KEY),\n",
    "    # 분할 기준점 유형을 백분위수로 설정합니다.\n",
    "    breakpoint_threshold_type=\"standard_deviation\",\n",
    "    breakpoint_threshold_amount=1.25,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1326,
     "status": "ok",
     "timestamp": 1735540827419,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "agK2tmkBSmtN",
    "outputId": "5060619a-f796-4437-aaff-c10ac0eb2b8a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[Chunk 0]\n",
      "\n",
      "Semantic Search\n",
      "\n",
      "정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다. 예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다. 연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n",
      "\n",
      "Embedding\n",
      "\n",
      "정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다. 예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다. 연관키워드: 자연어 처리, 벡터화, 딥러닝\n",
      "\n",
      "Token\n",
      "\n",
      "정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다. 예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "Tokenizer\n",
      "\n",
      "정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다. 예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "VectorStore\n",
      "\n",
      "정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다.\n",
      "============================================================\n",
      "[Chunk 1]\n",
      "\n",
      "예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다. 연관키워드: 임베딩, 데이터베이스, 벡터화\n",
      "\n",
      "SQL\n",
      "\n",
      "정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다.\n",
      "============================================================\n",
      "[Chunk 2]\n",
      "\n",
      "예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다. 연관키워드: 데이터베이스, 쿼리, 데이터 관리\n",
      "\n",
      "CSV\n",
      "\n",
      "정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다. 예시: 이름, 나이, 직업이라는 헤더를 가진 CSV 파일에는 홍길동, 30, 개발자와 같은 데이터가 포함될 수 있습니다. 연관키워드: 데이터 형식, 파일 처리, 데이터 교환\n",
      "\n",
      "JSON\n",
      "\n",
      "정의: JSON(JavaScript Object Notation)은 경량의 데이터 교환 형식으로, 사람과 기계 모두에게 읽기 쉬운 텍스트를 사용하여 데이터 객체를 표현합니다. 예시: {\"이름\": \"홍길동\", \"나이\": 30, \"직업\": \"개발자\"}는 JSON 형식의 데이터입니다. 연관키워드: 데이터 교환, 웹 개발, API\n",
      "\n",
      "Transformer\n",
      "\n",
      "정의: 트랜스포머는 자연어 처리에서 사용되는 딥러닝 모델의 한 유형으로, 주로 번역, 요약, 텍스트 생성 등에 사용됩니다. 이는 Attention 메커니즘을 기반으로 합니다.\n",
      "============================================================\n",
      "[Chunk 3]\n",
      "\n",
      "예시: 구글 번역기는 트랜스포머 모델을 사용하여 다양한 언어 간의 번역을 수행합니다. 연관키워드: 딥러닝, 자연어 처리, Attention\n",
      "\n",
      "HuggingFace\n",
      "\n",
      "정의: HuggingFace는 자연어 처리를 위한 다양한 사전 훈련된 모델과 도구를 제공하는 라이브러리입니다. 이는 연구자와 개발자들이 쉽게 NLP 작업을 수행할 수 있도록 돕습니다.\n",
      "============================================================\n",
      "[Chunk 4]\n",
      "\n",
      "예시: HuggingFace의 Transformers 라이브러리를 사용하여 감정 분석, 텍스트 생성 등의 작업을 수행할 수 있습니다. 연관키워드: 자연어 처리, 딥러닝, 라이브러리\n",
      "\n",
      "Digital Transformation\n",
      "\n",
      "정의: 디지털 변환은 기술을 활용하여 기업의 서비스, 문화, 운영을 혁신하는 과정입니다. 이는 비즈니스 모델을 개선하고 디지털 기술을 통해 경쟁력을 높이는 데 중점을 둡니다.\n",
      "============================================================\n"
     ]
    }
   ],
   "source": [
    "docs = text_splitter.create_documents([file])\n",
    "for i, doc in enumerate(docs[:5]):\n",
    "    print(f\"[Chunk {i}]\", end=\"\\n\\n\")\n",
    "    print(doc.page_content)  # 분할된 문서 중 첫 번째 문서의 내용을 출력합니다.\n",
    "    print(\"===\" * 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "executionInfo": {
     "elapsed": 560,
     "status": "ok",
     "timestamp": 1735541107078,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "_T-Qnzr0Tum3"
   },
   "outputs": [],
   "source": [
    "text_splitter = SemanticChunker(\n",
    "    # OpenAI의 임베딩 모델을 사용하여 시맨틱 청커를 초기화합니다.\n",
    "    OpenAIEmbeddings(api_key=OPEN_API_KEY),\n",
    "    # 분할 기준점 유형을 백분위수로 설정합니다.\n",
    "    breakpoint_threshold_type=\"standard_deviation\",\n",
    "    breakpoint_threshold_amount=0.5,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1675,
     "status": "ok",
     "timestamp": 1735541109897,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "7DF7mnLpTv_6",
    "outputId": "c8a67d95-0a26-4648-ffb2-d2d51325b9ba"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[Chunk 0]\n",
      "\n",
      "Semantic Search\n",
      "\n",
      "정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다. 예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다. 연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n",
      "\n",
      "Embedding\n",
      "\n",
      "정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n",
      "============================================================\n",
      "[Chunk 1]\n",
      "\n",
      "예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다. 연관키워드: 자연어 처리, 벡터화, 딥러닝\n",
      "\n",
      "Token\n",
      "\n",
      "정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다. 예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "Tokenizer\n",
      "\n",
      "정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다.\n",
      "============================================================\n",
      "[Chunk 2]\n",
      "\n",
      "예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다. 연관키워드: 토큰화, 자연어 처리, 구문 분석\n",
      "\n",
      "VectorStore\n",
      "\n",
      "정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다.\n",
      "============================================================\n",
      "[Chunk 3]\n",
      "\n",
      "예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다. 연관키워드: 임베딩, 데이터베이스, 벡터화\n",
      "\n",
      "SQL\n",
      "\n",
      "정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다.\n",
      "============================================================\n",
      "[Chunk 4]\n",
      "\n",
      "예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다. 연관키워드: 데이터베이스, 쿼리, 데이터 관리\n",
      "\n",
      "CSV\n",
      "\n",
      "정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다.\n",
      "============================================================\n"
     ]
    }
   ],
   "source": [
    "docs = text_splitter.create_documents([file])\n",
    "for i, doc in enumerate(docs[:5]):\n",
    "    print(f\"[Chunk {i}]\", end=\"\\n\\n\")\n",
    "    print(doc.page_content)  # 분할된 문서 중 첫 번째 문서의 내용을 출력합니다.\n",
    "    print(\"===\" * 20)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyM22wHc+HE8nIgeiK5Hlqmx",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[07_07_HtmlHeaderParser.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOQiH4KeNkqu7zNZ9ecsGh7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 1. String 연결"],"metadata":{"id":"chhsfSTP_SxJ"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gj6hRxUr6ndD","executionInfo":{"status":"ok","timestamp":1735619482152,"user_tz":-540,"elapsed":11407,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"b8a6ab05-bc8c-4f01-cafd-c85a23353143"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/411.6 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m409.6/411.6 kB\u001b[0m \u001b[31m15.9 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m9.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["%pip install -qU langchain-text-splitters"]},{"cell_type":"code","source":["from langchain_text_splitters import HTMLHeaderTextSplitter\n","\n","html_string = \"\"\"\n","<!DOCTYPE html>\n","  <html lang='en'>\n","  <head>\n","    <meta charset='UTF-8'>\n","    <meta name='viewport' content='width=device-width, initial-scale=1.0'>\n","    <title>Fancy Example HTML Page</title>\n","  </head>\n","  <body>\n","    <h1>Main Title</h1>\n","    <p>This is an introductory paragraph with some basic content.</p>\n","\n","    <h2>Section 1: Introduction</h2>\n","    <p>This section introduces the topic. Below is a list:</p>\n","    <ul>\n","      <li>First item</li>\n","      <li>Second item</li>\n","      <li>Third item with <strong>bold text</strong> and <a href='#'>a link</a></li>\n","    </ul>\n","\n","    <h3>Subsection 1.1: Details</h3>\n","    <p>This subsection provides additional details. Here's a table:</p>\n","    <table border='1'>\n","      <thead>\n","        <tr>\n","          <th>Header 1</th>\n","          <th>Header 2</th>\n","          <th>Header 3</th>\n","        </tr>\n","      </thead>\n","      <tbody>\n","        <tr>\n","          <td>Row 1, Cell 1</td>\n","          <td>Row 1, Cell 2</td>\n","          <td>Row 1, Cell 3</td>\n","        </tr>\n","        <tr>\n","          <td>Row 2, Cell 1</td>\n","          <td>Row 2, Cell 2</td>\n","          <td>Row 2, Cell 3</td>\n","        </tr>\n","      </tbody>\n","    </table>\n","\n","    <h2>Section 2: Media Content</h2>\n","    <p>This section contains an image and a video:</p>\n","      <img src='example_image_link.mp4' alt='Example Image'>\n","      <video controls width='250' src='example_video_link.mp4' type='video/mp4'>\n","      Your browser does not support the video tag.\n","    </video>\n","\n","    <h2>Section 3: Code Example</h2>\n","    <p>This section contains a code block:</p>\n","    <pre><code data-lang=\"html\">\n","    &lt;div&gt;\n","      &lt;p&gt;This is a paragraph inside a div.&lt;/p&gt;\n","    &lt;/div&gt;\n","    </code></pre>\n","\n","    <h2>Conclusion</h2>\n","    <p>This is the conclusion of the document.</p>\n","  </body>\n","  </html>\n","\"\"\""],"metadata":{"id":"_qp4kjIQ-_rV","executionInfo":{"status":"ok","timestamp":1735619547440,"user_tz":-540,"elapsed":1750,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["headers_to_split_on = [\n","    (\"h1\", \"Header 1\"),  # 분할할 헤더 태그와 해당 헤더의 이름을 지정합니다.\n","    (\"h2\", \"Header 2\"),\n","    (\"h3\", \"Header 3\"),\n","]\n","\n","# 지정된 헤더를 기준으로 HTML 텍스트를 분할하는 HTMLHeaderTextSplitter 객체를 생성합니다.\n","html_splitter = HTMLHeaderTextSplitter(headers_to_split_on=headers_to_split_on)\n","# HTML 문자열을 분할하여 결과를 html_header_splits 변수에 저장합니다.\n","html_header_splits = html_splitter.split_text(html_string)\n","# 분할된 결과를 출력합니다.\n","for header in html_header_splits:\n","    print(f\"{header.page_content}\")\n","    print(f\"{header.metadata}\", end=\"\\n=====================\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cc16K4oU_Jir","executionInfo":{"status":"ok","timestamp":1735619554038,"user_tz":-540,"elapsed":261,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"ff3881f5-e0f1-4b99-e4c4-649fe0b2bb26"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["This is an introductory paragraph with some basic content.\n","{'Header 1': 'Main Title'}\n","=====================\n","This section introduces the topic. Below is a list:  \n","First item Second item Third item with bold text and a link\n","{'Header 1': 'Main Title', 'Header 2': 'Section 1: Introduction'}\n","=====================\n","This subsection provides additional details. Here's a table:\n","{'Header 1': 'Main Title', 'Header 2': 'Section 1: Introduction', 'Header 3': 'Subsection 1.1: Details'}\n","=====================\n","This section contains an image and a video:\n","{'Header 1': 'Main Title', 'Header 2': 'Section 2: Media Content'}\n","=====================\n","This section contains a code block:\n","{'Header 1': 'Main Title', 'Header 2': 'Section 3: Code Example'}\n","=====================\n","This is the conclusion of the document.\n","{'Header 1': 'Main Title', 'Header 2': 'Conclusion'}\n","=====================\n"]}]},{"cell_type":"markdown","source":["## 2. WebURL 연결"],"metadata":{"id":"n7tnEzj2_OnD"}},{"cell_type":"code","source":["from langchain_text_splitters import RecursiveCharacterTextSplitter\n","\n","url = \"https://plato.stanford.edu/entries/goedel/\"  # 분할할 텍스트의 URL을 지정합니다.\n","\n","headers_to_split_on = [  # 분할할 HTML 헤더 태그와 해당 헤더의 이름을 지정합니다.\n","    (\"h1\", \"Header 1\"),\n","    (\"h2\", \"Header 2\"),\n","    (\"h3\", \"Header 3\"),\n","    (\"h4\", \"Header 4\"),\n","]"],"metadata":{"id":"5ejTrL80_grk","executionInfo":{"status":"ok","timestamp":1735619813484,"user_tz":-540,"elapsed":282,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# HTML 헤더를 기준으로 텍스트를 분할하는 HTMLHeaderTextSplitter 객체를 생성합니다.\n","html_splitter = HTMLHeaderTextSplitter(headers_to_split_on=headers_to_split_on)\n","\n","# URL에서 텍스트를 가져와 HTML 헤더를 기준으로 분할합니다.\n","html_header_splits = html_splitter.split_text_from_url(url)"],"metadata":{"id":"o5YZs1HPAL2q","executionInfo":{"status":"ok","timestamp":1735619823134,"user_tz":-540,"elapsed":1027,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["chunk_size = 500  # 텍스트를 분할할 청크의 크기를 지정합니다.\n","chunk_overlap = 30  # 분할된 청크 간의 중복되는 문자 수를 지정합니다.\n","text_splitter = RecursiveCharacterTextSplitter(  # 텍스트를 재귀적으로 분할하는 RecursiveCharacterTextSplitter 객체를 생성합니다.\n","    chunk_size=chunk_size, chunk_overlap=chunk_overlap\n",")"],"metadata":{"id":"wiifXvd8ANYa","executionInfo":{"status":"ok","timestamp":1735619828624,"user_tz":-540,"elapsed":305,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# HTML 헤더로 분할된 텍스트를 다시 청크 크기에 맞게 분할합니다.\n","splits = text_splitter.split_documents(html_header_splits)\n","\n","# 분할된 텍스트 중 80번째부터 85번째까지의 청크를 출력합니다.\n","for header in splits[80:85]:\n","    print(f\"{header.page_content}\")\n","    print(f\"{header.metadata}\", end=\"\\n=====================\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"waOhJnE0AOpS","executionInfo":{"status":"ok","timestamp":1735619835701,"user_tz":-540,"elapsed":292,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a6e384a5-ffbe-4cc2-9e72-ac28bb047d22"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["We see that Gödel first tried to reduce the consistency problem for analysis to that of arithmetic. This seemed to require a truth definition for arithmetic, which in turn led to paradoxes, such as the Liar paradox (“This sentence is false”) and Berry’s paradox (“The least number not defined by an expression consisting of just fourteen English words”). Gödel then noticed that such paradoxes would not necessarily arise if truth were replaced by provability. But this means that arithmetic truth\n","{'Header 1': 'Kurt Gödel', 'Header 2': '2. Gödel’s Mathematical Work', 'Header 3': '2.2 The Incompleteness Theorems', 'Header 4': '2.2.1 The First Incompleteness Theorem'}\n","=====================\n","means that arithmetic truth and arithmetic provability are not co-extensive — whence the First Incompleteness Theorem.\n","{'Header 1': 'Kurt Gödel', 'Header 2': '2. Gödel’s Mathematical Work', 'Header 3': '2.2 The Incompleteness Theorems', 'Header 4': '2.2.1 The First Incompleteness Theorem'}\n","=====================\n","This account of Gödel’s discovery was told to Hao Wang very much after the fact; but in Gödel’s contemporary correspondence with Bernays and Zermelo, essentially the same description of his path to the theorems is given. (See Gödel 2003a and Gödel 2003b respectively.) From those accounts we see that the undefinability of truth in arithmetic, a result credited to Tarski, was likely obtained in some form by Gödel by 1931. But he neither publicized nor published the result; the biases logicians\n","{'Header 1': 'Kurt Gödel', 'Header 2': '2. Gödel’s Mathematical Work', 'Header 3': '2.2 The Incompleteness Theorems', 'Header 4': '2.2.1 The First Incompleteness Theorem'}\n","=====================\n","result; the biases logicians had expressed at the time concerning the notion of truth, biases which came vehemently to the fore when Tarski announced his results on the undefinability of truth in formal systems 1935, may have served as a deterrent to Gödel’s publication of that theorem.\n","{'Header 1': 'Kurt Gödel', 'Header 2': '2. Gödel’s Mathematical Work', 'Header 3': '2.2 The Incompleteness Theorems', 'Header 4': '2.2.1 The First Incompleteness Theorem'}\n","=====================\n","We now describe the proof of the two theorems, formulating Gödel’s results in Peano arithmetic. Gödel himself used a system related to that defined in Principia Mathematica, but containing Peano arithmetic. In our presentation of the First and Second Incompleteness Theorems we refer to Peano arithmetic as P, following Gödel’s notation.\n","{'Header 1': 'Kurt Gödel', 'Header 2': '2. Gödel’s Mathematical Work', 'Header 3': '2.2 The Incompleteness Theorems', 'Header 4': '2.2.2 The proof of the First Incompleteness Theorem'}\n","=====================\n"]}]}]}

*****[11_DirectiryLoader.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO8C5qwXpEsKdb/rC9PVKeq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["! pip install -qU unstructured langchain_community"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Q4Ze1ZcTrXM","executionInfo":{"status":"ok","timestamp":1736212210786,"user_tz":-540,"elapsed":28378,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"95db73c6-1a10-461f-eb97-f15eab644e20"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.4/149.4 kB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m30.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m586.9/586.9 kB\u001b[0m \u001b[31m36.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m274.9/274.9 kB\u001b[0m \u001b[31m17.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m72.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.9/62.9 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m434.9/434.9 kB\u001b[0m \u001b[31m29.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m64.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.0/298.0 kB\u001b[0m \u001b[31m20.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.6/114.6 kB\u001b[0m \u001b[31m6.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for langdetect (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m29.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m41.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m25.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tHwp8QBiSBuJ","executionInfo":{"status":"ok","timestamp":1736212249022,"user_tz":-540,"elapsed":8608,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"4ffe24a1-61df-4cfb-e2e6-72bd5328c77b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":4}],"source":["from langchain_community.document_loaders import DirectoryLoader\n","\n","loader = DirectoryLoader(path='./', glob='**/*.md')\n","\n","data = loader.load()\n","\n","len(data)"]},{"cell_type":"code","source":["print(data[0].page_content[:100])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k35CZYjYXMKQ","executionInfo":{"status":"ok","timestamp":1736213079391,"user_tz":-540,"elapsed":237,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"6e252852-4e31-4c50-8219-3dd68c4b5960"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["This directory includes a few sample datasets to get you started.\n","\n","california_housing_data*.csv is C\n"]}]},{"cell_type":"markdown","source":["# MultiThread 사용법"],"metadata":{"id":"YZQQEnQ1YsRO"}},{"cell_type":"code","source":["loader = DirectoryLoader(\n","    \"./\", glob=\"**/*.md\", show_progress=True\n",") # 디렉토리 로더 설정\n","docs = loader.load() # 문서 로드"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"02s1P6I7X1_O","executionInfo":{"status":"ok","timestamp":1736213335825,"user_tz":-540,"elapsed":285,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"f5e27b7b-7268-4498-96ca-6a8b8c0cc861"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 1/1 [00:00<00:00, 63.95it/s]\n"]}]},{"cell_type":"markdown","source":["# Loader Class"],"metadata":{"id":"sNhUgKX9ZVzr"}},{"cell_type":"code","source":["from langchain_community.document_loaders import TextLoader\n","\n","loader = DirectoryLoader(path='./', glob='**/*.md', loader_cls=TextLoader)\n","\n","data = loader.load()"],"metadata":{"id":"P5tzTMwfYxfd","executionInfo":{"status":"ok","timestamp":1736213745338,"user_tz":-540,"elapsed":357,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["print(data[0].page_content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2qSfsyCpZ1pk","executionInfo":{"status":"ok","timestamp":1736213772176,"user_tz":-540,"elapsed":233,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"04c00150-2ff3-4d6a-9faf-5b08f340e21a"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["This directory includes a few sample datasets to get you started.\n","\n","*   `california_housing_data*.csv` is California housing data from the 1990 US\n","    Census; more information is available at:\n","    https://docs.google.com/document/d/e/2PACX-1vRhYtsvc5eOR2FWNCwaBiKL6suIOrxJig8LcSBbmCbyYsayia_DvPOOBlXZ4CAlQ5nlDD8kTaIDRwrN/pub\n","\n","*   `mnist_*.csv` is a small sample of the\n","    [MNIST database](https://en.wikipedia.org/wiki/MNIST_database), which is\n","    described at: http://yann.lecun.com/exdb/mnist/\n","\n","*   `anscombe.json` contains a copy of\n","    [Anscombe's quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet); it\n","    was originally described in\n","\n","    Anscombe, F. J. (1973). 'Graphs in Statistical Analysis'. American\n","    Statistician. 27 (1): 17-21. JSTOR 2682899.\n","\n","    and our copy was prepared by the\n","    [vega_datasets library](https://github.com/altair-viz/vega_datasets/blob/4f67bdaad10f45e3549984e17e1b3088c731503d/vega_datasets/_data/anscombe.json).\n","\n"]}]},{"cell_type":"code","source":["from langchain_community.document_loaders import TextLoader\n","\n","loader = DirectoryLoader(path='./', glob='**/*.py', loader_cls=TextLoader)\n","\n","data = loader.load()\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MQPeI4X2bDcD","executionInfo":{"status":"ok","timestamp":1736214080042,"user_tz":-540,"elapsed":282,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"3f19cb70-6031-40e7-9c35-d29d4cca7964"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":14}]}]}

*****[20241227.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "N2BA-XrL7d3m"
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Fb4DTOUM4T7O"
   },
   "source": [
    "# 1. partial variable이 2개 이상일때 관찰."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "hBmeacy36my7"
   },
   "outputs": [],
   "source": [
    "from langchain_openai import ChatOpenAI\n",
    "from langchain_core.prompts import PromptTemplate\n",
    "import os\n",
    "\n",
    "os.environ['OPENAI_API_KEY'] = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "wtUaI3Gm-PBy"
   },
   "outputs": [],
   "source": [
    "template = \"{country1}과 {country2}의 수도는 각각 어디인가요? {country3}의 수도는 어디인가요?\"\n",
    "\n",
    "prompt = PromptTemplate(\n",
    "    template=template,\n",
    "    input_variables=[\"country1\"],\n",
    "    partial_variables={\n",
    "        \"country2\": \"미국\",\n",
    "        \"country3\": \"일본\"\n",
    "    },\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "dxIoYvHB-Qk5"
   },
   "outputs": [],
   "source": [
    "model = ChatOpenAI(\n",
    "    model=\"gpt-3.5-turbo\",\n",
    "    max_tokens=2048,\n",
    "    temperature=0.1\n",
    ")\n",
    "\n",
    "chain = prompt | model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 858,
     "status": "ok",
     "timestamp": 1735199990030,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "Lx7eHL7i-SyG",
    "outputId": "299f4c44-8a68-48fb-9bb5-e5bd4d99b69c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "대한민국의 수도는 서울이고, 호주의 수도는 캔버라입니다. 독일의 수도는 베를린입니다.\n"
     ]
    }
   ],
   "source": [
    "result = chain.invoke({\n",
    "    \"country1\": \"대한민국\",\n",
    "    \"country2\": \"호주\",\n",
    "    \"country3\": \"독일\"\n",
    "}).content\n",
    "\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "axb21Som3vMO"
   },
   "source": [
    "# 2. 헷갈리지 않도록-날짜 처리\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 36
    },
    "executionInfo": {
     "elapsed": 418,
     "status": "ok",
     "timestamp": 1735199147993,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "soymNZcP2BkC",
    "outputId": "c27f989d-aca0-4e99-ecf3-6dafbfb197d0"
   },
   "outputs": [
    {
     "data": {
      "application/vnd.google.colaboratory.intrinsic+json": {
       "type": "string"
      },
      "text/plain": [
       "'December 26'"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "\n",
    "datetime.now().strftime(\"%B %d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "QY-MUobR2aK-"
   },
   "outputs": [],
   "source": [
    "def get_today():\n",
    "  return datetime.now().strftime(\"%B %d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "6ED2DxCz2rK1"
   },
   "outputs": [],
   "source": [
    "prompt = PromptTemplate(\n",
    "    template=\"오늘 날짜는 {today}입니다. 오늘이 생일인 유명인 {n}명을 나열해 주세요. 생년월일을 표기해주세요.\",\n",
    "    input_variables = [\"n\"],\n",
    "    partial_variables = {\n",
    "        \"today\": get_today()\n",
    "        }\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 1511,
     "status": "ok",
     "timestamp": 1735199380670,
     "user": {
      "displayName": "배진우",
      "userId": "16041142222927328568"
     },
     "user_tz": -540
    },
    "id": "Y1Q9xvkW37yQ",
    "outputId": "6517b13c-ba47-4a8b-dcb6-3870061104a1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. Jared Leto - 1971년 12월 26일\n",
      "2. Kit Harington - 1986년 12월 26일\n",
      "3. Eden Hazard - 1991년 12월 26일\n",
      "4. Lars Ulrich - 1963년 12월 26일\n",
      "5. Chris Daughtry - 1979년 12월 26일\n"
     ]
    }
   ],
   "source": [
    "model = ChatOpenAI(\n",
    "    model = \"gpt-3.5-turbo\",\n",
    "    max_tokens = 2048,\n",
    "    temperature = 0.1\n",
    ")\n",
    "\n",
    "chain = prompt | model\n",
    "print(chain.invoke({\"n\":\"5\"}).content)\n"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyPL4GchU/jNguGoGLtP1MzL",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[2024_12_26_bit.ipynb]*****

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "tXwbVEZFL2P1"
   },
   "source": [
    "# 1. 키 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.environ['OPENAI_API_KEY'] = \"\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Az0Dbjm2N-iA"
   },
   "source": [
    "# 2. 키 유효성 확인"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Yz_Jez3fOBXc"
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "5FVadtrORrZn"
   },
   "outputs": [],
   "source": [
    "print(f\"[API KEY]\\n{os.environ['OPENAI_API_KEY'][:-15]}\"+\"*\" * 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "4u4ypSw3RkTt"
   },
   "outputs": [],
   "source": [
    "template = \"{}\""
   ]
  }
 ],
 "metadata": {
  "colab": {
   "authorship_tag": "ABX9TyM/S4VSNzxgofAsWTf/bC0G",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}


*****[241227_1_CharacterTextSpilitter_배진우.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM7CX52PkpX8h+a7WAZAgGU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":30,"metadata":{"id":"rPO0kDCwoVuI","executionInfo":{"status":"ok","timestamp":1735265450771,"user_tz":-540,"elapsed":275,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"outputs":[],"source":["with open(\"data/appendix-keywords.txt\") as f:\n","  file = f.read()"]},{"cell_type":"code","source":["file"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":185},"id":"0efyF2y2qzOT","executionInfo":{"status":"ok","timestamp":1735265452221,"user_tz":-540,"elapsed":283,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"20a12784-75a1-4747-ebfa-a18fc0a83c8b"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Semantic Search\\n\\n정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\\n예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\\n연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\\n\\nEmbedding\\n\\n정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\\n예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\\n연관키워드: 자연어 처리, 벡터화, 딥러닝\\n\\nToken\\n\\n정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다.\\n예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다.\\n연관키워드: 토큰화, 자연어 처리, 구문 분석\\n\\nTokenizer\\n\\n정의: 토크나이저는 텍스트 데이터를 토큰으로 분할하는 도구입니다. 이는 자연어 처리에서 데이터를 전처리하는 데 사용됩니다.\\n예시: \"I love programming.\"이라는 문장을 [\"I\", \"love\", \"programming\", \".\"]으로 분할합니다.\\n연관키워드: 토큰화, 자연어 처리, 구문 분석\\n\\nVectorStore\\n\\n정의: 벡터스토어는 벡터 형식으로 변환된 데이터를 저장하는 시스템입니다. 이는 검색, 분류 및 기타 데이터 분석 작업에 사용됩니다.\\n예시: 단어 임베딩 벡터들을 데이터베이스에 저장하여 빠르게 접근할 수 있습니다.\\n연관키워드: 임베딩, 데이터베이스, 벡터화\\n\\nSQL\\n\\n정의: SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하기 위한 프로그래밍 언어입니다. 데이터 조회, 수정, 삽입, 삭제 등 다양한 작업을 수행할 수 있습니다.\\n예시: SELECT * FROM users WHERE age > 18;은 18세 이상의 사용자 정보를 조회합니다.\\n연관키워드: 데이터베이스, 쿼리, 데이터 관리\\n\\nCSV\\n\\n정의: CSV(Comma-Separated Values)는 데이터를 저장하는 파일 형식으로, 각 데이터 값은 쉼표로 구분됩니다. 표 형태의 데이터를 간단하게 저장하고 교환할 때 사용됩니다.\\n예시: 이름, 나이, 직업이라는 헤더를 가진 CSV 파일에는 홍길동, 30, 개발자와 같은 데이터가 포함될 수 있습니다.\\n연관키워드: 데이터 형식, 파일 처리, 데이터 교환\\n\\nJSON\\n\\n정의: JSON(JavaScript Object Notation)은 경량의 데이터 교환 형식으로, 사람과 기계 모두에게 읽기 쉬운 텍스트를 사용하여 데이터 객체를 표현합니다.\\n예시: {\"이름\": \"홍길동\", \"나이\": 30, \"직업\": \"개발자\"}는 JSON 형식의 데이터입니다.\\n연관키워드: 데이터 교환, 웹 개발, API\\n\\nTransformer\\n\\n정의: 트랜스포머는 자연어 처리에서 사용되는 딥러닝 모델의 한 유형으로, 주로 번역, 요약, 텍스트 생성 등에 사용됩니다. 이는 Attention 메커니즘을 기반으로 합니다.\\n예시: 구글 번역기는 트랜스포머 모델을 사용하여 다양한 언어 간의 번역을 수행합니다.\\n연관키워드: 딥러닝, 자연어 처리, Attention\\n\\nHuggingFace\\n\\n정의: HuggingFace는 자연어 처리를 위한 다양한 사전 훈련된 모델과 도구를 제공하는 라이브러리입니다. 이는 연구자와 개발자들이 쉽게 NLP 작업을 수행할 수 있도록 돕습니다.\\n예시: HuggingFace의 Transformers 라이브러리를 사용하여 감정 분석, 텍스트 생성 등의 작업을 수행할 수 있습니다.\\n연관키워드: 자연어 처리, 딥러닝, 라이브러리\\n\\nDigital Transformation\\n\\n정의: 디지털 변환은 기술을 활용하여 기업의 서비스, 문화, 운영을 혁신하는 과정입니다. 이는 비즈니스 모델을 개선하고 디지털 기술을 통해 경쟁력을 높이는 데 중점을 둡니다.\\n예시: 기업이 클라우드 컴퓨팅을 도입하여 데이터 저장과 처리를 혁신하는 것은 디지털 변환의 예입니다.\\n연관키워드: 혁신, 기술, 비즈니스 모델\\n\\nCrawling\\n\\n정의: 크롤링은 자동화된 방식으로 웹 페이지를 방문하여 데이터를 수집하는 과정입니다. 이는 검색 엔진 최적화나 데이터 분석에 자주 사용됩니다.\\n예시: 구글 검색 엔진이 인터넷 상의 웹사이트를 방문하여 콘텐츠를 수집하고 인덱싱하는 것이 크롤링입니다.\\n연관키워드: 데이터 수집, 웹 스크래핑, 검색 엔진\\n\\nWord2Vec\\n\\n정의: Word2Vec은 단어를 벡터 공간에 매핑하여 단어 간의 의미적 관계를 나타내는 자연어 처리 기술입니다. 이는 단어의 문맥적 유사성을 기반으로 벡터를 생성합니다.\\n예시: Word2Vec 모델에서 \"왕\"과 \"여왕\"은 서로 가까운 위치에 벡터로 표현됩니다.\\n연관키워드: 자연어 처리, 임베딩, 의미론적 유사성\\nLLM (Large Language Model)\\n\\n정의: LLM은 대규모의 텍스트 데이터로 훈련된 큰 규모의 언어 모델을 의미합니다. 이러한 모델은 다양한 자연어 이해 및 생성 작업에 사용됩니다.\\n예시: OpenAI의 GPT 시리즈는 대표적인 대규모 언어 모델입니다.\\n연관키워드: 자연어 처리, 딥러닝, 텍스트 생성\\n\\nFAISS (Facebook AI Similarity Search)\\n\\n정의: FAISS는 페이스북에서 개발한 고속 유사성 검색 라이브러리로, 특히 대규모 벡터 집합에서 유사 벡터를 효과적으로 검색할 수 있도록 설계되었습니다.\\n예시: 수백만 개의 이미지 벡터 중에서 비슷한 이미지를 빠르게 찾는 데 FAISS가 사용될 수 있습니다.\\n연관키워드: 벡터 검색, 머신러닝, 데이터베이스 최적화\\n\\nOpen Source\\n\\n정의: 오픈 소스는 소스 코드가 공개되어 누구나 자유롭게 사용, 수정, 배포할 수 있는 소프트웨어를 의미합니다. 이는 협업과 혁신을 촉진하는 데 중요한 역할을 합니다.\\n예시: 리눅스 운영 체제는 대표적인 오픈 소스 프로젝트입니다.\\n연관키워드: 소프트웨어 개발, 커뮤니티, 기술 협업\\n\\nStructured Data\\n\\n정의: 구조화된 데이터는 정해진 형식이나 스키마에 따라 조직된 데이터입니다. 이는 데이터베이스, 스프레드시트 등에서 쉽게 검색하고 분석할 수 있습니다.\\n예시: 관계형 데이터베이스에 저장된 고객 정보 테이블은 구조화된 데이터의 예입니다.\\n연관키워드: 데이터베이스, 데이터 분석, 데이터 모델링\\n\\nParser\\n\\n정의: 파서는 주어진 데이터(문자열, 파일 등)를 분석하여 구조화된 형태로 변환하는 도구입니다. 이는 프로그래밍 언어의 구문 분석이나 파일 데이터 처리에 사용됩니다.\\n예시: HTML 문서를 구문 분석하여 웹 페이지의 DOM 구조를 생성하는 것은 파싱의 한 예입니다.\\n연관키워드: 구문 분석, 컴파일러, 데이터 처리\\n\\nTF-IDF (Term Frequency-Inverse Document Frequency)\\n\\n정의: TF-IDF는 문서 내에서 단어의 중요도를 평가하는 데 사용되는 통계적 척도입니다. 이는 문서 내 단어의 빈도와 전체 문서 집합에서 그 단어의 희소성을 고려합니다.\\n예시: 많은 문서에서 자주 등장하지 않는 단어는 높은 TF-IDF 값을 가집니다.\\n연관키워드: 자연어 처리, 정보 검색, 데이터 마이닝\\n\\nDeep Learning\\n\\n정의: 딥러닝은 인공신경망을 이용하여 복잡한 문제를 해결하는 머신러닝의 한 분야입니다. 이는 데이터에서 고수준의 표현을 학습하는 데 중점을 둡니다.\\n예시: 이미지 인식, 음성 인식, 자연어 처리 등에서 딥러닝 모델이 활용됩니다.\\n연관키워드: 인공신경망, 머신러닝, 데이터 분석\\n\\nSchema\\n\\n정의: 스키마는 데이터베이스나 파일의 구조를 정의하는 것으로, 데이터가 어떻게 저장되고 조직되는지에 대한 청사진을 제공합니다.\\n예시: 관계형 데이터베이스의 테이블 스키마는 열 이름, 데이터 타입, 키 제약 조건 등을 정의합니다.\\n연관키워드: 데이터베이스, 데이터 모델링, 데이터 관리\\n\\nDataFrame\\n\\n정의: DataFrame은 행과 열로 이루어진 테이블 형태의 데이터 구조로, 주로 데이터 분석 및 처리에 사용됩니다.\\n예시: 판다스 라이브러리에서 DataFrame은 다양한 데이터 타입의 열을 가질 수 있으며, 데이터 조작과 분석을 용이하게 합니다.\\n연관키워드: 데이터 분석, 판다스, 데이터 처리\\n\\nAttention 메커니즘\\n\\n정의: Attention 메커니즘은 딥러닝에서 중요한 정보에 더 많은 \\'주의\\'를 기울이도록 하는 기법입니다. 이는 주로 시퀀스 데이터(예: 텍스트, 시계열 데이터)에서 사용됩니다.\\n예시: 번역 모델에서 Attention 메커니즘은 입력 문장의 중요한 부분에 더 집중하여 정확한 번역을 생성합니다.\\n연관키워드: 딥러닝, 자연어 처리, 시퀀스 모델링\\n\\n판다스 (Pandas)\\n\\n정의: 판다스는 파이썬 프로그래밍 언어를 위한 데이터 분석 및 조작 도구를 제공하는 라이브러리입니다. 이는 데이터 분석 작업을 효율적으로 수행할 수 있게 합니다.\\n예시: 판다스를 사용하여 CSV 파일을 읽고, 데이터를 정제하며, 다양한 분석을 수행할 수 있습니다.\\n연관키워드: 데이터 분석, 파이썬, 데이터 처리\\n\\nGPT (Generative Pretrained Transformer)\\n\\n정의: GPT는 대규모의 데이터셋으로 사전 훈련된 생성적 언어 모델로, 다양한 텍스트 기반 작업에 활용됩니다. 이는 입력된 텍스트에 기반하여 자연스러운 언어를 생성할 수 있습니다.\\n예시: 사용자가 제공한 질문에 대해 자세한 답변을 생성하는 챗봇은 GPT 모델을 사용할 수 있습니다.\\n연관키워드: 자연어 처리, 텍스트 생성, 딥러닝\\n\\nInstructGPT\\n\\n정의: InstructGPT는 사용자의 지시에 따라 특정한 작업을 수행하기 위해 최적화된 GPT 모델입니다. 이 모델은 보다 정확하고 관련성 높은 결과를 생성하도록 설계되었습니다.\\n예시: 사용자가 \"이메일 초안 작성\"과 같은 특정 지시를 제공하면, InstructGPT는 관련 내용을 기반으로 이메일을 작성합니다.\\n연관키워드: 인공지능, 자연어 이해, 명령 기반 처리\\n\\nKeyword Search\\n\\n정의: 키워드 검색은 사용자가 입력한 키워드를 기반으로 정보를 찾는 과정입니다. 이는 대부분의 검색 엔진과 데이터베이스 시스템에서 기본적인 검색 방식으로 사용됩니다.\\n예시: 사용자가 \"커피숍 서울\"이라고 검색하면, 관련된 커피숍 목록을 반환합니다.\\n연관키워드: 검색 엔진, 데이터 검색, 정보 검색\\n\\nPage Rank\\n\\n정의: 페이지 랭크는 웹 페이지의 중요도를 평가하는 알고리즘으로, 주로 검색 엔진 결과의 순위를 결정하는 데 사용됩니다. 이는 웹 페이지 간의 링크 구조를 분석하여 평가합니다.\\n예시: 구글 검색 엔진은 페이지 랭크 알고리즘을 사용하여 검색 결과의 순위를 정합니다.\\n연관키워드: 검색 엔진 최적화, 웹 분석, 링크 분석\\n\\n데이터 마이닝\\n\\n정의: 데이터 마이닝은 대량의 데이터에서 유용한 정보를 발굴하는 과정입니다. 이는 통계, 머신러닝, 패턴 인식 등의 기술을 활용합니다.\\n예시: 소매업체가 고객 구매 데이터를 분석하여 판매 전략을 수립하는 것은 데이터 마이닝의 예입니다.\\n연관키워드: 빅데이터, 패턴 인식, 예측 분석\\n\\n멀티모달 (Multimodal)\\n\\n정의: 멀티모달은 여러 종류의 데이터 모드(예: 텍스트, 이미지, 소리 등)를 결합하여 처리하는 기술입니다. 이는 서로 다른 형식의 데이터 간의 상호 작용을 통해 보다 풍부하고 정확한 정보를 추출하거나 예측하는 데 사용됩니다.\\n예시: 이미지와 설명 텍스트를 함께 분석하여 더 정확한 이미지 분류를 수행하는 시스템은 멀티모달 기술의 예입니다.\\n연관키워드: 데이터 융합, 인공지능, 딥러닝'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["print(file[:500])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZzVVVNYfrn0M","executionInfo":{"status":"ok","timestamp":1735265453332,"user_tz":-540,"elapsed":3,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"dd62bea0-d097-42b2-8cce-ebae4a77da48"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding\n","\n","정의: 임베딩은 단어나 문장 같은 텍스트 데이터를 저차원의 연속적인 벡터로 변환하는 과정입니다. 이를 통해 컴퓨터가 텍스트를 이해하고 처리할 수 있게 합니다.\n","예시: \"사과\"라는 단어를 [0.65, -0.23, 0.17]과 같은 벡터로 표현합니다.\n","연관키워드: 자연어 처리, 벡터화, 딥러닝\n","\n","Token\n","\n","정의: 토큰은 텍스트를 더 작은 단위로 분할하는 것을 의미합니다. 이는 일반적으로 단어, 문장, 또는 구절일 수 있습니다.\n","예시: 문장 \"나는 학교에 간다\"를 \"나는\", \"학교에\", \"간다\"로 분할합니다.\n","연관키워드: 토큰화, 자연어\n"]}]},{"cell_type":"markdown","source":["링크 텍스트#CharacterTextSpilltter를 사용하여 분할\n","CharacterTextSpilltter를 사용하여 텍스트를 청크(chunk)로 분할하는 코드에 대해 설명합니다.\n","</br>\n","\n","**separator**: 분할할 기준을 설정합니다. 기본값은 **\"\\n\\n\"**입니다. </br>\n","**chunk_size**: 각 청크의 최대 크기를 설정합니다. 예: 250자 </br>\n","**chunk_overlab**: 인접한 청크 간 중복을 허용합니다. 예 : 50자 </br>\n","**length_function**: 텍스트의 길이를 계산하는 함수를 지정합니다. 예:len"],"metadata":{"id":"_LVqItjqtDzG"}},{"cell_type":"code","source":["from langchain.text_splitter import CharacterTextSplitter\n","\n","# CharacterTextSplitter를 사용하여 텍스트를 청크(chunk)로 분할하는 코드\n","text_splitter = CharacterTextSplitter(\n","    # 텍스트를 분할할 때 사용할 구분자를 지정합니다. 기본값은 \"\\n\\n\" 입니다.\n","    separator=\"\\n\\n\",\n","    # 분할된 텍스트 청크의 최대 크기를 지정합니다, (문자수)\n","    chunk_size=210,\n","    # 분할된 텍스트 청크 간의 중복되는 문자 수를 지정합니다.\n","    chunk_overlap=0,\n","    # 텍스트의 길이를 계산하는 함수를 지정합니다.\n","    length_function=len\n",")"],"metadata":{"id":"aJCo-mQBt_AU","executionInfo":{"status":"ok","timestamp":1735265454986,"user_tz":-540,"elapsed":286,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# 텍스트를 청크로 분할합니다.\n","texts = text_splitter.create_documents([file])\n","print(len(texts[0].page_content)) # 분할된 문서의 개수를 출력합니다.\n","print(texts[0]) # 분할된 문서 중 첫 번째 문서를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"436pJONevE-l","executionInfo":{"status":"ok","timestamp":1735265456159,"user_tz":-540,"elapsed":281,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"afe8f30b-f100-4ea0-ae0e-64e44ed238fb"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["197\n","page_content='Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding'\n"]}]},{"cell_type":"markdown","source":["create_document메서드를 이용한 메타데이터 전달"],"metadata":{"id":"I5UpqRBtwyhg"}},{"cell_type":"code","source":["# 문서에 대한 메타데이터 리스트를 정의합니다.\n","metadatas = [\n","    {\"document\": 1},\n","    # {\"document\": 2},\n","]\n","\n","documents = text_splitter.create_documents(\n","    [\n","        file,\n","        # file,\n","    ], # 분할할 텍스트 데이터를 리스트로 전달합니다.\n","    metadatas=metadatas # 각 문서에 해당하는 메타데이터를 전달합니다.\n",")\n","print(documents[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mjq3AfEawxHN","executionInfo":{"status":"ok","timestamp":1735265857341,"user_tz":-540,"elapsed":277,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a0b46de1-527c-4170-8b1e-402eaefc1aae"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["page_content='Semantic Search\n","\n","정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\n","예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\n","연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\n","\n","Embedding' metadata={'document': 1}\n"]}]},{"cell_type":"code","source":["len(documents)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rXwvYstdxgQT","executionInfo":{"status":"ok","timestamp":1735265861716,"user_tz":-540,"elapsed":243,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"e9386477-9f9c-4383-ebbd-f2ceadcb4513"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["32"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["documents[1].metadata"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FSBBjGZ9yfNB","executionInfo":{"status":"ok","timestamp":1735265863064,"user_tz":-540,"elapsed":253,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"04d4d564-64b8-4740-a47a-b40c444c1d7a"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'document': 1}"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["# text_splitter를 사용하여 file 텍스트를 분할하고, 분할된 텍스트의 첫 번째 요소를 반환합니다.\n","text_splitter.split_text(file)[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"oZd4XJQCyl0l","executionInfo":{"status":"ok","timestamp":1735265864784,"user_tz":-540,"elapsed":313,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"4c7ffe73-7cbc-41e6-9c58-4bc220b88f36"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Semantic Search\\n\\n정의: 의미론적 검색은 사용자의 질의를 단순한 키워드 매칭을 넘어서 그 의미를 파악하여 관련된 결과를 반환하는 검색 방식입니다.\\n예시: 사용자가 \"태양계 행성\"이라고 검색하면, \"목성\", \"화성\" 등과 같이 관련된 행성에 대한 정보를 반환합니다.\\n연관키워드: 자연어 처리, 검색 알고리즘, 데이터 마이닝\\n\\nEmbedding'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["# 자소서.var"],"metadata":{"id":"F3VaG43s6X-q"}},{"cell_type":"code","source":["with open(\"data/자소서.txt\") as f:\n","  file = f.read()"],"metadata":{"id":"m8StO4mg6aJp","executionInfo":{"status":"ok","timestamp":1735266357413,"user_tz":-540,"elapsed":295,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["file"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"J8uH_F8U7Saa","executionInfo":{"status":"ok","timestamp":1735266359001,"user_tz":-540,"elapsed":256,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"4408cf72-712c-416a-f802-ad489d6b5064"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'자기소개서\\n\\n저는 중학교 2학년 무렵부터 스스로 흥미를 느낀 코딩에 도전하며, ‘구상한 아이디어를 현실화하는 것’에 몰입해 왔습니다. 2019년에는 Win32 API를 활용하여 팩맨 게임을 구현해보며 구조적 프로그래밍과 그래픽 처리의 기초를 다졌고, 2021년에는 Unity를 활용해 2D 기반의 2인 플레이 게임을 제작하며 게임 로직 설계의 감각을 키울 수 있었습니다. 이러한 경험을 통해 저는 단순히 코드를 짜는 것에 그치지 않고, 끊임없이 새로운 기능과 개선점을 모색하는 ‘문제 해결형’ 개발자로 성장했습니다. 이후 인공지능 분야에 매력을 느껴 인공지능 전공으로 대학에 진학하였고, 골절 진단 시스템이나 육계 무게 예측 모델 등 다양한 프로젝트에 참여하면서 인공지능 기술을 실용적이며 가치 있는 결과물로 구현하는 경험을 쌓고 있습니다. 이러한 과정에서 저는 주어진 문제를 구조적으로 접근하고, 알고리즘과 모델을 탐색하여 최적의 솔루션을 도출하는 능력을 발전시켜 왔습니다. 나아가 팀원과의 의사소통을 통해 다양한 관점을 조정하고, 협력적인 환경에서 성장할 수 있는 역량 역시 갖추게 되었습니다. 결국 제가 지닌 적성은 ‘아이디어를 논리적으로 구현하는 능력’과 ‘새로운 기술을 유연하게 흡수하는 학습 역량’에 기반하고 있습니다.\\n\\n자신의장단점\\n\\n저는 한 번 관심을 두게 된 주제나 과제에 대해 깊이 파고들며, 끝까지 해결책을 찾기 위해 몰두하는 집요함을 강점으로 가지고 있습니다. 이러한 집중력 덕분에 문제 해결 과정에서 남들이 놓치기 쉬운 세부사항까지 꼼꼼히 점검하고, 결국 원하는 목표에 도달하는 경험을 자주 했습니다. 다만, 제 단점은 흥미를 잃은 영역에 대해서는 집중력이 급격히 떨어진다는 점입니다. 이로 인해 때때로 중요한 업무를 균형 있게 진행하기 어렵거나, 팀 내 협업 과정에서 제 역할을 충분히 못 하는 상황이 발생할 수 있습니다. 이런 단점을 개선하기 위해서는 업무 전체 흐름을 파악하고, 관심을 덜 느끼는 부분이라도 목표 달성을 위해 필요한 과정임을 인식하며 자기 동기부여 방식을 다양화하고 있습니다. 이런 노력을 통해 더욱 지속적이고 균형 잡힌 성과를 내고자 합니다.\\n\\n교육수료후계획\\n\\n저는 2024년 2월경 군입대를 예정하고 있으며, 정확한 입대일은 아직 확정되지 않았습니다. 입대 후 자대배치를 받고 생활에 적응한 뒤, 군 복무 기간 동안 꾸준히 학습을 이어나갈 계획입니다. 구체적으로는 인공지능 분야의 기초를 확고히 다지기 위해 『밑바닥부터 시작하는 딥러닝』 시리즈(1~5권)를 완독하는 것을 1차 목표로 삼고 있습니다. 이를 통해 딥러닝 전반에 대한 이론적 기반과 실무적 감각을 다질 것이며, 이와 함께 선형대수학, 확률·통계 등 수학적 기초 역량을 강화하고, 영어 독해 및 기술 문서 이해 능력을 향상시켜 전문 지식 습득에 필요한 토대를 더욱 탄탄히 할 것입니다. 이러한 준비 과정을 통해 군 복무를 마친 뒤 복학할 시점에는 보다 깊이 있는 연구 활동에 매진할 수 있는 역량을 갖추게 될 것으로 기대하고 있습니다. 이후 학업을 이어가는 4학년 즈음에는 인공지능 관련 대학원 진학을 적극적으로 고려할 계획입니다. 최종적으로는 인공지능 분야에서 새로운 패러다임을 제시할 수 있는 모델을 개발하고, 이를 통해 학문적·산업적 흐름을 주도하는 연구자로 성장하고자 합니다. 이러한 장기적 목표에 한 걸음씩 다가가기 위해 지금부터 체계적인 학습과 자기계발에 힘쓸 것입니다.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["print(file[:500])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T8HeKNc-7T-w","executionInfo":{"status":"ok","timestamp":1735266361419,"user_tz":-540,"elapsed":263,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"73939d4e-06d8-46dd-9ef3-dd2d4209a6a9"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["자기소개서\n","\n","저는 중학교 2학년 무렵부터 스스로 흥미를 느낀 코딩에 도전하며, ‘구상한 아이디어를 현실화하는 것’에 몰입해 왔습니다. 2019년에는 Win32 API를 활용하여 팩맨 게임을 구현해보며 구조적 프로그래밍과 그래픽 처리의 기초를 다졌고, 2021년에는 Unity를 활용해 2D 기반의 2인 플레이 게임을 제작하며 게임 로직 설계의 감각을 키울 수 있었습니다. 이러한 경험을 통해 저는 단순히 코드를 짜는 것에 그치지 않고, 끊임없이 새로운 기능과 개선점을 모색하는 ‘문제 해결형’ 개발자로 성장했습니다. 이후 인공지능 분야에 매력을 느껴 인공지능 전공으로 대학에 진학하였고, 골절 진단 시스템이나 육계 무게 예측 모델 등 다양한 프로젝트에 참여하면서 인공지능 기술을 실용적이며 가치 있는 결과물로 구현하는 경험을 쌓고 있습니다. 이러한 과정에서 저는 주어진 문제를 구조적으로 접근하고, 알고리즘과 모델을 탐색하여 최적의 솔루션을 도출하는 능력을 발전시켜 왔습니다. 나아가 팀원과의 \n"]}]},{"cell_type":"code","source":["from langchain.text_splitter import CharacterTextSplitter\n","\n","# CharacterTextSplitter를 사용하여 텍스트를 청크(chunk)로 분할하는 코드\n","text_splitter = CharacterTextSplitter(\n","    # 텍스트를 분할할 때 사용할 구분자를 지정합니다. 기본값은 \" \" 입니다.\n","    separator=\" \",\n","    # 분할된 텍스트 청크의 최대 크기를 지정합니다, (문자수)\n","    chunk_size=210,\n","    # 분할된 텍스트 청크 간의 중복되는 문자 수를 지정합니다.\n","    chunk_overlap=0,\n","    # 텍스트의 길이를 계산하는 함수를 지정합니다.\n","    length_function=len\n",")"],"metadata":{"id":"iTwcjgpc7XUV","executionInfo":{"status":"ok","timestamp":1735266658597,"user_tz":-540,"elapsed":277,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["# 텍스트를 청크로 분할합니다.\n","texts = text_splitter.create_documents([file])\n","print(len(texts[0].page_content)) # 분할된 문서의 개수를 출력합니다.\n","print(texts[0]) # 분할된 문서 중 첫 번째 문서를 출력합니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MCosXr-n7Z5J","executionInfo":{"status":"ok","timestamp":1735266660537,"user_tz":-540,"elapsed":299,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"9c08cbce-5202-427a-b754-fe4a4293d9fe"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["207\n","page_content='자기소개서\n","\n","저는 중학교 2학년 무렵부터 스스로 흥미를 느낀 코딩에 도전하며, ‘구상한 아이디어를 현실화하는 것’에 몰입해 왔습니다. 2019년에는 Win32 API를 활용하여 팩맨 게임을 구현해보며 구조적 프로그래밍과 그래픽 처리의 기초를 다졌고, 2021년에는 Unity를 활용해 2D 기반의 2인 플레이 게임을 제작하며 게임 로직 설계의 감각을 키울 수 있었습니다.'\n"]}]},{"cell_type":"code","source":["# 문서에 대한 메타데이터 리스트를 정의합니다.\n","metadatas = [\n","    {\"document\": 1},\n","    # {\"document\": 2},\n","]\n","\n","documents = text_splitter.create_documents(\n","    [\n","        file,\n","        # file,\n","    ], # 분할할 텍스트 데이터를 리스트로 전달합니다.\n","    metadatas=metadatas # 각 문서에 해당하는 메타데이터를 전달합니다.\n",")\n","print(documents[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lXul6xB28A3h","executionInfo":{"status":"ok","timestamp":1735266662071,"user_tz":-540,"elapsed":310,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"37621473-fc17-4c3d-f2cb-0b1ff17e32c2"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["page_content='자기소개서\n","\n","저는 중학교 2학년 무렵부터 스스로 흥미를 느낀 코딩에 도전하며, ‘구상한 아이디어를 현실화하는 것’에 몰입해 왔습니다. 2019년에는 Win32 API를 활용하여 팩맨 게임을 구현해보며 구조적 프로그래밍과 그래픽 처리의 기초를 다졌고, 2021년에는 Unity를 활용해 2D 기반의 2인 플레이 게임을 제작하며 게임 로직 설계의 감각을 키울 수 있었습니다.' metadata={'document': 1}\n"]}]},{"cell_type":"code","source":["len(documents)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SaE2AGw48DL5","executionInfo":{"status":"ok","timestamp":1735266664362,"user_tz":-540,"elapsed":261,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"da3f1324-533d-42d1-882f-794370b147af"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["documents[1].metadata"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_tLrDr4j8FJZ","executionInfo":{"status":"ok","timestamp":1735266665862,"user_tz":-540,"elapsed":358,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"cff05de8-4867-426f-db52-49cbd61d80af"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'document': 1}"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["# text_splitter를 사용하여 file 텍스트를 분할하고, 분할된 텍스트의 첫 번째 요소를 반환합니다.\n","text_splitter.split_text(file)[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"ZoIVP9vQ8HeB","executionInfo":{"status":"ok","timestamp":1735266667089,"user_tz":-540,"elapsed":294,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"8cac4202-a144-432f-b507-a5b6eedba580"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'자기소개서\\n\\n저는 중학교 2학년 무렵부터 스스로 흥미를 느낀 코딩에 도전하며, ‘구상한 아이디어를 현실화하는 것’에 몰입해 왔습니다. 2019년에는 Win32 API를 활용하여 팩맨 게임을 구현해보며 구조적 프로그래밍과 그래픽 처리의 기초를 다졌고, 2021년에는 Unity를 활용해 2D 기반의 2인 플레이 게임을 제작하며 게임 로직 설계의 감각을 키울 수 있었습니다.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":86}]}]}

*****[Document.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOims66r/fYXJABhO5JD7nk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"N4vq-uZOKqdi","executionInfo":{"status":"ok","timestamp":1735622828834,"user_tz":-540,"elapsed":333,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"outputs":[],"source":["from langchain_core.documents import Document\n","\n","document = Document(\"안녕하세요? 이건 랭체인의 도큐먼드 입니다\")"]},{"cell_type":"code","source":["document"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PK10SEWiL8MO","executionInfo":{"status":"ok","timestamp":1735622908213,"user_tz":-540,"elapsed":271,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"96444616-7bb7-4106-effe-bc14f9121495"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={}, page_content='안녕하세요? 이건 랭체인의 도큐먼드 입니다')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["document.__dict__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2EX2ce5tL-el","executionInfo":{"status":"ok","timestamp":1735622966635,"user_tz":-540,"elapsed":301,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"2bff3774-bea7-415f-8262-7d23df741f26"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'id': None,\n"," 'metadata': {},\n"," 'page_content': '안녕하세요? 이건 랭체인의 도큐먼드 입니다',\n"," 'type': 'Document'}"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 메타데이터 추가\n","document.metadata[\"source\"] = \"TeddyNote\"\n","document.metadata[\"page\"] = 1\n","document.metadata[\"author\"] = \"Teddy\""],"metadata":{"id":"CTrYP-ufMMjc","executionInfo":{"status":"ok","timestamp":1735623039899,"user_tz":-540,"elapsed":343,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# 도큐먼트의 속성 확인\n","document.metadata"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2xuBY6m7Merh","executionInfo":{"status":"ok","timestamp":1735623045010,"user_tz":-540,"elapsed":286,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"33b6aace-3ac8-49ec-cb52-b3a951935c42"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'source': 'TeddyNote', 'page': 1, 'author': 'Teddy'}"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["document.page_content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"mLK3GBErMsoi","executionInfo":{"status":"ok","timestamp":1735623163714,"user_tz":-540,"elapsed":268,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"5af7dc67-2118-4781-b006-023ba5cf0bc4"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'안녕하세요? 이건 랭체인의 도큐먼드 입니다'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["print(document.id)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9YwhFN_eM8ZV","executionInfo":{"status":"ok","timestamp":1735623182094,"user_tz":-540,"elapsed":279,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"060dff13-825c-4920-a83f-76b24837580e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["None\n"]}]},{"cell_type":"markdown","source":["## 2. Document Load Test"],"metadata":{"id":"jJynHPnENqYK"}},{"cell_type":"code","source":["FILE_PATH = \"/content/돼지 뒷다리살 볶음.pdf\""],"metadata":{"id":"PoliMSpJNuC2","executionInfo":{"status":"ok","timestamp":1735623551985,"user_tz":-540,"elapsed":298,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["FILE_PATH"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"LG0CNSj6NyHS","executionInfo":{"status":"ok","timestamp":1735623553377,"user_tz":-540,"elapsed":275,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"82d21f4c-acbd-4cb8-b6dc-4e0b29f71646"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/돼지 뒷다리살 볶음.pdf'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["! pip install langchain langchain-community pypdf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_XRawFSDOEw6","executionInfo":{"status":"ok","timestamp":1735623580797,"user_tz":-540,"elapsed":13544,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"faeb13ef-23c4-4aab-a83a-714765e2e14b"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: langchain in /usr/local/lib/python3.10/dist-packages (0.3.12)\n","Collecting langchain-community\n","  Downloading langchain_community-0.3.13-py3-none-any.whl.metadata (2.9 kB)\n","Collecting pypdf\n","  Downloading pypdf-5.1.0-py3-none-any.whl.metadata (7.2 kB)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (6.0.2)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.0.36)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (3.11.10)\n","Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (4.0.3)\n","Requirement already satisfied: langchain-core<0.4.0,>=0.3.25 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.3.25)\n","Requirement already satisfied: langchain-text-splitters<0.4.0,>=0.3.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.3.3)\n","Requirement already satisfied: langsmith<0.3,>=0.1.17 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.2.3)\n","Requirement already satisfied: numpy<2,>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.26.4)\n","Requirement already satisfied: pydantic<3.0.0,>=2.7.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.10.3)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.32.3)\n","Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (9.0.0)\n","Collecting dataclasses-json<0.7,>=0.5.7 (from langchain-community)\n","  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n","Collecting httpx-sse<0.5.0,>=0.4.0 (from langchain-community)\n","  Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)\n","Collecting langchain\n","  Downloading langchain-0.3.13-py3-none-any.whl.metadata (7.1 kB)\n","Collecting langchain-core<0.4.0,>=0.3.25 (from langchain)\n","  Downloading langchain_core-0.3.28-py3-none-any.whl.metadata (6.3 kB)\n","Collecting pydantic-settings<3.0.0,>=2.4.0 (from langchain-community)\n","  Downloading pydantic_settings-2.7.0-py3-none-any.whl.metadata (3.5 kB)\n","Requirement already satisfied: typing_extensions>=4.0 in /usr/local/lib/python3.10/dist-packages (from pypdf) (4.12.2)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (2.4.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.3.2)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (24.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (0.2.1)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.18.3)\n","Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading marshmallow-3.23.2-py3-none-any.whl.metadata (7.1 kB)\n","Collecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.25->langchain) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.4.0,>=0.3.25->langchain) (24.2)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.17->langchain) (0.28.1)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.17->langchain) (3.10.12)\n","Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.3,>=0.1.17->langchain) (1.0.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.27.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3.0.0,>=2.7.4->langchain) (2.27.1)\n","Collecting python-dotenv>=0.21.0 (from pydantic-settings<3.0.0,>=2.4.0->langchain-community)\n","  Downloading python_dotenv-1.0.1-py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2024.12.14)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain) (3.1.1)\n","Requirement already satisfied: anyio in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.17->langchain) (3.7.1)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->langsmith<0.3,>=0.1.17->langchain) (1.0.7)\n","Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.17->langchain) (0.14.0)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.4.0,>=0.3.25->langchain) (3.0.0)\n","Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading mypy_extensions-1.0.0-py3-none-any.whl.metadata (1.1 kB)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.17->langchain) (1.3.1)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio->httpx<1,>=0.23.0->langsmith<0.3,>=0.1.17->langchain) (1.2.2)\n","Downloading langchain_community-0.3.13-py3-none-any.whl (2.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m26.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading langchain-0.3.13-py3-none-any.whl (1.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m42.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pypdf-5.1.0-py3-none-any.whl (297 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.0/298.0 kB\u001b[0m \u001b[31m16.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n","Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)\n","Downloading langchain_core-0.3.28-py3-none-any.whl (411 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m20.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydantic_settings-2.7.0-py3-none-any.whl (29 kB)\n","Downloading marshmallow-3.23.2-py3-none-any.whl (49 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n","Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n","Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n","Installing collected packages: python-dotenv, pypdf, mypy-extensions, marshmallow, httpx-sse, typing-inspect, pydantic-settings, dataclasses-json, langchain-core, langchain, langchain-community\n","  Attempting uninstall: langchain-core\n","    Found existing installation: langchain-core 0.3.25\n","    Uninstalling langchain-core-0.3.25:\n","      Successfully uninstalled langchain-core-0.3.25\n","  Attempting uninstall: langchain\n","    Found existing installation: langchain 0.3.12\n","    Uninstalling langchain-0.3.12:\n","      Successfully uninstalled langchain-0.3.12\n","Successfully installed dataclasses-json-0.6.7 httpx-sse-0.4.0 langchain-0.3.13 langchain-community-0.3.13 langchain-core-0.3.28 marshmallow-3.23.2 mypy-extensions-1.0.0 pydantic-settings-2.7.0 pypdf-5.1.0 python-dotenv-1.0.1 typing-inspect-0.9.0\n"]}]},{"cell_type":"code","source":["from langchain_community.document_loaders import PyPDFLoader\n","\n","# 로더 설정\n","loader = PyPDFLoader(FILE_PATH)"],"metadata":{"id":"Ke33RTkwOM_G","executionInfo":{"status":"ok","timestamp":1735623587198,"user_tz":-540,"elapsed":313,"user":{"displayName":"배진우","userId":"16041142222927328568"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# PDF 로더\n","docs = loader.load()\n","\n","# 로드된 문서의 수 확인\n","len(docs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HT0SLGsIOoFi","executionInfo":{"status":"ok","timestamp":1735623621940,"user_tz":-540,"elapsed":321,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"6847c2c2-4e7a-40ca-825a-21dcbc0d4fd2"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# 첫번째 문서 확인\n","docs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OhkwTgGxOtbS","executionInfo":{"status":"ok","timestamp":1735623629894,"user_tz":-540,"elapsed":281,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"f326f1e0-341a-413c-e84e-a19f7a3bb29d"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/돼지 뒷다리살 볶음.pdf', 'page': 0}, page_content='영상 ( 클릭 )\\n스푼  기준은  일반  숟가락\\n준비물\\n다진  돼지  뒷다리살  (500g)\\n대파  (1 대 )\\n양파  (1 개 )\\n다진마늘  (2 스푼 )\\n고추가루  (3 스푼 )\\n청양고추  (2 개 )\\n고추장  (3 스푼 )\\n진간장  (3 스푼 )\\n설탕  (3 스푼 )\\n통깨  ( 원하는  만큼 )\\n만드는법\\n중불  🔥🔥\\n1. 식용유를  팬  바닥을  살짝  가릴  정도로  넉넉하게  둘러줌\\n2. 대파  잘게  손질\\n3. 파기름을  내주면서  돼지고기와  대파  전부  넣고  볶아줌\\n4. 돼지고기  핏기가  사라지면  다진마늘  2 스푼과  고추가루  3 스푼\\n5. 양파  하나  썰어서  넣기  ( 식감  있게  중국집  양파처럼  썰기 )\\n6. 청양고추  2 개  썰어서  넣기\\n7. 고추장 , 진간장 , 설탕  각각  3 스푼씩  넣고  볶기\\n8. 마지막으로  통깨  ( 선택사항 )\\n특이사항\\n최대한  빨리  먹기  ( 돼지고기라 )')"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["from langchain_text_splitters import CharacterTextSplitter\n","\n","# 문열 분할기 설정\n","text_splitter = CharacterTextSplitter(chunk_size=200, chunk_overlap=0)\n","\n","# 예제 파일 경로\n","FIe_PATH = \"/content/돼지 뒷다리살 볶음.pdf\"\n","\n","# 로더 설정\n","loader = PyPDFLoader(FILE_PATH)\n","\n","# 문서 분할\n","docs = loader.load_and_split(text_splitter=text_splitter)\n","\n","# 로드된 문서의 수 확인\n","print(f\"문서의 길이: {len(docs)}\")\n","\n","# 첫번째 문서 확인\n","docs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l-6-J-kyOxWk","executionInfo":{"status":"ok","timestamp":1735623876726,"user_tz":-540,"elapsed":323,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"38df099f-e772-422c-bb4c-774fb8130a6f"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["문서의 길이: 1\n"]},{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/돼지 뒷다리살 볶음.pdf', 'page': 0}, page_content='영상 ( 클릭 )\\n스푼  기준은  일반  숟가락\\n준비물\\n다진  돼지  뒷다리살  (500g)\\n대파  (1 대 )\\n양파  (1 개 )\\n다진마늘  (2 스푼 )\\n고추가루  (3 스푼 )\\n청양고추  (2 개 )\\n고추장  (3 스푼 )\\n진간장  (3 스푼 )\\n설탕  (3 스푼 )\\n통깨  ( 원하는  만큼 )\\n만드는법\\n중불  🔥🔥\\n1. 식용유를  팬  바닥을  살짝  가릴  정도로  넉넉하게  둘러줌\\n2. 대파  잘게  손질\\n3. 파기름을  내주면서  돼지고기와  대파  전부  넣고  볶아줌\\n4. 돼지고기  핏기가  사라지면  다진마늘  2 스푼과  고추가루  3 스푼\\n5. 양파  하나  썰어서  넣기  ( 식감  있게  중국집  양파처럼  썰기 )\\n6. 청양고추  2 개  썰어서  넣기\\n7. 고추장 , 진간장 , 설탕  각각  3 스푼씩  넣고  볶기\\n8. 마지막으로  통깨  ( 선택사항 )\\n특이사항\\n최대한  빨리  먹기  ( 돼지고기라 )')"]},"metadata":{},"execution_count":23}]}]}

*****[도큐먼트 부분같은데.ipynb]*****

{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMwKwjvSsVHIVTwY+oo5Gz8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"6anzv-62Zj2t"},"outputs":[],"source":["from langchain_text_splitters import (\n","    Language,\n","    RecursiveCharacterTextSplitter,\n",")"]},{"cell_type":"code","source":["# 지원되는 언어의 전체 목록을 가져옵니다.\n","[e.value for e in Language]"],"metadata":{"collapsed":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"Y4UE9lZjaZ9D","executionInfo":{"status":"ok","timestamp":1735542809514,"user_tz":-540,"elapsed":277,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"a88e0f4d-f3c9-4f6d-ba32-3c19b3dbe7c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cpp',\n"," 'go',\n"," 'java',\n"," 'kotlin',\n"," 'js',\n"," 'ts',\n"," 'php',\n"," 'proto',\n"," 'python',\n"," 'rst',\n"," 'ruby',\n"," 'rust',\n"," 'scala',\n"," 'swift',\n"," 'markdown',\n"," 'latex',\n"," 'html',\n"," 'sol',\n"," 'csharp',\n"," 'cobol',\n"," 'c',\n"," 'lua',\n"," 'perl',\n"," 'haskell',\n"," 'elixir',\n"," 'powershell']"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 주어진 언어에 대해 사용되는 구분자를 확인할 수 있습니다.\n","RecursiveCharacterTextSplitter.get_separators_for_language(Language.PYTHON)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x4c3-zpGaMja","executionInfo":{"status":"ok","timestamp":1735542812222,"user_tz":-540,"elapsed":257,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"1bb90433-dbbc-4daf-97b4-bb85545a47da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['\\nclass ', '\\ndef ', '\\n\\tdef ', '\\n\\n', '\\n', ' ', '']"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["PYTHON_CODE = \"\"\"\n","def hello_world():\n","    print(\"Hello, World!\")\n","\n","hello_world()\n","\"\"\"\n","\n","python_splitter = RecursiveCharacterTextSplitter.from_language(\n","    language=Language.PYTHON, chunk_size=50, chunk_overlap=0\n",")"],"metadata":{"id":"cO0bsxnsa1dA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["python_docs = python_splitter.create_documents([PYTHON_CODE])\n","python_docs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kPHiYZn5bbo0","executionInfo":{"status":"ok","timestamp":1735543078879,"user_tz":-540,"elapsed":289,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"d2c03c0c-2d17-490e-df04-4d38c35feb9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Document(metadata={}, page_content='def hello_world():\\n    print(\"Hello, World!\")'),\n"," Document(metadata={}, page_content='hello_world()')]"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# Markdown"],"metadata":{"id":"q1fdkVdDcYNW"}},{"cell_type":"code","source":["markdown_text = \"\"\"\n","# 🦜️🔗 LangChain\n","\n","⚡ LLM을 활용한 초스피드 애플리케이션 구축 ⚡\n","\n","## 빠른 설치\n","\n","```bash\n","pip install langchain\n","빠르게 발전하는 분야의 오픈 소스 프로젝트 입니다. 많관부 🙏\n","\"\"\""],"metadata":{"id":"-_ESuiSHcbk3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["md_splitter = RecursiveCharacterTextSplitter.from_language(\n","    # 마크다운 언어를 사용하여 텍스트 분할기 생성\n","    language=Language.MARKDOWN,\n","    # 청크 크기를 60으로 설정\n","    chunk_size=60,\n","    # 청크 간 중복되는 부분이 없도록 설정\n","    chunk_overlap=0,\n",")\n","# 마크다운 텍스트를 분할하여 문서 생성\n","md_docs = md_splitter.create_documents([markdown_text])\n","# 생성된 문서 출력\n","md_docs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F6Qy_jp-doJG","executionInfo":{"status":"ok","timestamp":1735543667988,"user_tz":-540,"elapsed":353,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"d4d5c0e2-5e61-4247-a27d-90fa1ef635ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Document(metadata={}, page_content='# 🦜️🔗 LangChain\\n\\n⚡ LLM을 활용한 초스피드 애플리케이션 구축 ⚡'),\n"," Document(metadata={}, page_content='## 빠른 설치'),\n"," Document(metadata={}, page_content='```bash\\npip install langchain'),\n"," Document(metadata={}, page_content='빠르게 발전하는 분야의 오픈 소스 프로젝트 입니다. 많관부 🙏')]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["html_text = \"\"\"\n","<!DOCTYPE html>\n","<html lang=\"ko\">\n","<head>\n","    <meta charset=\"UTF-8\">\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n","    <title>전주대학교 인공지능학과 소개</title>\n","    <style>\n","        body {\n","            font-family: Arial, sans-serif;\n","            margin: 0;\n","            padding: 0;\n","        }\n","        header {\n","            background-color: #003366;\n","            color: white;\n","            padding: 20px;\n","            text-align: center;\n","        }\n","        nav {\n","            background-color: #f2f2f2;\n","            padding: 10px;\n","            text-align: center;\n","        }\n","        nav a {\n","            margin: 0 15px;\n","            text-decoration: none;\n","            color: #003366;\n","            font-weight: bold;\n","        }\n","        .container {\n","            padding: 20px;\n","        }\n","        section {\n","            margin-bottom: 40px;\n","        }\n","        footer {\n","            background-color: #003366;\n","            color: white;\n","            text-align: center;\n","            padding: 10px;\n","            position: fixed;\n","            width: 100%;\n","            bottom: 0;\n","        }\n","    </style>\n","</head>\n","<body>\n","    <header>\n","        <h1>전주대학교 인공지능학과</h1>\n","        <p>미래를 이끄는 인공지능 전문가 양성</p>\n","    </header>\n","\n","    <nav>\n","        <a href=\"#overview\">학과 소개</a>\n","        <a href=\"#curriculum\">교육 과정</a>\n","        <a href=\"#faculty\">교수진</a>\n","        <a href=\"#research\">연구 분야</a>\n","        <a href=\"#contact\">문의하기</a>\n","    </nav>\n","\n","    <div class=\"container\">\n","        <section id=\"overview\">\n","            <h2>학과 소개</h2>\n","            <p>전주대학교 인공지능학과는 최신 인공지능 기술과 이론을 바탕으로 창의적이고 문제 해결 능력을 갖춘 인재를 양성하는 것을 목표로 합니다. 학생들은 머신러닝, 딥러닝, 데이터 분석 등 다양한 분야에서 전문 지식을 습득하며, 실제 프로젝트를 통해 실무 경험을 쌓을 수 있습니다.</p>\n","        </section>\n","\n","        <section id=\"curriculum\">\n","            <h2>교육 과정</h2>\n","            <ul>\n","                <li>기초 프로그래밍</li>\n","                <li>데이터 구조 및 알고리즘</li>\n","                <li>머신러닝</li>\n","                <li>딥러닝</li>\n","                <li>자연어 처리</li>\n","                <li>컴퓨터 비전</li>\n","                <li>빅데이터 분석</li>\n","                <li>인공지능 프로젝트</li>\n","            </ul>\n","        </section>\n","\n","        <section id=\"faculty\">\n","            <h2>교수진</h2>\n","            <ul>\n","                <li>홍길동 교수 - 머신러닝 전문가</li>\n","                <li>김영희 교수 - 딥러닝 및 자연어 처리 연구</li>\n","                <li>이철수 교수 - 데이터 분석 및 빅데이터 연구</li>\n","                <li>박지수 교수 - 컴퓨터 비전 및 이미지 처리</li>\n","            </ul>\n","        </section>\n","\n","        <section id=\"research\">\n","            <h2>연구 분야</h2>\n","            <p>전주대학교 인공지능학과는 다음과 같은 주요 연구 분야를 중심으로 연구 활동을 전개하고 있습니다:</p>\n","            <ul>\n","                <li>머신러닝 알고리즘 개발</li>\n","                <li>딥러닝 모델 최적화</li>\n","                <li>자연어 처리 및 음성 인식</li>\n","                <li>컴퓨터 비전 및 이미지 분석</li>\n","                <li>빅데이터 분석 및 처리</li>\n","                <li>인공지능 응용 시스템</li>\n","            </ul>\n","        </section>\n","\n","        <section id=\"contact\">\n","            <h2>문의하기</h2>\n","            <p>전주대학교 인공지능학과에 대한 문의는 아래 연락처를 통해 가능합니다:</p>\n","            <ul>\n","                <li>전화: 063-123-4567</li>\n","                <li>이메일: ai@jeonju.ac.kr</li>\n","                <li>주소: 전라북도 전주시 덕진구 전주대학로 99</li>\n","            </ul>\n","        </section>\n","    </div>\n","\n","    <footer>\n","        <p>&copy; 2024 전주대학교 인공지능학과. All rights reserved.</p>\n","    </footer>\n","</body>\n","</html>\n","\"\"\""],"metadata":{"id":"aVEedTgvgbv-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["html_splitter = RecursiveCharacterTextSplitter.from_language(\n","    # HTML 언어를 사용하여 텍스트 분할기 생성\n","    language=Language.HTML,\n","    # 청크 크기를 60으로 설정\n","    chunk_size=60,\n","    # 청크 간 중복되는 부분이 없도록 설정\n","    chunk_overlap=0,\n",")\n","# 주어진 HTML 텍스트를 분할하여 문서 생성\n","html_docs = html_splitter.create_documents([html_text])\n","# 생성된 문서 출력\n","html_docs"],"metadata":{"id":"daWta1hWgaUn","executionInfo":{"status":"ok","timestamp":1735544401815,"user_tz":-540,"elapsed":292,"user":{"displayName":"배진우","userId":"16041142222927328568"}},"outputId":"f304a7e0-f5c7-4ebd-ec9e-1fbe6912a75e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Document(metadata={}, page_content='<!DOCTYPE html>\\n<html lang=\"ko\">'),\n"," Document(metadata={}, page_content='<head>\\n    <meta charset=\"UTF-8\">'),\n"," Document(metadata={}, page_content='<meta name=\"viewport\" content=\"width=device-width, initial-s'),\n"," Document(metadata={}, page_content='cale=1.0\">'),\n"," Document(metadata={}, page_content='<title>전주대학교 인공지능학과 소개</title>'),\n"," Document(metadata={}, page_content='<style>\\n        body {\\n            font-family: Arial, sans-'),\n"," Document(metadata={}, page_content='serif;\\n            margin: 0;\\n            padding: 0;'),\n"," Document(metadata={}, page_content='}\\n        header {\\n            background-color: #003366;'),\n"," Document(metadata={}, page_content='color: white;\\n            padding: 20px;'),\n"," Document(metadata={}, page_content='text-align: center;\\n        }\\n        nav {'),\n"," Document(metadata={}, page_content='background-color: #f2f2f2;\\n            padding: 10px;'),\n"," Document(metadata={}, page_content='text-align: center;\\n        }\\n        nav a {'),\n"," Document(metadata={}, page_content='margin: 0 15px;\\n            text-decoration: none;'),\n"," Document(metadata={}, page_content='color: #003366;\\n            font-weight: bold;'),\n"," Document(metadata={}, page_content='}\\n        .container {\\n            padding: 20px;'),\n"," Document(metadata={}, page_content='}\\n        section {\\n            margin-bottom: 40px;'),\n"," Document(metadata={}, page_content='}\\n        footer {\\n            background-color: #003366;'),\n"," Document(metadata={}, page_content='color: white;\\n            text-align: center;'),\n"," Document(metadata={}, page_content='padding: 10px;\\n            position: fixed;'),\n"," Document(metadata={}, page_content='width: 100%;\\n            bottom: 0;\\n        }\\n    </st'),\n"," Document(metadata={}, page_content='yle>\\n</head>'),\n"," Document(metadata={}, page_content='<body>\\n    <header>\\n        <h1>전주대학교 인공지능학과</h1>'),\n"," Document(metadata={}, page_content='<p>미래를 이끄는 인공지능 전문가 양성</p>\\n    </header>'),\n"," Document(metadata={}, page_content='<nav>\\n        <a href=\"#overview\">학과 소개</a>\\n        <a href='),\n"," Document(metadata={}, page_content='\"#curriculum\">교육 과정</a>\\n        <a href=\"#faculty\">교수진</a>'),\n"," Document(metadata={}, page_content='<a href=\"#research\">연구 분야</a>\\n        <a href=\"#conta'),\n"," Document(metadata={}, page_content='ct\">문의하기</a>\\n    </nav>'),\n"," Document(metadata={}, page_content='<div class=\"container\">\\n        <section id=\"overview\">'),\n"," Document(metadata={}, page_content='<h2>학과 소개</h2>'),\n"," Document(metadata={}, page_content='<p>전주대학교 인공지능학과는 최신 인공지능 기술과 이론을 바탕으로 창의적이고 문제 해결 능력을 갖춘 인재를'),\n"," Document(metadata={}, page_content='양성하는 것을 목표로 합니다. 학생들은 머신러닝, 딥러닝, 데이터 분석 등 다양한 분야에서 전문 지식을 습'),\n"," Document(metadata={}, page_content='득하며, 실제 프로젝트를 통해 실무 경험을 쌓을 수 있습니다.</p>\\n        </section>'),\n"," Document(metadata={}, page_content='<section id=\"curriculum\">'),\n"," Document(metadata={}, page_content='<h2>교육 과정</h2>\\n            <ul>'),\n"," Document(metadata={}, page_content='<li>기초 프로그래밍</li>'),\n"," Document(metadata={}, page_content='<li>데이터 구조 및 알고리즘</li>'),\n"," Document(metadata={}, page_content='<li>머신러닝</li>\\n                <li>딥러닝</li>'),\n"," Document(metadata={}, page_content='<li>자연어 처리</li>'),\n"," Document(metadata={}, page_content='<li>컴퓨터 비전</li>'),\n"," Document(metadata={}, page_content='<li>빅데이터 분석</li>'),\n"," Document(metadata={}, page_content='<li>인공지능 프로젝트</li>\\n            </ul>\\n        </section>'),\n"," Document(metadata={}, page_content='<section id=\"faculty\">'),\n"," Document(metadata={}, page_content='<h2>교수진</h2>\\n            <ul>'),\n"," Document(metadata={}, page_content='<li>홍길동 교수 - 머신러닝 전문가</li>'),\n"," Document(metadata={}, page_content='<li>김영희 교수 - 딥러닝 및 자연어 처리 연구</li>'),\n"," Document(metadata={}, page_content='<li>이철수 교수 - 데이터 분석 및 빅데이터 연구</li>'),\n"," Document(metadata={}, page_content='<li>박지수 교수 - 컴퓨터 비전 및 이미지 처리</li>\\n            </ul>'),\n"," Document(metadata={}, page_content='</section>\\n        \\n        <section id=\"research\">'),\n"," Document(metadata={}, page_content='<h2>연구 분야</h2>'),\n"," Document(metadata={}, page_content='<p>전주대학교 인공지능학과는 다음과 같은 주요 연구 분야를 중심으로 연구 활동을 전개하고 있습니다:</p>'),\n"," Document(metadata={}, page_content='<ul>'),\n"," Document(metadata={}, page_content='<li>머신러닝 알고리즘 개발</li>'),\n"," Document(metadata={}, page_content='<li>딥러닝 모델 최적화</li>'),\n"," Document(metadata={}, page_content='<li>자연어 처리 및 음성 인식</li>'),\n"," Document(metadata={}, page_content='<li>컴퓨터 비전 및 이미지 분석</li>'),\n"," Document(metadata={}, page_content='<li>빅데이터 분석 및 처리</li>'),\n"," Document(metadata={}, page_content='<li>인공지능 응용 시스템</li>\\n            </ul>\\n        </section>'),\n"," Document(metadata={}, page_content='<section id=\"contact\">'),\n"," Document(metadata={}, page_content='<h2>문의하기</h2>'),\n"," Document(metadata={}, page_content='<p>전주대학교 인공지능학과에 대한 문의는 아래 연락처를 통해 가능합니다:</p>'),\n"," Document(metadata={}, page_content='<ul>'),\n"," Document(metadata={}, page_content='<li>전화: 063-123-4567</li>'),\n"," Document(metadata={}, page_content='<li>이메일: ai@jeonju.ac.kr</li>'),\n"," Document(metadata={}, page_content='<li>주소: 전라북도 전주시 덕진구 전주대학로 99</li>\\n            </ul>'),\n"," Document(metadata={}, page_content='</section>\\n    </div>'),\n"," Document(metadata={}, page_content='<footer>'),\n"," Document(metadata={}, page_content='<p>&copy; 2024 전주대학교 인공지능학과. All rights reserved.</p>\\n    </'),\n"," Document(metadata={}, page_content='footer>\\n</body>\\n</html>')]"]},"metadata":{},"execution_count":14}]}]}

*****[a.ipynb]*****

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import zipfile\n",
    "import os\n",
    "\n",
    "url = \"https://opendart.fss.or.kr/api/corpCode.xml\"\n",
    "api_key = \"ae78fe499bd760f95488498c825c88208d650795\"\n",
    "\n",
    "params = {\n",
    "    \"crtfc_key\" : api_key\n",
    "}\n",
    "\n",
    "response = requests.get(url, params=params)\n",
    "\n",
    "with open(\"./id.zip\", \"wb\") as fp:\n",
    "    fp.write(response.content)\n",
    "\n",
    "zf = zipfile.ZipFile(\"./id.zip\")\n",
    "zf.extractall()\n",
    "\n",
    "xml_path = os.path.abspath(\"./CORPCODE.xml\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xml.etree.ElementTree as ET\n",
    "tree = ET.parse(xml_path)\n",
    "root = tree.getroot()\n",
    "tags_list = root.findall(\"list\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>corp_code</th>\n",
       "      <th>corp_name</th>\n",
       "      <th>stock_code</th>\n",
       "      <th>modify_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>00434003</td>\n",
       "      <td>다코</td>\n",
       "      <td></td>\n",
       "      <td>20170630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>00430964</td>\n",
       "      <td>굿앤엘에스</td>\n",
       "      <td></td>\n",
       "      <td>20170630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>00388953</td>\n",
       "      <td>크레디피아제이십오차유동화전문회사</td>\n",
       "      <td></td>\n",
       "      <td>20170630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>00179984</td>\n",
       "      <td>연방건설산업</td>\n",
       "      <td></td>\n",
       "      <td>20170630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>00420143</td>\n",
       "      <td>브룩스피알아이오토메이션잉크</td>\n",
       "      <td></td>\n",
       "      <td>20170630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109184</th>\n",
       "      <td>01835069</td>\n",
       "      <td>아로하</td>\n",
       "      <td></td>\n",
       "      <td>20240510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109185</th>\n",
       "      <td>01839199</td>\n",
       "      <td>호프인터내셔널</td>\n",
       "      <td></td>\n",
       "      <td>20240510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109186</th>\n",
       "      <td>01823392</td>\n",
       "      <td>포스텍네트웍스</td>\n",
       "      <td></td>\n",
       "      <td>20240510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109187</th>\n",
       "      <td>01837003</td>\n",
       "      <td>농업회사법인복순도가</td>\n",
       "      <td></td>\n",
       "      <td>20240510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109188</th>\n",
       "      <td>01785904</td>\n",
       "      <td>스튜디오에피소드</td>\n",
       "      <td></td>\n",
       "      <td>20240510</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>109189 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       corp_code          corp_name stock_code modify_date\n",
       "0       00434003                 다코               20170630\n",
       "1       00430964              굿앤엘에스               20170630\n",
       "2       00388953  크레디피아제이십오차유동화전문회사               20170630\n",
       "3       00179984             연방건설산업               20170630\n",
       "4       00420143     브룩스피알아이오토메이션잉크               20170630\n",
       "...          ...                ...        ...         ...\n",
       "109184  01835069                아로하               20240510\n",
       "109185  01839199            호프인터내셔널               20240510\n",
       "109186  01823392            포스텍네트웍스               20240510\n",
       "109187  01837003         농업회사법인복순도가               20240510\n",
       "109188  01785904           스튜디오에피소드               20240510\n",
       "\n",
       "[109189 rows x 4 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def convert(tag: ET.Element) -> dict:\n",
    "    conv = {}\n",
    "    for child in list(tag):\n",
    "        conv[child.tag] = child.text\n",
    "    return conv\n",
    "\n",
    "tags_list_dict = [convert(x) for x in tags_list]\n",
    "df = pd.DataFrame(tags_list_dict)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>corp_name</th>\n",
       "      <th>stock_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1947</th>\n",
       "      <td>한빛네트</td>\n",
       "      <td>036720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1959</th>\n",
       "      <td>엔플렉스</td>\n",
       "      <td>040130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1960</th>\n",
       "      <td>동서정보기술</td>\n",
       "      <td>055000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2702</th>\n",
       "      <td>애드모바일</td>\n",
       "      <td>032600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3776</th>\n",
       "      <td>리더컴</td>\n",
       "      <td>056140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109120</th>\n",
       "      <td>라이온켐텍</td>\n",
       "      <td>171120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109121</th>\n",
       "      <td>에어부산</td>\n",
       "      <td>298690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109122</th>\n",
       "      <td>화인베스틸</td>\n",
       "      <td>133820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109123</th>\n",
       "      <td>케이씨씨글라스</td>\n",
       "      <td>344820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109155</th>\n",
       "      <td>인산가</td>\n",
       "      <td>062580</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3813 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       corp_name stock_code\n",
       "1947        한빛네트     036720\n",
       "1959        엔플렉스     040130\n",
       "1960      동서정보기술     055000\n",
       "2702       애드모바일     032600\n",
       "3776         리더컴     056140\n",
       "...          ...        ...\n",
       "109120     라이온켐텍     171120\n",
       "109121      에어부산     298690\n",
       "109122     화인베스틸     133820\n",
       "109123   케이씨씨글라스     344820\n",
       "109155       인산가     062580\n",
       "\n",
       "[3813 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df[df[\"stock_code\"] != \" \"][[\"corp_name\",\"stock_code\"]]\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'corp_name': 1947         한빛네트\n",
       " 1959         엔플렉스\n",
       " 1960       동서정보기술\n",
       " 2702        애드모바일\n",
       " 3776          리더컴\n",
       "            ...   \n",
       " 109120      라이온켐텍\n",
       " 109121       에어부산\n",
       " 109122      화인베스틸\n",
       " 109123    케이씨씨글라스\n",
       " 109155        인산가\n",
       " Name: corp_name, Length: 3813, dtype: object,\n",
       " 'stock_code': 1947      036720\n",
       " 1959      040130\n",
       " 1960      055000\n",
       " 2702      032600\n",
       " 3776      056140\n",
       "            ...  \n",
       " 109120    171120\n",
       " 109121    298690\n",
       " 109122    133820\n",
       " 109123    344820\n",
       " 109155    062580\n",
       " Name: stock_code, Length: 3813, dtype: object}"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = dict(df)\n",
    "# df.to_json(\"KoreaCompany.json\", force_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "기업 정보가 'KoreanCompany.json' 파일로 저장되었습니다.\n"
     ]
    }
   ],
   "source": [
    "import dart_fss as dart_fss\n",
    "import pandas as pd\n",
    "import json\n",
    "\n",
    "api_key = 'a8460d5c5f492a21d43b6cead3d6f493d8708d97'\n",
    "dart_fss.set_api_key(api_key=api_key)\n",
    "\n",
    "corp_list = dart_fss.get_corp_list()\n",
    "\n",
    "lst = corp_list.corps\n",
    "corp_dict = {}\n",
    "\n",
    "for corp in corp_list.corps:\n",
    "    corp_name = corp.corp_name\n",
    "    # print(corp.stock_code)\n",
    "    if corp.stock_code != None:\n",
    "        corp_dict[corp_name] = corp.stock_code\n",
    "\n",
    "# JSON 파일로 저장\n",
    "with open('KoreanCompany.json', 'w', encoding='utf-8') as json_file:\n",
    "    json.dump(corp_dict, json_file, ensure_ascii=False, indent=4)\n",
    "\n",
    "print(\"기업 정보가 'KoreanCompany.json' 파일로 저장되었습니다.\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}


*****[창띄우기.ipynb]*****

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "SystemExit",
     "evalue": "0",
     "output_type": "error",
     "traceback": [
      "An exception has occurred, use %tb to see the full traceback.\n",
      "\u001b[1;31mSystemExit\u001b[0m\u001b[1;31m:\u001b[0m 0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\koll2\\anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3468: UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.\n",
      "  warn(\"To exit: use 'exit', 'quit', or Ctrl-D.\", stacklevel=1)\n"
     ]
    }
   ],
   "source": [
    "## Ex 3-1. 창 띄우기.\n",
    "\n",
    "import sys\n",
    "from PyQt5.QtWidgets import QApplication, QWidget\n",
    "\n",
    "\n",
    "class MyApp(QWidget):\n",
    "\n",
    "    def __init__(self):\n",
    "        super().__init__()\n",
    "        self.initUI()\n",
    "\n",
    "    def initUI(self):\n",
    "        self.setWindowTitle('My First Application')\n",
    "        self.move(300, 300)\n",
    "        self.resize(400, 200)\n",
    "        self.show()\n",
    "\n",
    "\n",
    "if __name__ == '__main__':\n",
    "   app = QApplication(sys.argv)\n",
    "   ex = MyApp()\n",
    "   sys.exit(app.exec_())\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}


